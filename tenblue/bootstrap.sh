#
# Automatically generated by blueprint(7).  Edit at your own risk.
#

set -x

cd "$(dirname "$0")"

MD5SUM="$(find "/usr/local" -printf %T@\\n | md5sum)"
mkdir -p "/usr/local" && tar xf "29c5ccc5e2211847c1e134510023435148d1b6d2.tar" -C "/usr/local"
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_ipmievd=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_rabbitmqserver=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_rsync=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_ssh=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_upstart_ssh=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_upstart_docker=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_docker=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_redisserver=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_sysstat=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_nginx=1
[ "$MD5SUM" != "$(find "/usr/local" -printf %T@\\n | md5sum)" ] && SERVICE_sysvinit_supervisor=1
mkdir -p "/etc"
cat >"/etc/aliases" <<EOF
# See man 5 aliases for format
postmaster:    root
monit: root
EOF
mkdir -p "/etc"
base64 --decode >"/etc/aliases.db" <<EOF

EOF
mkdir -p "/etc/apt/preferences.d"
cat >"/etc/apt/preferences.d/backport-cloud-init-cloud-utils" <<EOF
Package: cloud-init cloud-utils
Pin: release n=jessie-backports
Pin-Priority: 500

EOF
mkdir -p "/etc/apt"
cat >"/etc/apt/sources.list.save" <<EOF

EOF
mkdir -p "/etc/apt/trusted.gpg.d"
ln -s "/usr/share/postgresql-common/pgdg/apt.postgresql.org.gpg" "/etc/apt/trusted.gpg.d/apt.postgresql.org.gpg"
MD5SUM="$(md5sum "/etc/bash_completion.d/docker" 2>/dev/null)"
mkdir -p "/etc/bash_completion.d"
cat >"/etc/bash_completion.d/docker" <<EOF
#!/usr/bin/env bash
# shellcheck disable=SC2016,SC2119,SC2155
#
# Shellcheck ignore list:
#  - SC2016: Expressions don't expand in single quotes, use double quotes for that.
#  - SC2119: Use foo "\$@" if function's \$1 should mean script's \$1.
#  - SC2155: Declare and assign separately to avoid masking return values.
# 
# You can find more details for each warning at the following page: 
#    https://github.com/koalaman/shellcheck/wiki/<SCXXXX>
#
# bash completion file for core docker commands
#
# This script provides completion of:
#  - commands and their options
#  - container ids and names
#  - image repos and tags
#  - filepaths
#
# To enable the completions either:
#  - place this file in /etc/bash_completion.d
#  or
#  - copy this file to e.g. ~/.docker-completion.sh and add the line
#    below to your .bashrc after bash completion features are loaded
#    . ~/.docker-completion.sh
#
# Configuration:
#
# For several commands, the amount of completions can be configured by
# setting environment variables.
#
# DOCKER_COMPLETION_SHOW_CONFIG_IDS
# DOCKER_COMPLETION_SHOW_CONTAINER_IDS
# DOCKER_COMPLETION_SHOW_NETWORK_IDS
# DOCKER_COMPLETION_SHOW_NODE_IDS
# DOCKER_COMPLETION_SHOW_PLUGIN_IDS
# DOCKER_COMPLETION_SHOW_SECRET_IDS
# DOCKER_COMPLETION_SHOW_SERVICE_IDS
#   "no"  - Show names only (default)
#   "yes" - Show names and ids
#
# You can tailor completion for the "events", "history", "inspect", "run",
# "rmi" and "save" commands by settings the following environment
# variables:
#
# DOCKER_COMPLETION_SHOW_IMAGE_IDS
#   "none" - Show names only (default)
#   "non-intermediate" - Show names and ids, but omit intermediate image IDs
#   "all" - Show names and ids, including intermediate image IDs
#
# DOCKER_COMPLETION_SHOW_TAGS
#   "yes" - include tags in completion options (default)
#   "no"  - don't include tags in completion options

#
# Note:
# Currently, the completions will not work if the docker daemon is not
# bound to the default communication port/socket
# If the docker daemon is using a unix socket for communication your user
# must have access to the socket for the completions to function correctly
#
# Note for developers:
# Please arrange options sorted alphabetically by long name with the short
# options immediately following their corresponding long form.
# This order should be applied to lists, alternatives and code blocks.

__docker_previous_extglob_setting=\$(shopt -p extglob)
shopt -s extglob

__docker_q() {
	docker \${host:+-H "\$host"} \${config:+--config "\$config"} 2>/dev/null "\$@"
}

# __docker_configs returns a list of configs. Additional options to
# \`docker config ls\` may be specified in order to filter the list, e.g.
# \`__docker_configs --filter label=stage=production\`.
# By default, only names are returned.
# Set DOCKER_COMPLETION_SHOW_CONFIG_IDS=yes to also complete IDs.
# An optional first option \`--id|--name\` may be used to limit the
# output to the IDs or names of matching items. This setting takes
# precedence over the environment setting.
__docker_configs() {
	local format
	if [ "\$1" = "--id" ] ; then
		format='{{.ID}}'
		shift
	elif [ "\$1" = "--name" ] ; then
		format='{{.Name}}'
		shift
	elif [ "\$DOCKER_COMPLETION_SHOW_CONFIG_IDS" = yes ] ; then
		format='{{.ID}} {{.Name}}'
	else
		format='{{.Name}}'
	fi

	__docker_q config ls --format "\$format" "\$@"
}

# __docker_complete_configs applies completion of configs based on the current value
# of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
__docker_complete_configs() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_configs "\$@")" -- "\$current") )
}

# __docker_containers returns a list of containers. Additional options to
# \`docker ps\` may be specified in order to filter the list, e.g.
# \`__docker_containers --filter status=running\`
# By default, only names are returned.
# Set DOCKER_COMPLETION_SHOW_CONTAINER_IDS=yes to also complete IDs.
# An optional first option \`--id|--name\` may be used to limit the
# output to the IDs or names of matching items. This setting takes
# precedence over the environment setting.
__docker_containers() {
	local format
	if [ "\$1" = "--id" ] ; then
		format='{{.ID}}'
		shift
	elif [ "\$1" = "--name" ] ; then
		format='{{.Names}}'
		shift
	elif [ "\${DOCKER_COMPLETION_SHOW_CONTAINER_IDS}" = yes ] ; then
		format='{{.ID}} {{.Names}}'
	else
		format='{{.Names}}'
	fi
	__docker_q ps --format "\$format" "\$@"
}

# __docker_complete_containers applies completion of containers based on the current
# value of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
# Additional filters may be appended, see \`__docker_containers\`.
__docker_complete_containers() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_containers "\$@")" -- "\$current") )
}

__docker_complete_containers_all() {
	__docker_complete_containers "\$@" --all
}

# shellcheck disable=SC2120
__docker_complete_containers_removable() {
	__docker_complete_containers "\$@" --filter status=created --filter status=exited
}

__docker_complete_containers_running() {
	__docker_complete_containers "\$@" --filter status=running
}

# shellcheck disable=SC2120
__docker_complete_containers_stopped() {
	__docker_complete_containers "\$@" --filter status=exited
}

# shellcheck disable=SC2120
__docker_complete_containers_unpauseable() {
	__docker_complete_containers "\$@" --filter status=paused
}

__docker_complete_container_names() {
	local containers=( \$(__docker_q ps -aq --no-trunc) )
	local names=( \$(__docker_q inspect --format '{{.Name}}' "\${containers[@]}") )
	names=( "\${names[@]#/}" ) # trim off the leading "/" from the container names
	COMPREPLY=( \$(compgen -W "\${names[*]}" -- "\$cur") )
}

__docker_complete_container_ids() {
	local containers=( \$(__docker_q ps -aq) )
	COMPREPLY=( \$(compgen -W "\${containers[*]}" -- "\$cur") )
}

__docker_images() {
	local images_args=""

	case "\$DOCKER_COMPLETION_SHOW_IMAGE_IDS" in
		all)
			images_args="--no-trunc -a"
			;;
		non-intermediate)
			images_args="--no-trunc"
			;;
	esac

	local repo_print_command
	if [ "\${DOCKER_COMPLETION_SHOW_TAGS:-yes}" = "yes" ]; then
		repo_print_command='print \$1; print \$1":"\$2'
	else
		repo_print_command='print \$1'
	fi

	local awk_script
	case "\$DOCKER_COMPLETION_SHOW_IMAGE_IDS" in
		all|non-intermediate)
			awk_script='NR>1 { print \$3; if (\$1 != "<none>") { '"\$repo_print_command"' } }'
			;;
		none|*)
			awk_script='NR>1 && \$1 != "<none>" { '"\$repo_print_command"' }'
			;;
	esac

	__docker_q images \$images_args | awk "\$awk_script" | grep -v '<none>\$'
}

__docker_complete_images() {
	COMPREPLY=( \$(compgen -W "\$(__docker_images)" -- "\$cur") )
	__ltrim_colon_completions "\$cur"
}

__docker_complete_image_repos() {
	local repos="\$(__docker_q images | awk 'NR>1 && \$1 != "<none>" { print \$1 }')"
	COMPREPLY=( \$(compgen -W "\$repos" -- "\$cur") )
}

__docker_complete_image_repos_and_tags() {
	local reposAndTags="\$(__docker_q images | awk 'NR>1 && \$1 != "<none>" { print \$1; print \$1":"\$2 }')"
	COMPREPLY=( \$(compgen -W "\$reposAndTags" -- "\$cur") )
	__ltrim_colon_completions "\$cur"
}

# __docker_networks returns a list of all networks. Additional options to
# \`docker network ls\` may be specified in order to filter the list, e.g.
# \`__docker_networks --filter type=custom\`
# By default, only names are returned.
# Set DOCKER_COMPLETION_SHOW_NETWORK_IDS=yes to also complete IDs.
# An optional first option \`--id|--name\` may be used to limit the
# output to the IDs or names of matching items. This setting takes
# precedence over the environment setting.
__docker_networks() {
	local format
	if [ "\$1" = "--id" ] ; then
		format='{{.ID}}'
		shift
	elif [ "\$1" = "--name" ] ; then
		format='{{.Name}}'
		shift
	elif [ "\${DOCKER_COMPLETION_SHOW_NETWORK_IDS}" = yes ] ; then
		format='{{.ID}} {{.Name}}'
	else
		format='{{.Name}}'
	fi
	__docker_q network ls --format "\$format" "\$@"
}

# __docker_complete_networks applies completion of networks based on the current
# value of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
# Additional filters may be appended, see \`__docker_networks\`.
__docker_complete_networks() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_networks "\$@")" -- "\$current") )
}

# shellcheck disable=SC2128,SC2178
__docker_complete_containers_in_network() {
	local containers=\$(__docker_q network inspect -f '{{range \$i, \$c := .Containers}}{{\$i}} {{\$c.Name}} {{end}}' "\$1")
	COMPREPLY=( \$(compgen -W "\$containers" -- "\$cur") )
}

# __docker_volumes returns a list of all volumes. Additional options to
# \`docker volume ls\` may be specified in order to filter the list, e.g.
# \`__docker_volumes --filter dangling=true\`
# Because volumes do not have IDs, this function does not distinguish between
# IDs and names.
__docker_volumes() {
	__docker_q volume ls -q "\$@"
}

# __docker_complete_volumes applies completion of volumes based on the current
# value of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
# Additional filters may be appended, see \`__docker_volumes\`.
__docker_complete_volumes() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_volumes "\$@")" -- "\$current") )
}

# __docker_plugins_bundled returns a list of all plugins of a given type.
# The type has to be specified with the mandatory option \`--type\`.
# Valid types are: Network, Volume, Authorization.
# Completions may be added or removed with \`--add\` and \`--remove\`
# This function only deals with plugins that come bundled with Docker.
# For plugins managed by \`docker plugin\`, see \`__docker_plugins_installed\`.
__docker_plugins_bundled() {
	local type add=() remove=()
	while true ; do
		case "\$1" in
			--type)
				type="\$2"
				shift 2
				;;
			--add)
				add+=("\$2")
				shift 2
				;;
			--remove)
				remove+=("\$2")
				shift 2
				;;
			*)
				break
				;;
		esac
	done

	local plugins=(\$(__docker_q info --format "{{range \\\$i, \\\$p := .Plugins.\$type}}{{.}} {{end}}"))
	for del in "\${remove[@]}" ; do
		plugins=(\${plugins[@]/\$del/})
	done
	# shellcheck disable=SC2145
	echo "\${plugins[@]} \${add[@]}"
}

# __docker_complete_plugins_bundled applies completion of plugins based on the current
# value of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
# The plugin type has to be specified with the next option \`--type\`.
# This function only deals with plugins that come bundled with Docker.
# For completion of plugins managed by \`docker plugin\`, see
# \`__docker_complete_plugins_installed\`.
__docker_complete_plugins_bundled() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_plugins_bundled "\$@")" -- "\$current") )
}

# __docker_plugins_installed returns a list of all plugins that were installed with
# the Docker plugin API.
# By default, only names are returned.
# Set DOCKER_COMPLETION_SHOW_PLUGIN_IDS=yes to also complete IDs.
# Additional options to \`docker plugin ls\` may be specified in order to filter the list,
# e.g. \`__docker_plugins_installed --filter enabled=true\`
# For built-in pugins, see \`__docker_plugins_bundled\`.
__docker_plugins_installed() {
	local format
	if [ "\$DOCKER_COMPLETION_SHOW_PLUGIN_IDS" = yes ] ; then
		format='{{.ID}} {{.Name}}'
	else
		format='{{.Name}}'
	fi
	__docker_q plugin ls --format "\$format" "\$@"
}

# __docker_complete_plugins_installed applies completion of plugins that were installed
# with the Docker plugin API, based on the current value of \`\$cur\` or the value of
# the optional first option \`--cur\`, if given.
# Additional filters may be appended, see \`__docker_plugins_installed\`.
# For completion of built-in pugins, see \`__docker_complete_plugins_bundled\`.
__docker_complete_plugins_installed() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_plugins_installed "\$@")" -- "\$current") )
}

__docker_runtimes() {
	__docker_q info | sed -n 's/^Runtimes: \\(.*\\)/\\1/p'
}

__docker_complete_runtimes() {
	COMPREPLY=( \$(compgen -W "\$(__docker_runtimes)" -- "\$cur") )
}

# __docker_secrets returns a list of secrets. Additional options to
# \`docker secret ls\` may be specified in order to filter the list, e.g.
# \`__docker_secrets --filter label=stage=production\`
# By default, only names are returned.
# Set DOCKER_COMPLETION_SHOW_SECRET_IDS=yes to also complete IDs.
# An optional first option \`--id|--name\` may be used to limit the
# output to the IDs or names of matching items. This setting takes
# precedence over the environment setting.
__docker_secrets() {
	local format
	if [ "\$1" = "--id" ] ; then
		format='{{.ID}}'
		shift
	elif [ "\$1" = "--name" ] ; then
		format='{{.Name}}'
		shift
	elif [ "\$DOCKER_COMPLETION_SHOW_SECRET_IDS" = yes ] ; then
		format='{{.ID}} {{.Name}}'
	else
		format='{{.Name}}'
	fi

	__docker_q secret ls --format "\$format" "\$@"
}

# __docker_complete_secrets applies completion of secrets based on the current value
# of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
__docker_complete_secrets() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_secrets "\$@")" -- "\$current") )
}

# __docker_stacks returns a list of all stacks.
__docker_stacks() {
	__docker_q stack ls | awk 'NR>1 {print \$1}'
}

# __docker_complete_stacks applies completion of stacks based on the current value
# of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
__docker_complete_stacks() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_stacks "\$@")" -- "\$current") )
}

# __docker_nodes returns a list of all nodes. Additional options to
# \`docker node ls\` may be specified in order to filter the list, e.g.
# \`__docker_nodes --filter role=manager\`
# By default, only node names are returned.
# Set DOCKER_COMPLETION_SHOW_NODE_IDS=yes to also complete node IDs.
# An optional first option \`--id|--name\` may be used to limit the
# output to the IDs or names of matching items. This setting takes
# precedence over the environment setting.
# Completions may be added with \`--add\`, e.g. \`--add self\`.
__docker_nodes() {
	local format
	if [ "\$DOCKER_COMPLETION_SHOW_NODE_IDS" = yes ] ; then
		format='{{.ID}} {{.Hostname}}'
	else
		format='{{.Hostname}}'
	fi

	local add=()

	while true ; do
		case "\$1" in
			--id)
				format='{{.ID}}'
				shift
				;;
			--name)
				format='{{.Hostname}}'
				shift
				;;
			--add)
				add+=("\$2")
				shift 2
				;;
			*)
				break
				;;
		esac
	done

	echo "\$(__docker_q node ls --format "\$format" "\$@")" "\${add[@]}"
}

# __docker_complete_nodes applies completion of nodes based on the current
# value of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
# Additional filters may be appended, see \`__docker_nodes\`.
__docker_complete_nodes() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_nodes "\$@")" -- "\$current") )
}

# __docker_services returns a list of all services. Additional options to
# \`docker service ls\` may be specified in order to filter the list, e.g.
# \`__docker_services --filter name=xxx\`
# By default, only node names are returned.
# Set DOCKER_COMPLETION_SHOW_SERVICE_IDS=yes to also complete IDs.
# An optional first option \`--id|--name\` may be used to limit the
# output to the IDs or names of matching items. This setting takes
# precedence over the environment setting.
__docker_services() {
	local fields='\$2'  # default: service name only
	[ "\${DOCKER_COMPLETION_SHOW_SERVICE_IDS}" = yes ] && fields='\$1,\$2' # ID & name

	if [ "\$1" = "--id" ] ; then
		fields='\$1' # IDs only
		shift
	elif [ "\$1" = "--name" ] ; then
		fields='\$2' # names only
		shift
	fi
        __docker_q service ls "\$@" | awk "NR>1 {print \$fields}"
}

# __docker_complete_services applies completion of services based on the current
# value of \`\$cur\` or the value of the optional first option \`--cur\`, if given.
# Additional filters may be appended, see \`__docker_services\`.
__docker_complete_services() {
	local current="\$cur"
	if [ "\$1" = "--cur" ] ; then
		current="\$2"
		shift 2
	fi
	COMPREPLY=( \$(compgen -W "\$(__docker_services "\$@")" -- "\$current") )
}

# __docker_tasks returns a list of all task IDs.
__docker_tasks() {
	__docker_q service ps --format '{{.ID}}' ""
}

# __docker_complete_services_and_tasks applies completion of services and task IDs.
# shellcheck disable=SC2120
__docker_complete_services_and_tasks() {
	COMPREPLY=( \$(compgen -W "\$(__docker_services "\$@") \$(__docker_tasks)" -- "\$cur") )
}

# __docker_append_to_completions appends the word passed as an argument to every
# word in \`\$COMPREPLY\`.
# Normally you do this with \`compgen -S\` while generating the completions.
# This function allows you to append a suffix later. It allows you to use
# the __docker_complete_XXX functions in cases where you need a suffix.
__docker_append_to_completions() {
	COMPREPLY=( \${COMPREPLY[@]/%/"\$1"} )
}

# __docker_daemon_is_experimental tests whether the currently configured Docker
# daemon runs in experimental mode. If so, the function exits with 0 (true).
# Otherwise, or if the result cannot be determined, the exit value is 1 (false).
__docker_daemon_is_experimental() {
	[ "\$(__docker_q version -f '{{.Server.Experimental}}')" = "true" ]
}

# __docker_daemon_os_is tests whether the currently configured Docker daemon runs
# on the operating system passed in as the first argument.
# It does so by querying the daemon for its OS. The result is cached for the duration
# of one invocation of bash completion so that this function can be used to test for
# several different operating systems without additional costs.
# Known operating systems: linux, windows.
__docker_daemon_os_is() {
	local expected_os="\$1"
	local actual_os=\${daemon_os=\$(__docker_q version -f '{{.Server.Os}}')}
	[ "\$actual_os" = "\$expected_os" ]
}

# __docker_pos_first_nonflag finds the position of the first word that is neither
# option nor an option's argument. If there are options that require arguments,
# you should pass a glob describing those options, e.g. "--option1|-o|--option2"
# Use this function to restrict completions to exact positions after the argument list.
__docker_pos_first_nonflag() {
	local argument_flags=\$1

	local counter=\$((\${subcommand_pos:-\${command_pos}} + 1))
	while [ "\$counter" -le "\$cword" ]; do
		if [ -n "\$argument_flags" ] && eval "case '\${words[\$counter]}' in \$argument_flags) true ;; *) false ;; esac"; then
			(( counter++ ))
			# eat "=" in case of --option=arg syntax
			[ "\${words[\$counter]}" = "=" ] && (( counter++ ))
		else
			case "\${words[\$counter]}" in
				-*)
					;;
				*)
					break
					;;
			esac
		fi

		# Bash splits words at "=", retaining "=" as a word, examples:
		# "--debug=false" => 3 words, "--log-opt syslog-facility=daemon" => 4 words
		while [ "\${words[\$counter + 1]}" = "=" ] ; do
			counter=\$(( counter + 2))
		done

		(( counter++ ))
	done

	echo \$counter
}

# __docker_map_key_of_current_option returns \`key\` if we are currently completing the
# value of a map option (\`key=value\`) which matches the extglob given as an argument.
# This function is needed for key-specific completions.
__docker_map_key_of_current_option() {
	local glob="\$1"

	local key glob_pos
	if [ "\$cur" = "=" ] ; then        # key= case
		key="\$prev"
		glob_pos=\$((cword - 2))
	elif [[ \$cur == *=* ]] ; then     # key=value case (OSX)
		key=\${cur%=*}
		glob_pos=\$((cword - 1))
	elif [ "\$prev" = "=" ] ; then
		key=\${words[\$cword - 2]}  # key=value case
		glob_pos=\$((cword - 3))
	else
		return
	fi

	[ "\${words[\$glob_pos]}" = "=" ] && ((glob_pos--))  # --option=key=value syntax

	[[ \${words[\$glob_pos]} == @(\$glob) ]] && echo "\$key"
}

# __docker_value_of_option returns the value of the first option matching \`option_glob\`.
# Valid values for \`option_glob\` are option names like \`--log-level\` and globs like
# \`--log-level|-l\`
# Only positions between the command and the current word are considered.
__docker_value_of_option() {
	local option_extglob=\$(__docker_to_extglob "\$1")

	local counter=\$((command_pos + 1))
	while [ "\$counter" -lt "\$cword" ]; do
		case \${words[\$counter]} in
			\$option_extglob )
				echo "\${words[\$counter + 1]}"
				break
				;;
		esac
		(( counter++ ))
	done
}

# __docker_to_alternatives transforms a multiline list of strings into a single line
# string with the words separated by \`|\`.
# This is used to prepare arguments to __docker_pos_first_nonflag().
__docker_to_alternatives() {
	local parts=( \$1 )
	local IFS='|'
	echo "\${parts[*]}"
}

# __docker_to_extglob transforms a multiline list of options into an extglob pattern
# suitable for use in case statements.
__docker_to_extglob() {
	local extglob=\$( __docker_to_alternatives "\$1" )
	echo "@(\$extglob)"
}

# __docker_subcommands processes subcommands
# Locates the first occurrence of any of the subcommands contained in the
# first argument. In case of a match, calls the corresponding completion
# function and returns 0.
# If no match is found, 1 is returned. The calling function can then
# continue processing its completion.
#
# TODO if the preceding command has options that accept arguments and an
# argument is equal ot one of the subcommands, this is falsely detected as
# a match.
__docker_subcommands() {
	local subcommands="\$1"

	local counter=\$((command_pos + 1))
	while [ "\$counter" -lt "\$cword" ]; do
		case "\${words[\$counter]}" in
			\$(__docker_to_extglob "\$subcommands") )
				subcommand_pos=\$counter
				local subcommand=\${words[\$counter]}
				local completions_func=_docker_\${command}_\${subcommand//-/_}
				declare -F "\$completions_func" >/dev/null && "\$completions_func"
				return 0
				;;
		esac
		(( counter++ ))
	done
	return 1
}

# __docker_nospace suppresses trailing whitespace
__docker_nospace() {
	# compopt is not available in ancient bash versions
	type compopt &>/dev/null && compopt -o nospace
}

__docker_complete_resolved_hostname() {
	command -v host >/dev/null 2>&1 || return
	COMPREPLY=( \$(host 2>/dev/null "\${cur%:}" | awk '/has address/ {print \$4}') )
}

# __docker_local_interfaces returns a list of the names and addresses of all
# local network interfaces.
# If \`--ip-only\` is passed as a first argument, only addresses are returned.
__docker_local_interfaces() {
	command -v ip >/dev/null 2>&1 || return

	local format
	if [ "\$1" = "--ip-only" ] ; then
		format='\\1'
		shift
	else
		 format='\\1 \\2'
	fi

	ip addr show scope global 2>/dev/null | sed -n "s| \\+inet \\([0-9.]\\+\\).* \\([^ ]\\+\\)|\$format|p"
}

# __docker_complete_local_interfaces applies completion of the names and addresses of all
# local network interfaces based on the current value of \`\$cur\`.
# An additional value can be added to the possible completions with an \`--add\` argument.
__docker_complete_local_interfaces() {
	local additional_interface
	if [ "\$1" = "--add" ] ; then
		additional_interface="\$2"
		shift 2
	fi

	COMPREPLY=( \$( compgen -W "\$(__docker_local_interfaces "\$@") \$additional_interface" -- "\$cur" ) )
}

# __docker_complete_local_ips applies completion of the addresses of all local network
# interfaces based on the current value of \`\$cur\`.
__docker_complete_local_ips() {
	__docker_complete_local_interfaces --ip-only
}

# __docker_complete_capabilities_addable completes Linux capabilities which are
# not granted by default and may be added.
# see https://docs.docker.com/engine/reference/run/#/runtime-privilege-and-linux-capabilities
__docker_complete_capabilities_addable() {
	COMPREPLY=( \$( compgen -W "
		ALL
		AUDIT_CONTROL
		BLOCK_SUSPEND
		DAC_READ_SEARCH
		IPC_LOCK
		IPC_OWNER
		LEASE
		LINUX_IMMUTABLE
		MAC_ADMIN
		MAC_OVERRIDE
		NET_ADMIN
		NET_BROADCAST
		SYS_ADMIN
		SYS_BOOT
		SYSLOG
		SYS_MODULE
		SYS_NICE
		SYS_PACCT
		SYS_PTRACE
		SYS_RAWIO
		SYS_RESOURCE
		SYS_TIME
		SYS_TTY_CONFIG
		WAKE_ALARM
	" -- "\$cur" ) )
}

# __docker_complete_capabilities_droppable completes Linux capability options which are
# allowed by default and can be dropped.
# see https://docs.docker.com/engine/reference/run/#/runtime-privilege-and-linux-capabilities
__docker_complete_capabilities_droppable() {
	COMPREPLY=( \$( compgen -W "
		ALL
		AUDIT_WRITE
		CHOWN
		DAC_OVERRIDE
		FOWNER
		FSETID
		KILL
		MKNOD
		NET_BIND_SERVICE
		NET_RAW
		SETFCAP
		SETGID
		SETPCAP
		SETUID
		SYS_CHROOT
	" -- "\$cur" ) )
}

__docker_complete_detach_keys() {
	case "\$prev" in
		--detach-keys)
			case "\$cur" in
				*,)
					COMPREPLY=( \$( compgen -W "\${cur}ctrl-" -- "\$cur" ) )
					;;
				*)
					COMPREPLY=( \$( compgen -W "ctrl-" -- "\$cur" ) )
					;;
			esac

			__docker_nospace
			return
			;;
	esac
	return 1
}

__docker_complete_isolation() {
	COMPREPLY=( \$( compgen -W "default hyperv process" -- "\$cur" ) )
}

__docker_complete_log_drivers() {
	COMPREPLY=( \$( compgen -W "
		awslogs
		etwlogs
		fluentd
		gcplogs
		gelf
		journald
		json-file
		logentries
		none
		splunk
		syslog
	" -- "\$cur" ) )
}

__docker_complete_log_options() {
	# see repository docker/docker.github.io/engine/admin/logging/

	# really global options, defined in https://github.com/moby/moby/blob/master/daemon/logger/factory.go
	local common_options1="max-buffer-size mode"
	# common options defined in https://github.com/moby/moby/blob/master/daemon/logger/loginfo.go
	# but not implemented in all log drivers
	local common_options2="env env-regex labels"

	# awslogs does not implement the \$common_options2.
	local awslogs_options="\$common_options1 awslogs-create-group awslogs-credentials-endpoint awslogs-datetime-format awslogs-group awslogs-multiline-pattern awslogs-region awslogs-stream tag"

	local fluentd_options="\$common_options1 \$common_options2 fluentd-address fluentd-async-connect fluentd-buffer-limit fluentd-retry-wait fluentd-max-retries fluentd-sub-second-precision tag"
	local gcplogs_options="\$common_options1 \$common_options2 gcp-log-cmd gcp-meta-id gcp-meta-name gcp-meta-zone gcp-project"
	local gelf_options="\$common_options1 \$common_options2 gelf-address gelf-compression-level gelf-compression-type gelf-tcp-max-reconnect gelf-tcp-reconnect-delay tag"
	local journald_options="\$common_options1 \$common_options2 tag"
	local json_file_options="\$common_options1 \$common_options2 max-file max-size"
	local logentries_options="\$common_options1 \$common_options2 line-only logentries-token tag"
	local splunk_options="\$common_options1 \$common_options2 splunk-caname splunk-capath splunk-format splunk-gzip splunk-gzip-level splunk-index splunk-insecureskipverify splunk-source splunk-sourcetype splunk-token splunk-url splunk-verify-connection tag"
	local syslog_options="\$common_options1 \$common_options2 syslog-address syslog-facility syslog-format syslog-tls-ca-cert syslog-tls-cert syslog-tls-key syslog-tls-skip-verify tag"

	local all_options="\$fluentd_options \$gcplogs_options \$gelf_options \$journald_options \$logentries_options \$json_file_options \$syslog_options \$splunk_options"

	case \$(__docker_value_of_option --log-driver) in
		'')
			COMPREPLY=( \$( compgen -W "\$all_options" -S = -- "\$cur" ) )
			;;
		awslogs)
			COMPREPLY=( \$( compgen -W "\$awslogs_options" -S = -- "\$cur" ) )
			;;
		fluentd)
			COMPREPLY=( \$( compgen -W "\$fluentd_options" -S = -- "\$cur" ) )
			;;
		gcplogs)
			COMPREPLY=( \$( compgen -W "\$gcplogs_options" -S = -- "\$cur" ) )
			;;
		gelf)
			COMPREPLY=( \$( compgen -W "\$gelf_options" -S = -- "\$cur" ) )
			;;
		journald)
			COMPREPLY=( \$( compgen -W "\$journald_options" -S = -- "\$cur" ) )
			;;
		json-file)
			COMPREPLY=( \$( compgen -W "\$json_file_options" -S = -- "\$cur" ) )
			;;
		logentries)
			COMPREPLY=( \$( compgen -W "\$logentries_options" -S = -- "\$cur" ) )
			;;
		syslog)
			COMPREPLY=( \$( compgen -W "\$syslog_options" -S = -- "\$cur" ) )
			;;
		splunk)
			COMPREPLY=( \$( compgen -W "\$splunk_options" -S = -- "\$cur" ) )
			;;
		*)
			return
			;;
	esac

	__docker_nospace
}

__docker_complete_log_driver_options() {
	local key=\$(__docker_map_key_of_current_option '--log-opt')
	case "\$key" in
		awslogs-create-group)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
		awslogs-credentials-endpoint)
			COMPREPLY=( \$( compgen -W "/" -- "\${cur##*=}" ) )
			__docker_nospace
			return
			;;
		fluentd-async-connect)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
		fluentd-sub-second-precision)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
		gelf-address)
			COMPREPLY=( \$( compgen -W "tcp udp" -S "://" -- "\${cur##*=}" ) )
			__docker_nospace
			return
			;;
		gelf-compression-level)
			COMPREPLY=( \$( compgen -W "1 2 3 4 5 6 7 8 9" -- "\${cur##*=}" ) )
			return
			;;
		gelf-compression-type)
			COMPREPLY=( \$( compgen -W "gzip none zlib" -- "\${cur##*=}" ) )
			return
			;;
		line-only)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
		mode)
			COMPREPLY=( \$( compgen -W "blocking non-blocking" -- "\${cur##*=}" ) )
			return
			;;
		syslog-address)
			COMPREPLY=( \$( compgen -W "tcp:// tcp+tls:// udp:// unix://" -- "\${cur##*=}" ) )
			__docker_nospace
			__ltrim_colon_completions "\${cur}"
			return
			;;
		syslog-facility)
			COMPREPLY=( \$( compgen -W "
				auth
				authpriv
				cron
				daemon
				ftp
				kern
				local0
				local1
				local2
				local3
				local4
				local5
				local6
				local7
				lpr
				mail
				news
				syslog
				user
				uucp
			" -- "\${cur##*=}" ) )
			return
			;;
		syslog-format)
			COMPREPLY=( \$( compgen -W "rfc3164 rfc5424 rfc5424micro" -- "\${cur##*=}" ) )
			return
			;;
		syslog-tls-ca-cert|syslog-tls-cert|syslog-tls-key)
			_filedir
			return
			;;
		syslog-tls-skip-verify)
			COMPREPLY=( \$( compgen -W "true" -- "\${cur##*=}" ) )
			return
			;;
		splunk-url)
			COMPREPLY=( \$( compgen -W "http:// https://" -- "\${cur##*=}" ) )
			__docker_nospace
			__ltrim_colon_completions "\${cur}"
			return
			;;
		splunk-gzip|splunk-insecureskipverify|splunk-verify-connection)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
		splunk-format)
			COMPREPLY=( \$( compgen -W "inline json raw" -- "\${cur##*=}" ) )
			return
			;;
	esac
	return 1
}

__docker_complete_log_levels() {
	COMPREPLY=( \$( compgen -W "debug info warn error fatal" -- "\$cur" ) )
}

__docker_complete_restart() {
	case "\$prev" in
		--restart)
			case "\$cur" in
				on-failure:*)
					;;
				*)
					COMPREPLY=( \$( compgen -W "always no on-failure on-failure: unless-stopped" -- "\$cur") )
					;;
			esac
			return
			;;
	esac
	return 1
}

# __docker_complete_signals returns a subset of the available signals that is most likely
# relevant in the context of docker containers
__docker_complete_signals() {
	local signals=(
		SIGCONT
		SIGHUP
		SIGINT
		SIGKILL
		SIGQUIT
		SIGSTOP
		SIGTERM
		SIGUSR1
		SIGUSR2
	)
	COMPREPLY=( \$( compgen -W "\${signals[*]} \${signals[*]#SIG}" -- "\$( echo "\$cur" | tr '[:lower:]' '[:upper:]')" ) )
}

__docker_complete_user_group() {
	if [[ \$cur == *:* ]] ; then
		COMPREPLY=( \$(compgen -g -- "\${cur#*:}") )
	else
		COMPREPLY=( \$(compgen -u -S : -- "\$cur") )
		__docker_nospace
	fi
}

_docker_docker() {
	# global options that may appear after the docker command
	local boolean_options="
		\$global_boolean_options
		--help
		--version -v
	"

	case "\$prev" in
		--config)
			_filedir -d
			return
			;;
		--log-level|-l)
			__docker_complete_log_levels
			return
			;;
		\$(__docker_to_extglob "\$global_options_with_args") )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "\$boolean_options \$global_options_with_args" -- "\$cur" ) )
			;;
		*)
			local counter=\$( __docker_pos_first_nonflag "\$(__docker_to_extglob "\$global_options_with_args")" )
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_daemon_is_experimental && commands+=(\${experimental_commands[*]})
				COMPREPLY=( \$( compgen -W "\${commands[*]} help" -- "\$cur" ) )
			fi
			;;
	esac
}

_docker_attach() {
	_docker_container_attach
}

_docker_build() {
	_docker_image_build
}


_docker_checkpoint() {
	local subcommands="
		create
		ls
		rm
	"
	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_checkpoint_create() {
	case "\$prev" in
		--checkpoint-dir)
			_filedir -d
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--checkpoint-dir --help --leave-running" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--checkpoint-dir')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_running
			fi
			;;
	esac
}

_docker_checkpoint_ls() {
	case "\$prev" in
		--checkpoint-dir)
			_filedir -d
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--checkpoint-dir --help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--checkpoint-dir')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
			fi
			;;
	esac
}

_docker_checkpoint_rm() {
	case "\$prev" in
		--checkpoint-dir)
			_filedir -d
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--checkpoint-dir --help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--checkpoint-dir')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
			elif [ "\$cword" -eq "\$((counter + 1))" ]; then
				COMPREPLY=( \$( compgen -W "\$(__docker_q checkpoint ls "\$prev" | sed 1d)" -- "\$cur" ) )
			fi
			;;
	esac
}


_docker_config() {
	local subcommands="
		create
		inspect
		ls
		rm
	"
	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_config_create() {
	case "\$prev" in
		--label|-l)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --label -l" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--label|-l')
			if [ "\$cword" -eq "\$((counter + 1))" ]; then
				_filedir
			fi
			;;
	esac
}

_docker_config_inspect() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help --pretty" -- "\$cur" ) )
			;;
		*)
			__docker_complete_configs
			;;
	esac
}

_docker_config_list() {
	_docker_config_ls
}

_docker_config_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		id)
			__docker_complete_configs --cur "\${cur##*=}" --id
			return
			;;
		name)
			__docker_complete_configs --cur "\${cur##*=}" --name
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "id label name" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format --filter -f --help --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_config_remove() {
	_docker_config_rm
}

_docker_config_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_configs
			;;
	esac
}


_docker_container() {
	local subcommands="
		attach
		commit
		cp
		create
		diff
		exec
		export
		inspect
		kill
		logs
		ls
		pause
		port
		prune
		rename
		restart
		rm
		run
		start
		stats
		stop
		top
		unpause
		update
		wait
	"
	local aliases="
		list
		ps
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_container_attach() {
	__docker_complete_detach_keys && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--detach-keys --help --no-stdin --sig-proxy=false" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--detach-keys')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_running
			fi
			;;
	esac
}

_docker_container_commit() {
	case "\$prev" in
		--author|-a|--change|-c|--message|-m)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--author -a --change -c --help --message -m --pause=false -p=false" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--author|-a|--change|-c|--message|-m')

			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
				return
			fi
			(( counter++ ))

			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_image_repos_and_tags
				return
			fi
			;;
	esac
}

_docker_container_cp() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--follow-link -L --help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				case "\$cur" in
					*:)
						return
						;;
					*)
						# combined container and filename completion
						_filedir
						local files=( \${COMPREPLY[@]} )

						__docker_complete_containers_all
						COMPREPLY=( \$( compgen -W "\${COMPREPLY[*]}" -S ':' ) )
						local containers=( \${COMPREPLY[@]} )

						COMPREPLY=( \$( compgen -W "\${files[*]} \${containers[*]}" -- "\$cur" ) )
						# shellcheck disable=SC2128
						if [[ "\$COMPREPLY" == *: ]]; then
							__docker_nospace
						fi
						return
						;;
				esac
			fi
			(( counter++ ))

			if [ "\$cword" -eq "\$counter" ]; then
				if [ -e "\$prev" ]; then
					__docker_complete_containers_all
					COMPREPLY=( \$( compgen -W "\${COMPREPLY[*]}" -S ':' ) )
					__docker_nospace
				else
					_filedir
				fi
				return
			fi
			;;
	esac
}

_docker_container_create() {
	_docker_container_run_and_create
}

_docker_container_diff() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
			fi
			;;
	esac
}

_docker_container_exec() {
	__docker_complete_detach_keys && return

	case "\$prev" in
		--env|-e)
			# we do not append a "=" here because "-e VARNAME" is legal syntax, too
			COMPREPLY=( \$( compgen -e -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--user|-u)
			__docker_complete_user_group
			return
			;;
		--workdir|-w)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--detach -d --detach-keys --env -e --help --interactive -i --privileged -t --tty -u --user --workdir -w" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_running
			;;
	esac
}

_docker_container_export() {
	case "\$prev" in
		--output|-o)
			_filedir
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --output -o" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
			fi
			;;
	esac
}

_docker_container_inspect() {
	_docker_inspect --type container
}

_docker_container_kill() {
	case "\$prev" in
		--signal|-s)
			__docker_complete_signals
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --signal -s" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_running
			;;
	esac
}

_docker_container_logs() {
	case "\$prev" in
		--since|--tail|--until)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--details --follow -f --help --since --tail --timestamps -t --until" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--since|--tail|--until')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
			fi
			;;
	esac
}

_docker_container_list() {
	_docker_container_ls
}

_docker_container_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		ancestor)
			cur="\${cur##*=}"
			__docker_complete_images
			return
			;;
		before)
			__docker_complete_containers_all --cur "\${cur##*=}"
			return
			;;
		expose|publish)
			return
			;;
		id)
			__docker_complete_containers_all --cur "\${cur##*=}" --id
			return
			;;
		health)
			COMPREPLY=( \$( compgen -W "healthy starting none unhealthy" -- "\${cur##*=}" ) )
			return
			;;
		is-task)
			COMPREPLY=( \$( compgen -W "true false" -- "\${cur##*=}" ) )
			return
			;;
		name)
			__docker_complete_containers_all --cur "\${cur##*=}" --name
			return
			;;
		network)
			__docker_complete_networks --cur "\${cur##*=}"
			return
			;;
		since)
			__docker_complete_containers_all --cur "\${cur##*=}"
			return
			;;
		status)
			COMPREPLY=( \$( compgen -W "created dead exited paused restarting running removing" -- "\${cur##*=}" ) )
			return
			;;
		volume)
			__docker_complete_volumes --cur "\${cur##*=}"
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "ancestor before exited expose health id is-task label name network publish since status volume" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format|--last|-n)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--all -a --filter -f --format --help --last -n --latest -l --no-trunc --quiet -q --size -s" -- "\$cur" ) )
			;;
	esac
}

_docker_container_pause() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_running
			;;
	esac
}

_docker_container_port() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
			fi
			;;
	esac
}

_docker_container_prune() {
	case "\$prev" in
		--filter)
			COMPREPLY=( \$( compgen -W "label label! until" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --filter --help" -- "\$cur" ) )
			;;
	esac
}

_docker_container_ps() {
	_docker_container_ls
}

_docker_container_rename() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_all
			fi
			;;
	esac
}

_docker_container_restart() {
	case "\$prev" in
		--time|-t)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --time -t" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_all
			;;
	esac
}

_docker_container_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --help --link -l --volumes -v" -- "\$cur" ) )
			;;
		*)
			for arg in "\${COMP_WORDS[@]}"; do
				case "\$arg" in
					--force|-f)
						__docker_complete_containers_all
						return
						;;
				esac
			done
			__docker_complete_containers_removable
			;;
	esac
}

_docker_container_run() {
	_docker_container_run_and_create
}

# _docker_container_run_and_create is the combined completion for \`_docker_container_run\`
# and \`_docker_container_create\`
_docker_container_run_and_create() {
	local options_with_args="
		--add-host
		--attach -a
		--blkio-weight
		--blkio-weight-device
		--cap-add
		--cap-drop
		--cgroup-parent
		--cidfile
		--cpu-period
		--cpu-quota
		--cpu-rt-period
		--cpu-rt-runtime
		--cpuset-cpus
		--cpus
		--cpuset-mems
		--cpu-shares -c
		--device
		--device-cgroup-rule
		--device-read-bps
		--device-read-iops
		--device-write-bps
		--device-write-iops
		--dns
		--dns-option
		--dns-search
		--entrypoint
		--env -e
		--env-file
		--expose
		--group-add
		--health-cmd
		--health-interval
		--health-retries
		--health-start-period
		--health-timeout
		--hostname -h
		--ip
		--ip6
		--ipc
		--kernel-memory
		--label-file
		--label -l
		--link
		--link-local-ip
		--log-driver
		--log-opt
		--mac-address
		--memory -m
		--memory-swap
		--memory-swappiness
		--memory-reservation
		--mount
		--name
		--network
		--network-alias
		--oom-score-adj
		--pid
		--pids-limit
		--publish -p
		--restart
		--runtime
		--security-opt
		--shm-size
		--stop-signal
		--stop-timeout
		--storage-opt
		--tmpfs
		--sysctl
		--ulimit
		--user -u
		--userns
		--uts
		--volume-driver
		--volumes-from
		--volume -v
		--workdir -w
	"
	__docker_daemon_os_is windows && options_with_args+="
		--cpu-count
		--cpu-percent
		--io-maxbandwidth
		--io-maxiops
		--isolation
	"
	__docker_daemon_is_experimental && options_with_args+="
		--platform
	"

	local boolean_options="
		--disable-content-trust=false
		--help
		--init
		--interactive -i
		--no-healthcheck
		--oom-kill-disable
		--privileged
		--publish-all -P
		--read-only
		--tty -t
	"

	if [ "\$command" = "run" ] || [ "\$subcommand" = "run" ] ; then
		options_with_args="\$options_with_args
			--detach-keys
		"
		boolean_options="\$boolean_options
			--detach -d
			--rm
			--sig-proxy=false
		"
		__docker_complete_detach_keys && return
	fi

	local all_options="\$options_with_args \$boolean_options"


	__docker_complete_log_driver_options && return
	__docker_complete_restart && return

	local key=\$(__docker_map_key_of_current_option '--security-opt')
	case "\$key" in
		label)
			[[ \$cur == *: ]] && return
			COMPREPLY=( \$( compgen -W "user: role: type: level: disable" -- "\${cur##*=}") )
			if [ "\${COMPREPLY[*]}" != "disable" ] ; then
				__docker_nospace
			fi
			return
			;;
		seccomp)
			local cur=\${cur##*=}
			_filedir
			COMPREPLY+=( \$( compgen -W "unconfined" -- "\$cur" ) )
			return
			;;
	esac

	case "\$prev" in
		--add-host)
			case "\$cur" in
				*:)
					__docker_complete_resolved_hostname
					return
					;;
			esac
			;;
		--attach|-a)
			COMPREPLY=( \$( compgen -W 'stdin stdout stderr' -- "\$cur" ) )
			return
			;;
		--cap-add)
			__docker_complete_capabilities_addable
			return
			;;
		--cap-drop)
			__docker_complete_capabilities_droppable
			return
			;;
		--cidfile|--env-file|--label-file)
			_filedir
			return
			;;
		--device|--tmpfs|--volume|-v)
			case "\$cur" in
				*:*)
					# TODO somehow do _filedir for stuff inside the image, if it's already specified (which is also somewhat difficult to determine)
					;;
				'')
					COMPREPLY=( \$( compgen -W '/' -- "\$cur" ) )
					__docker_nospace
					;;
				/*)
					_filedir
					__docker_nospace
					;;
			esac
			return
			;;
		--env|-e)
			# we do not append a "=" here because "-e VARNAME" is legal syntax, too
			COMPREPLY=( \$( compgen -e -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--ipc)
			case "\$cur" in
				*:*)
					cur="\${cur#*:}"
					__docker_complete_containers_running
					;;
				*)
					COMPREPLY=( \$( compgen -W 'none host private shareable container:' -- "\$cur" ) )
					# shellcheck disable=SC2128
					if [ "\$COMPREPLY" = "container:" ]; then
						__docker_nospace
					fi
					;;
			esac
			return
			;;
		--isolation)
			if __docker_daemon_os_is windows ; then
				__docker_complete_isolation
				return
			fi
			;;
		--link)
			case "\$cur" in
				*:*)
					;;
				*)
					__docker_complete_containers_running
					COMPREPLY=( \$( compgen -W "\${COMPREPLY[*]}" -S ':' ) )
					__docker_nospace
					;;
			esac
			return
			;;
		--log-driver)
			__docker_complete_log_drivers
			return
			;;
		--log-opt)
			__docker_complete_log_options
			return
			;;
		--network)
			case "\$cur" in
				container:*)
					__docker_complete_containers_all --cur "\${cur#*:}"
					;;
				*)
					COMPREPLY=( \$( compgen -W "\$(__docker_plugins_bundled --type Network) \$(__docker_networks) container:" -- "\$cur") )
					if [ "\${COMPREPLY[*]}" = "container:" ] ; then
						__docker_nospace
					fi
					;;
			esac
			return
			;;
		--pid)
			case "\$cur" in
				*:*)
					__docker_complete_containers_running --cur "\${cur#*:}"
					;;
				*)
					COMPREPLY=( \$( compgen -W 'host container:' -- "\$cur" ) )
					# shellcheck disable=SC2128
					if [ "\$COMPREPLY" = "container:" ]; then
						__docker_nospace
					fi
					;;
			esac
			return
			;;
		--runtime)
			__docker_complete_runtimes
			return
			;;
		--security-opt)
			COMPREPLY=( \$( compgen -W "apparmor= label= no-new-privileges seccomp=" -- "\$cur") )
			if [ "\${COMPREPLY[*]}" != "no-new-privileges" ] ; then
				__docker_nospace
			fi
			return
			;;
		--stop-signal)
			__docker_complete_signals
			return
			;;
		--storage-opt)
			COMPREPLY=( \$( compgen -W "size" -S = -- "\$cur") )
			__docker_nospace
			return
			;;
		--user|-u)
			__docker_complete_user_group
			return
			;;
		--userns)
			COMPREPLY=( \$( compgen -W "host" -- "\$cur" ) )
			return
			;;
		--volume-driver)
			__docker_complete_plugins_bundled --type Volume
			return
			;;
		--volumes-from)
			__docker_complete_containers_all
			return
			;;
		\$(__docker_to_extglob "\$options_with_args") )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "\$all_options" -- "\$cur" ) )
			;;
		*)
			local counter=\$( __docker_pos_first_nonflag "\$( __docker_to_alternatives "\$options_with_args" )" )
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_images
			fi
			;;
	esac
}

_docker_container_start() {
	__docker_complete_detach_keys && return
	# shellcheck disable=SC2078
	case "\$prev" in
		--checkpoint)
			if [ __docker_daemon_is_experimental ] ; then
				return
			fi
			;;
		--checkpoint-dir)
			if [ __docker_daemon_is_experimental ] ; then
				_filedir -d
				return
			fi
			;;
	esac

	case "\$cur" in
		-*)
			local options="--attach -a --detach-keys --help --interactive -i"
			__docker_daemon_is_experimental && options+=" --checkpoint --checkpoint-dir"
			COMPREPLY=( \$( compgen -W "\$options" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_stopped
			;;
	esac
}

_docker_container_stats() {
	case "\$prev" in
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--all -a --format --help --no-stream --no-trunc" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_running
			;;
	esac
}

_docker_container_stop() {
	case "\$prev" in
		--time|-t)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --time -t" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_running
			;;
	esac
}

_docker_container_top() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_running
			fi
			;;
	esac
}

_docker_container_unpause() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_containers_unpauseable
			fi
			;;
	esac
}

_docker_container_update() {
	local options_with_args="
		--blkio-weight
		--cpu-period
		--cpu-quota
		--cpu-rt-period
		--cpu-rt-runtime
		--cpus
		--cpuset-cpus
		--cpuset-mems
		--cpu-shares -c
		--kernel-memory
		--memory -m
		--memory-reservation
		--memory-swap
		--restart
	"

	local boolean_options="
		--help
	"

	local all_options="\$options_with_args \$boolean_options"

	__docker_complete_restart && return

	case "\$prev" in
		\$(__docker_to_extglob "\$options_with_args") )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "\$all_options" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_all
			;;
	esac
}

_docker_container_wait() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_containers_all
			;;
	esac
}


_docker_commit() {
	_docker_container_commit
}

_docker_cp() {
	_docker_container_cp
}

_docker_create() {
	_docker_container_create
}

_docker_daemon() {
	local boolean_options="
		\$global_boolean_options
		--experimental
		--help
		--icc=false
		--init
		--ip-forward=false
		--ip-masq=false
		--iptables=false
		--ipv6
		--live-restore
		--no-new-privileges
		--raw-logs
		--selinux-enabled
		--userland-proxy=false
		--version -v
	"
	local options_with_args="
		\$global_options_with_args
		--add-runtime
		--allow-nondistributable-artifacts
		--api-cors-header
		--authorization-plugin
		--bip
		--bridge -b
		--cgroup-parent
		--cluster-advertise
		--cluster-store
		--cluster-store-opt
		--config-file
		--containerd
		--cpu-rt-period
		--cpu-rt-runtime
		--data-root
		--default-gateway
		--default-gateway-v6
		--default-runtime
		--default-shm-size
		--default-ulimit
		--dns
		--dns-search
		--dns-opt
		--exec-opt
		--exec-root
		--fixed-cidr
		--fixed-cidr-v6
		--group -G
		--init-path
		--insecure-registry
		--ip
		--label
		--log-driver
		--log-opt
		--max-concurrent-downloads
		--max-concurrent-uploads
		--metrics-addr
		--mtu
		--network-control-plane-mtu
		--node-generic-resource
		--oom-score-adjust
		--pidfile -p
		--registry-mirror
		--seccomp-profile
		--shutdown-timeout
		--storage-driver -s
		--storage-opt
		--swarm-default-advertise-addr
		--userland-proxy-path
		--userns-remap
	"

	__docker_complete_log_driver_options && return

 	key=\$(__docker_map_key_of_current_option '--cluster-store-opt')
 	case "\$key" in
 		kv.*file)
			cur=\${cur##*=}
 			_filedir
 			return
 			;;
 	esac

 	local key=\$(__docker_map_key_of_current_option '--storage-opt')
 	case "\$key" in
 		dm.blkdiscard|dm.override_udev_sync_check|dm.use_deferred_removal|dm.use_deferred_deletion)
 			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
 			return
 			;;
		dm.directlvm_device|dm.thinpooldev)
			cur=\${cur##*=}
			_filedir
			return
			;;
		dm.fs)
			COMPREPLY=( \$( compgen -W "ext4 xfs" -- "\${cur##*=}" ) )
			return
			;;
		dm.libdm_log_level)
			COMPREPLY=( \$( compgen -W "2 3 4 5 6 7" -- "\${cur##*=}" ) )
			return
			;;
 	esac

	case "\$prev" in
		--authorization-plugin)
			__docker_complete_plugins_bundled --type Authorization
			return
			;;
		--cluster-store)
			COMPREPLY=( \$( compgen -W "consul etcd zk" -S "://" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--cluster-store-opt)
			COMPREPLY=( \$( compgen -W "discovery.heartbeat discovery.ttl kv.cacertfile kv.certfile kv.keyfile kv.path" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--config-file|--containerd|--init-path|--pidfile|-p|--tlscacert|--tlscert|--tlskey|--userland-proxy-path)
			_filedir
			return
			;;
		--exec-root|--data-root)
			_filedir -d
			return
			;;
		--log-driver)
			__docker_complete_log_drivers
			return
			;;
		--storage-driver|-s)
			COMPREPLY=( \$( compgen -W "aufs btrfs devicemapper overlay overlay2 vfs zfs" -- "\$(echo "\$cur" | tr '[:upper:]' '[:lower:]')" ) )
			return
			;;
		--storage-opt)
			local btrfs_options="btrfs.min_space"
			local devicemapper_options="
				dm.basesize
				dm.blkdiscard
				dm.blocksize
				dm.directlvm_device
				dm.fs
				dm.libdm_log_level
				dm.loopdatasize
				dm.loopmetadatasize
				dm.min_free_space
				dm.mkfsarg
				dm.mountopt
				dm.override_udev_sync_check
				dm.thinpooldev
				dm.thinp_autoextend_percent
				dm.thinp_autoextend_threshold
				dm.thinp_metapercent
				dm.thinp_percent
				dm.use_deferred_deletion
				dm.use_deferred_removal
			"
			local overlay2_options="overlay2.size"
			local zfs_options="zfs.fsname"

			local all_options="\$btrfs_options \$devicemapper_options \$overlay2_options \$zfs_options"

			case \$(__docker_value_of_option '--storage-driver|-s') in
				'')
					COMPREPLY=( \$( compgen -W "\$all_options" -S = -- "\$cur" ) )
					;;
				btrfs)
					COMPREPLY=( \$( compgen -W "\$btrfs_options" -S = -- "\$cur" ) )
					;;
				devicemapper)
					COMPREPLY=( \$( compgen -W "\$devicemapper_options" -S = -- "\$cur" ) )
					;;
				overlay2)
					COMPREPLY=( \$( compgen -W "\$overlay2_options" -S = -- "\$cur" ) )
					;;
				zfs)
					COMPREPLY=( \$( compgen -W "\$zfs_options" -S = -- "\$cur" ) )
					;;
				*)
					return
					;;
			esac
			__docker_nospace
			return
			;;
		--log-level|-l)
			__docker_complete_log_levels
			return
			;;
		--log-opt)
			__docker_complete_log_options
			return
			;;
		--metrics-addr)
			__docker_complete_local_ips
			__docker_append_to_completions ":"
			__docker_nospace
			return
			;;
		--seccomp-profile)
			_filedir json
			return
			;;
		--swarm-default-advertise-addr)
			__docker_complete_local_interfaces
			return
			;;
		--userns-remap)
			__docker_complete_user_group
			return
			;;
		\$(__docker_to_extglob "\$options_with_args") )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "\$boolean_options \$options_with_args" -- "\$cur" ) )
			;;
	esac
}

_docker_deploy() {
	__docker_daemon_is_experimental && _docker_stack_deploy
}

_docker_diff() {
	_docker_container_diff
}

_docker_events() {
	_docker_system_events
}

_docker_exec() {
	_docker_container_exec
}

_docker_export() {
	_docker_container_export
}

_docker_help() {
	local counter=\$(__docker_pos_first_nonflag)
	if [ "\$cword" -eq "\$counter" ]; then
		COMPREPLY=( \$( compgen -W "\${commands[*]}" -- "\$cur" ) )
	fi
}

_docker_history() {
	_docker_image_history
}


_docker_image() {
	local subcommands="
		build
		history
		import
		inspect
		load
		ls
		prune
		pull
		push
		rm
		save
		tag
	"
	local aliases="
		images
		list
		remove
		rmi
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_image_build() {
	local options_with_args="
		--add-host
		--build-arg
		--cache-from
		--cgroup-parent
		--cpuset-cpus
		--cpuset-mems
		--cpu-shares -c
		--cpu-period
		--cpu-quota
		--file -f
		--iidfile
		--label
		--memory -m
		--memory-swap
		--network
		--shm-size
		--tag -t
		--target
		--ulimit
	"
	__docker_daemon_os_is windows && options_with_args+="
		--isolation
	"

	local boolean_options="
		--compress
		--disable-content-trust=false
		--force-rm
		--help
		--no-cache
		--pull
		--quiet -q
		--rm
	"
	if __docker_daemon_is_experimental ; then
		options_with_args+="
			--platform
		"
		boolean_options+="
			--squash
			--stream
		"
	fi

	local all_options="\$options_with_args \$boolean_options"

	case "\$prev" in
		--add-host)
			case "\$cur" in
				*:)
					__docker_complete_resolved_hostname
					return
					;;
			esac
			;;
		--build-arg)
			COMPREPLY=( \$( compgen -e -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--cache-from)
			__docker_complete_image_repos_and_tags
			return
			;;
		--file|-f|--iidfile)
			_filedir
			return
			;;
		--isolation)
			if __docker_daemon_os_is windows ; then
				__docker_complete_isolation
				return
			fi
			;;
		--network)
			case "\$cur" in
				container:*)
					__docker_complete_containers_all --cur "\${cur#*:}"
					;;
				*)
					COMPREPLY=( \$( compgen -W "\$(__docker_plugins_bundled --type Network) \$(__docker_networks) container:" -- "\$cur") )
					if [ "\${COMPREPLY[*]}" = "container:" ] ; then
						__docker_nospace
					fi
					;;
			esac
			return
			;;
		--tag|-t)
			__docker_complete_image_repos_and_tags
			return
			;;
		--target)
			local context_pos=\$( __docker_pos_first_nonflag "\$( __docker_to_alternatives "\$options_with_args" )" )
			local context="\${words[\$context_pos]}"
			context="\${context:-.}"

			local file="\$( __docker_value_of_option '--file|f' )"
			local default_file="\${context%/}/Dockerfile"
			local dockerfile="\${file:-\$default_file}"

			local targets="\$( sed -n 's/^FROM .\\+ AS \\(.\\+\\)/\\1/p' "\$dockerfile" 2>/dev/null )"
			COMPREPLY=( \$( compgen -W "\$targets" -- "\$cur" ) )
			return
			;;
		\$(__docker_to_extglob "\$options_with_args") )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "\$all_options" -- "\$cur" ) )
			;;
		*)
			local counter=\$( __docker_pos_first_nonflag "\$( __docker_to_alternatives "\$options_with_args" )" )
			if [ "\$cword" -eq "\$counter" ]; then
				_filedir -d
			fi
			;;
	esac
}

_docker_image_history() {
	case "\$prev" in
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format --help --human=false -H=false --no-trunc --quiet -q" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_images
			fi
			;;
	esac
}

_docker_image_images() {
	_docker_image_ls
}

_docker_image_import() {
	case "\$prev" in
		--change|-c|--message|-m)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--change -c --help --message -m" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--change|-c|--message|-m')
			if [ "\$cword" -eq "\$counter" ]; then
				return
			fi
			(( counter++ ))

			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_image_repos_and_tags
				return
			fi
			;;
	esac
}

_docker_image_inspect() {
	_docker_inspect --type image
}

_docker_image_load() {
	case "\$prev" in
		--input|-i|"<")
			_filedir
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --input -i --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_image_list() {
	_docker_image_ls
}

_docker_image_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		before|since|reference)
			cur="\${cur##*=}"
			__docker_complete_images
			return
			;;
		dangling)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
		label)
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "before dangling label reference since" -- "\$cur" ) )
			__docker_nospace
			return
			;;
                --format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--all -a --digests --filter -f --format --help --no-trunc --quiet -q" -- "\$cur" ) )
			;;
		=)
			return
			;;
		*)
			__docker_complete_image_repos
			;;
	esac
}

_docker_image_prune() {
	case "\$prev" in
		--filter)
			COMPREPLY=( \$( compgen -W "label label! until" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--all -a --force -f --filter --help" -- "\$cur" ) )
			;;
	esac
}

_docker_image_pull() {
	case "\$prev" in
		--platform)
			return
			;;
	esac

	case "\$cur" in
		-*)
			local options="--all-tags -a --disable-content-trust=false --help"
			__docker_daemon_is_experimental && options+=" --platform"

			COMPREPLY=( \$( compgen -W "\$options" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag --platform)
			if [ "\$cword" -eq "\$counter" ]; then
				for arg in "\${COMP_WORDS[@]}"; do
					case "\$arg" in
						--all-tags|-a)
							__docker_complete_image_repos
							return
							;;
					esac
				done
				__docker_complete_image_repos_and_tags
			fi
			;;
	esac
}

_docker_image_push() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--disable-content-trust=false --help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_image_repos_and_tags
			fi
			;;
	esac
}

_docker_image_remove() {
	_docker_image_rm
}

_docker_image_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --help --no-prune" -- "\$cur" ) )
			;;
		*)
			__docker_complete_images
			;;
	esac
}

_docker_image_rmi() {
	_docker_image_rm
}

_docker_image_save() {
	case "\$prev" in
		--output|-o|">")
			_filedir
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --output -o" -- "\$cur" ) )
			;;
		*)
			__docker_complete_images
			;;
	esac
}

_docker_image_tag() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)

			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_image_repos_and_tags
				return
			fi
			(( counter++ ))

			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_image_repos_and_tags
				return
			fi
			;;
	esac
}


_docker_images() {
	_docker_image_ls
}

_docker_import() {
	_docker_image_import
}

_docker_info() {
	_docker_system_info
}

_docker_inspect() {
	local preselected_type
	local type

	if [ "\$1" = "--type" ] ; then
		preselected_type=yes
		type="\$2"
	else
		type=\$(__docker_value_of_option --type)
	fi

	case "\$prev" in
		--format|-f)
			return
			;;
		--type)
			if [ -z "\$preselected_type" ] ; then
				COMPREPLY=( \$( compgen -W "container image network node plugin secret service volume" -- "\$cur" ) )
				return
			fi
			;;
	esac

	case "\$cur" in
		-*)
			local options="--format -f --help --size -s"
			if [ -z "\$preselected_type" ] ; then
				options+=" --type"
			fi
			COMPREPLY=( \$( compgen -W "\$options" -- "\$cur" ) )
			;;
		*)
			case "\$type" in
				'')
					COMPREPLY=( \$( compgen -W "
						\$(__docker_containers --all)
						\$(__docker_images)
						\$(__docker_networks)
						\$(__docker_nodes)
						\$(__docker_plugins_installed)
						\$(__docker_secrets)
						\$(__docker_services)
						\$(__docker_volumes)
					" -- "\$cur" ) )
					__ltrim_colon_completions "\$cur"
					;;
				container)
					__docker_complete_containers_all
					;;
				image)
					__docker_complete_images
					;;
				network)
					__docker_complete_networks
					;;
				node)
					__docker_complete_nodes
					;;
				plugin)
					__docker_complete_plugins_installed
					;;
				secret)
					__docker_complete_secrets
					;;
				service)
					__docker_complete_services
					;;
				volume)
					__docker_complete_volumes
					;;
			esac
	esac
}

_docker_kill() {
	_docker_container_kill
}

_docker_load() {
	_docker_image_load
}

_docker_login() {
	case "\$prev" in
		--password|-p|--username|-u)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --password -p --password-stdin --username -u" -- "\$cur" ) )
			;;
	esac
}

_docker_logout() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
	esac
}

_docker_logs() {
	_docker_container_logs
}

_docker_network_connect() {
	local options_with_args="
		--alias
		--ip
		--ip6
		--link
		--link-local-ip
	"

	local boolean_options="
		--help
	"

	case "\$prev" in
		--link)
			case "\$cur" in
				*:*)
					;;
				*)
					__docker_complete_containers_running
					COMPREPLY=( \$( compgen -W "\${COMPREPLY[*]}" -S ':' ) )
					__docker_nospace
					;;
			esac
			return
			;;
		\$(__docker_to_extglob "\$options_with_args") )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "\$boolean_options \$options_with_args" -- "\$cur" ) )
			;;
		*)
			local counter=\$( __docker_pos_first_nonflag "\$( __docker_to_alternatives "\$options_with_args" )" )
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_networks
			elif [ "\$cword" -eq "\$((counter + 1))" ]; then
				__docker_complete_containers_all
			fi
			;;
	esac
}

_docker_network_create() {
	case "\$prev" in
		--aux-address|--gateway|--ip-range|--ipam-opt|--ipv6|--opt|-o|--subnet)
			return
			;;
		--config-from)
			__docker_complete_networks
			return
			;;
		--driver|-d)
			# remove drivers that allow one instance only, add drivers missing in \`docker info\`
			__docker_complete_plugins_bundled --type Network --remove host --remove null --add macvlan
			return
			;;
		--ipam-driver)
			COMPREPLY=( \$( compgen -W "default" -- "\$cur" ) )
			return
			;;
		--label)
			return
			;;
		--scope)
			COMPREPLY=( \$( compgen -W "local swarm" -- "\$cur" ) )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--attachable --aux-address --config-from --config-only --driver -d --gateway --help --ingress --internal --ip-range --ipam-driver --ipam-opt --ipv6 --label --opt -o --scope --subnet" -- "\$cur" ) )
			;;
	esac
}

_docker_network_disconnect() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_networks
			elif [ "\$cword" -eq "\$((counter + 1))" ]; then
				__docker_complete_containers_in_network "\$prev"
			fi
			;;
	esac
}

_docker_network_inspect() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help --verbose" -- "\$cur" ) )
			;;
		*)
			__docker_complete_networks
	esac
}

_docker_network_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		driver)
			__docker_complete_plugins_bundled --cur "\${cur##*=}" --type Network --add macvlan
			return
			;;
		id)
			__docker_complete_networks --cur "\${cur##*=}" --id
			return
			;;
		name)
			__docker_complete_networks --cur "\${cur##*=}" --name
			return
			;;
		scope)
			COMPREPLY=( \$( compgen -W "global local swarm" -- "\${cur##*=}" ) )
			return
			;;
		type)
			COMPREPLY=( \$( compgen -W "builtin custom" -- "\${cur##*=}" ) )
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "driver id label name scope type" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --no-trunc --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_network_prune() {
	case "\$prev" in
		--filter)
			COMPREPLY=( \$( compgen -W "label label! until" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --filter --help" -- "\$cur" ) )
			;;
	esac
}

_docker_network_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_networks --filter type=custom
	esac
}

_docker_network() {
	local subcommands="
		connect
		create
		disconnect
		inspect
		ls
		prune
		rm
	"
	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_service() {
	local subcommands="
		create
		inspect
		logs
		ls
		rm
		rollback
		scale
		ps
		update
	"

	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_service_create() {
	_docker_service_update_and_create
}

_docker_service_inspect() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help --pretty" -- "\$cur" ) )
			;;
		*)
			__docker_complete_services
	esac
}

_docker_service_logs() {
	case "\$prev" in
		--since|--tail)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--follow -f --help --no-resolve --no-task-ids --no-trunc --since --tail --timestamps -t" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--since|--tail')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_services_and_tasks
			fi
			;;
	esac
}

_docker_service_list() {
	_docker_service_ls
}

_docker_service_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		id)
			__docker_complete_services --cur "\${cur##*=}" --id
			return
			;;
		mode)
			COMPREPLY=( \$( compgen -W "global replicated" -- "\${cur##*=}" ) )
			return
			;;
		name)
			__docker_complete_services --cur "\${cur##*=}" --name
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -W "id label mode name" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_service_remove() {
	_docker_service_rm
}

_docker_service_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_services
	esac
}

_docker_service_rollback() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--detach -d --help --quit -q" -- "\$cur" ) )
			;;
		*)
			local counter=\$( __docker_pos_first_nonflag )
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_services
			fi
			;;
	esac
}

_docker_service_scale() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--detach -d --help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_services
			__docker_append_to_completions "="
			__docker_nospace
			;;
	esac
}

_docker_service_ps() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		desired-state)
			COMPREPLY=( \$( compgen -W "accepted running shutdown" -- "\${cur##*=}" ) )
			return
			;;
		name)
			__docker_complete_services --cur "\${cur##*=}" --name
			return
			;;
		node)
			__docker_complete_nodes --cur "\${cur##*=}" --add self
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -W "desired-state id name node" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --no-resolve --no-trunc --quiet -q" -- "\$cur" ) )
			;;
		*)
			__docker_complete_services
			;;
	esac
}

_docker_service_update() {
	_docker_service_update_and_create
}

# _docker_service_update_and_create is the combined completion for \`docker service create\`
# and \`docker service update\`
_docker_service_update_and_create() {
	local options_with_args="
		--endpoint-mode
		--entrypoint
		--env -e
		--force
		--health-cmd
		--health-interval
		--health-retries
		--health-start-period
		--health-timeout
		--hostname
		--isolation
		--label -l
		--limit-cpu
		--limit-memory
		--log-driver
		--log-opt
		--mount
		--replicas
		--reserve-cpu
		--reserve-memory
		--restart-condition
		--restart-delay
		--restart-max-attempts
		--restart-window
		--rollback-delay
		--rollback-failure-action
		--rollback-max-failure-ratio
		--rollback-monitor
		--rollback-order
		--rollback-parallelism
		--stop-grace-period
		--stop-signal
		--update-delay
		--update-failure-action
		--update-max-failure-ratio
		--update-monitor
		--update-order
		--update-parallelism
		--user -u
		--workdir -w
	"
	__docker_daemon_os_is windows && options_with_args+="
		--credential-spec
	"

	local boolean_options="
		--detach -d
		--help
		--no-healthcheck
		--read-only
		--tty -t
		--with-registry-auth
	"

	__docker_complete_log_driver_options && return

	if [ "\$subcommand" = "create" ] ; then
		options_with_args="\$options_with_args
			--config
			--constraint
			--container-label
			--dns
			--dns-option
			--dns-search
			--env-file
			--generic-resource
			--group
			--host
			--mode
			--name
			--network
			--placement-pref
			--publish -p
			--secret
		"

		case "\$prev" in
			--config)
				__docker_complete_configs
				return
				;;
			--env-file)
				_filedir
				return
				;;
			--group)
				COMPREPLY=( \$(compgen -g -- "\$cur") )
				return
				;;
			--host)
				case "\$cur" in
					*:)
						__docker_complete_resolved_hostname
						return
						;;
				esac
				;;
			--mode)
				COMPREPLY=( \$( compgen -W "global replicated" -- "\$cur" ) )
				return
				;;
			--placement-pref)
				COMPREPLY=( \$( compgen -W "spread" -S = -- "\$cur" ) )
				__docker_nospace
				return
				;;
			--secret)
				__docker_complete_secrets
				return
				;;
		esac
	fi
	if [ "\$subcommand" = "update" ] ; then
		options_with_args="\$options_with_args
			--args
			--config-add
			--config-rm
			--constraint-add
			--constraint-rm
			--container-label-add
			--container-label-rm
			--dns-add
			--dns-option-add
			--dns-option-rm
			--dns-rm
			--dns-search-add
			--dns-search-rm
			--generic-resource-add
			--generic-resource-rm
			--group-add
			--group-rm
			--host-add
			--host-rm
			--image
			--network-add
			--network-rm
			--placement-pref-add
			--placement-pref-rm
			--publish-add
			--publish-rm
			--rollback
			--secret-add
			--secret-rm
		"

		case "\$prev" in
			--config-add|--config-rm)
				__docker_complete_configs
				return
				;;
			--group-add|--group-rm)
				COMPREPLY=( \$(compgen -g -- "\$cur") )
				return
				;;
			--host-add|--host-rm)
				case "\$cur" in
					*:)
						__docker_complete_resolved_hostname
						return
						;;
				esac
				;;
			--image)
				__docker_complete_image_repos_and_tags
				return
				;;
			--network-add|--network-rm)
				__docker_complete_networks
				return
				;;
			--placement-pref-add|--placement-pref-rm)
				COMPREPLY=( \$( compgen -W "spread" -S = -- "\$cur" ) )
				__docker_nospace
				return
				;;
			--secret-add|--secret-rm)
				__docker_complete_secrets
				return
				;;
		esac
	fi

	local strategy=\$(__docker_map_key_of_current_option '--placement-pref|--placement-pref-add|--placement-pref-rm')
	case "\$strategy" in
		spread)
			COMPREPLY=( \$( compgen -W "engine.labels node.labels" -S . -- "\${cur##*=}" ) )
			__docker_nospace
			return
			;;
	esac

	case "\$prev" in
		--endpoint-mode)
			COMPREPLY=( \$( compgen -W "dnsrr vip" -- "\$cur" ) )
			return
			;;
		--env|-e)
			# we do not append a "=" here because "-e VARNAME" is legal systax, too
			COMPREPLY=( \$( compgen -e -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--isolation)
			__docker_complete_isolation
			return
			;;
		--log-driver)
			__docker_complete_log_drivers
			return
			;;
		--log-opt)
			__docker_complete_log_options
			return
			;;
		--network)
			__docker_complete_networks
			return
			;;
		--restart-condition)
			COMPREPLY=( \$( compgen -W "any none on-failure" -- "\$cur" ) )
			return
			;;
		--rollback-failure-action)
			COMPREPLY=( \$( compgen -W "continue pause" -- "\$cur" ) )
			return
			;;
		--stop-signal)
			__docker_complete_signals
			return
			;;
		--update-failure-action)
			COMPREPLY=( \$( compgen -W "continue pause rollback" -- "\$cur" ) )
			return
			;;
		--update-order|--rollback-order)
			COMPREPLY=( \$( compgen -W "start-first stop-first" -- "\$cur" ) )
			return
			;;
		--user|-u)
			__docker_complete_user_group
			return
			;;
		\$(__docker_to_extglob "\$options_with_args") )
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "\$boolean_options \$options_with_args" -- "\$cur" ) )
			;;
		*)
			local counter=\$( __docker_pos_first_nonflag "\$( __docker_to_alternatives "\$options_with_args" )" )
			if [ "\$subcommand" = "update" ] ; then
				if [ "\$cword" -eq "\$counter" ]; then
					__docker_complete_services
				fi
			else
				if [ "\$cword" -eq "\$counter" ]; then
					__docker_complete_images
				fi
			fi
			;;
	esac
}

_docker_swarm() {
	local subcommands="
		ca
		init
		join
		join-token
		leave
		unlock
		unlock-key
		update
	"
	__docker_subcommands "\$subcommands" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_swarm_ca() {
	case "\$prev" in
		--ca-cert|--ca-key)
			_filedir
			return
			;;
		--cert-expiry|--external-ca)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--ca-cert --ca-key --cert-expiry --detach -d --external-ca --help --quiet -q --rotate" -- "\$cur" ) )
			;;
	esac
}

_docker_swarm_init() {
	case "\$prev" in
		--advertise-addr)
			if [[ \$cur == *: ]] ; then
				COMPREPLY=( \$( compgen -W "2377" -- "\${cur##*:}" ) )
			else
				__docker_complete_local_interfaces
				__docker_nospace
			fi
			return
			;;
		--availability)
			COMPREPLY=( \$( compgen -W "active drain pause" -- "\$cur" ) )
			return
			;;
		--cert-expiry|--dispatcher-heartbeat|--external-ca|--max-snapshots|--snapshot-interval|--task-history-limit)
			return
			;;
		--data-path-addr)
			__docker_complete_local_interfaces
			return
			;;
		--listen-addr)
			if [[ \$cur == *: ]] ; then
				COMPREPLY=( \$( compgen -W "2377" -- "\${cur##*:}" ) )
			else
				__docker_complete_local_interfaces --add 0.0.0.0
				__docker_nospace
			fi
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--advertise-addr --autolock --availability --cert-expiry --data-path-addr --dispatcher-heartbeat --external-ca --force-new-cluster --help --listen-addr --max-snapshots --snapshot-interval --task-history-limit" -- "\$cur" ) )
			;;
	esac
}

_docker_swarm_join() {
	case "\$prev" in
		--advertise-addr)
			if [[ \$cur == *: ]] ; then
				COMPREPLY=( \$( compgen -W "2377" -- "\${cur##*:}" ) )
			else
				__docker_complete_local_interfaces
				__docker_nospace
			fi
			return
			;;
		--availability)
			COMPREPLY=( \$( compgen -W "active drain pause" -- "\$cur" ) )
			return
			;;
		--data-path-addr)
			__docker_complete_local_interfaces
			return
			;;
		--listen-addr)
			if [[ \$cur == *: ]] ; then
				COMPREPLY=( \$( compgen -W "2377" -- "\${cur##*:}" ) )
			else
				__docker_complete_local_interfaces --add 0.0.0.0
				__docker_nospace
			fi
			return
			;;
		--token)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--advertise-addr --availability --data-path-addr --help --listen-addr --token" -- "\$cur" ) )
			;;
		*:)
			COMPREPLY=( \$( compgen -W "2377" -- "\${cur##*:}" ) )
			;;
	esac
}

_docker_swarm_join_token() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --quiet -q --rotate" -- "\$cur" ) )
			;;
		*)
			local counter=\$( __docker_pos_first_nonflag )
			if [ "\$cword" -eq "\$counter" ]; then
				COMPREPLY=( \$( compgen -W "manager worker" -- "\$cur" ) )
			fi
			;;
	esac
}

_docker_swarm_leave() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --help" -- "\$cur" ) )
			;;
	esac
}

_docker_swarm_unlock() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
	esac
}

_docker_swarm_unlock_key() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --quiet -q --rotate" -- "\$cur" ) )
			;;
	esac
}

_docker_swarm_update() {
	case "\$prev" in
		--cert-expiry|--dispatcher-heartbeat|--external-ca|--max-snapshots|--snapshot-interval|--task-history-limit)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--autolock --cert-expiry --dispatcher-heartbeat --external-ca --help --max-snapshots --snapshot-interval --task-history-limit" -- "\$cur" ) )
			;;
	esac
}

_docker_node() {
	local subcommands="
		demote
		inspect
		ls
		promote
		rm
		ps
		update
	"
	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_node_demote() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_nodes --filter role=manager
	esac
}

_docker_node_inspect() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help --pretty" -- "\$cur" ) )
			;;
		*)
			__docker_complete_nodes --add self
	esac
}

_docker_node_list() {
	_docker_node_ls
}

_docker_node_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		id)
			__docker_complete_nodes --cur "\${cur##*=}" --id
			return
			;;
		membership)
			COMPREPLY=( \$( compgen -W "accepted pending" -- "\${cur##*=}" ) )
			return
			;;
		name)
			__docker_complete_nodes --cur "\${cur##*=}" --name
			return
			;;
		role)
			COMPREPLY=( \$( compgen -W "manager worker" -- "\${cur##*=}" ) )
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -W "id label membership name role" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_node_promote() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_nodes --filter role=worker
	esac
}

_docker_node_remove() {
	_docker_node_rm
}

_docker_node_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_nodes
	esac
}

_docker_node_ps() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		desired-state)
			COMPREPLY=( \$( compgen -W "accepted running shutdown" -- "\${cur##*=}" ) )
			return
			;;
		name)
			__docker_complete_services --cur "\${cur##*=}" --name
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -W "desired-state id label name" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --no-resolve --no-trunc --quiet -q" -- "\$cur" ) )
			;;
		*)
			__docker_complete_nodes --add self
			;;
	esac
}

_docker_node_update() {
	case "\$prev" in
		--availability)
			COMPREPLY=( \$( compgen -W "active drain pause" -- "\$cur" ) )
			return
			;;
		--role)
			COMPREPLY=( \$( compgen -W "manager worker" -- "\$cur" ) )
			return
			;;
		--label-add|--label-rm)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--availability --help --label-add --label-rm --role" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--availability|--label-add|--label-rm|--role')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_nodes
			fi
			;;
	esac
}

_docker_pause() {
	_docker_container_pause
}

_docker_plugin() {
	local subcommands="
		create
		disable
		enable
		inspect
		install
		ls
		push
		rm
		set
		upgrade
	"
	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_plugin_create() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--compress --help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				# reponame
				return
			elif [ "\$cword" -eq  "\$((counter + 1))" ]; then
				_filedir -d
			fi
			;;
	esac
}

_docker_plugin_disable() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_plugins_installed --filter enabled=true
			fi
			;;
	esac
}

_docker_plugin_enable() {
	case "\$prev" in
		--timeout)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --timeout" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--timeout')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_plugins_installed --filter enabled=false
			fi
			;;
	esac
}

_docker_plugin_inspect() {
	case "\$prev" in
		--format|f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_plugins_installed
			;;
	esac
}

_docker_plugin_install() {
	case "\$prev" in
		--alias)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--alias --disable --disable-content-trust=false --grant-all-permissions --help" -- "\$cur" ) )
			;;
	esac
}

_docker_plugin_list() {
	_docker_plugin_ls
}

_docker_plugin_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		capability)
			COMPREPLY=( \$( compgen -W "authz ipamdriver logdriver metricscollector networkdriver volumedriver" -- "\${cur##*=}" ) )
			return
			;;
		enabled)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "capability enabled" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --no-trunc --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_plugin_push() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_plugins_installed
			fi
			;;
	esac
}

_docker_plugin_remove() {
	_docker_plugin_rm
}

_docker_plugin_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_plugins_installed
			;;
	esac
}

_docker_plugin_set() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_plugins_installed
			fi
			;;
	esac
}

_docker_plugin_upgrade() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--disable-content-trust --grant-all-permissions --help --skip-remote-check" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_plugins_installed
				__ltrim_colon_completions "\$cur"
			elif [ "\$cword" -eq  "\$((counter + 1))" ]; then
				local plugin_images="\$(__docker_plugins_installed)"
				COMPREPLY=( \$(compgen -S : -W "\${plugin_images%:*}" -- "\$cur") )
				__docker_nospace
			fi
			;;
	esac
}


_docker_port() {
	_docker_container_port
}

_docker_ps() {
	_docker_container_ls
}

_docker_pull() {
	_docker_image_pull
}

_docker_push() {
	_docker_image_push
}

_docker_rename() {
	_docker_container_rename
}

_docker_restart() {
	_docker_container_restart
}

_docker_rm() {
	_docker_container_rm
}

_docker_rmi() {
	_docker_image_rm
}

_docker_run() {
	_docker_container_run
}

_docker_save() {
	_docker_image_save
}


_docker_secret() {
	local subcommands="
		create
		inspect
		ls
		rm
	"
	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_secret_create() {
	case "\$prev" in
		--driver|-d|--label|-l)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--driver -d --help --label -l" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--driver|-d|--label|-l')
			if [ "\$cword" -eq "\$((counter + 1))" ]; then
				_filedir
			fi
			;;
	esac
}

_docker_secret_inspect() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help --pretty" -- "\$cur" ) )
			;;
		*)
			__docker_complete_secrets
			;;
	esac
}

_docker_secret_list() {
	_docker_secret_ls
}

_docker_secret_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		id)
			__docker_complete_secrets --cur "\${cur##*=}" --id
			return
			;;
		name)
			__docker_complete_secrets --cur "\${cur##*=}" --name
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "id label name" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format --filter -f --help --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_secret_remove() {
	_docker_secret_rm
}

_docker_secret_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_secrets
			;;
	esac
}



_docker_search() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		is-automated)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
		is-official)
			COMPREPLY=( \$( compgen -W "false true" -- "\${cur##*=}" ) )
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "is-automated is-official stars" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format|--limit)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --limit --no-trunc" -- "\$cur" ) )
			;;
	esac
}


_docker_stack() {
	local subcommands="
		deploy
		ls
		ps
		rm
		services
	"
	local aliases="
		down
		list
		remove
		up
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_stack_deploy() {
	case "\$prev" in
		--bundle-file)
			if __docker_daemon_is_experimental ; then
				_filedir dab
				return
			fi
			;;
		--compose-file|-c)
			_filedir yml
			return
			;;
		--resolve-image)
			COMPREPLY=( \$( compgen -W "always changed never" -- "\$cur" ) )
			return
			;;
	esac

	case "\$cur" in
		-*)
			local options="--compose-file -c --help --prune --resolve-image --with-registry-auth"
			__docker_daemon_is_experimental && options+=" --bundle-file"
			COMPREPLY=( \$( compgen -W "\$options" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--bundle-file|--compose-file|-c|--resolve-image')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_stacks
			fi
			;;
	esac
}

_docker_stack_down() {
	_docker_stack_rm
}

_docker_stack_list() {
	_docker_stack_ls
}

_docker_stack_ls() {
	case "\$prev" in
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format --help" -- "\$cur" ) )
			;;
	esac
}

_docker_stack_ps() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		desired-state)
			COMPREPLY=( \$( compgen -W "accepted running shutdown" -- "\${cur##*=}" ) )
			return
			;;
		id)
			__docker_complete_stacks --cur "\${cur##*=}" --id
			return
			;;
		name)
			__docker_complete_stacks --cur "\${cur##*=}" --name
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "id name desired-state" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --no-resolve --no-trunc --quiet -q" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--filter|-f')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_stacks
			fi
			;;
	esac
}

_docker_stack_remove() {
	_docker_stack_rm
}

_docker_stack_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_stacks
			;;
	esac
}

_docker_stack_services() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		id)
			__docker_complete_services --cur "\${cur##*=}" --id
			return
			;;
		label)
			return
			;;
		name)
			__docker_complete_services --cur "\${cur##*=}" --name
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "id label name" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --quiet -q" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag '--filter|-f|--format')
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_stacks
			fi
			;;
	esac
}

_docker_stack_up() {
	_docker_stack_deploy
}


_docker_start() {
	_docker_container_start
}

_docker_stats() {
	_docker_container_stats
}

_docker_stop() {
	_docker_container_stop
}


_docker_system() {
	local subcommands="
		df
		events
		info
		prune
	"
	__docker_subcommands "\$subcommands" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_system_df() {
	case "\$prev" in
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format --help --verbose -v" -- "\$cur" ) )
			;;
	esac
}

_docker_system_events() {
	local key=\$(__docker_map_key_of_current_option '-f|--filter')
	case "\$key" in
		container)
			__docker_complete_containers_all --cur "\${cur##*=}"
			return
			;;
		daemon)
			local name=\$(__docker_q info | sed -n 's/^\\(ID\\|Name\\): //p')
			COMPREPLY=( \$( compgen -W "\$name" -- "\${cur##*=}" ) )
			return
			;;
		event)
			COMPREPLY=( \$( compgen -W "
				attach
				commit
				connect
				copy
				create
				delete
				destroy
				detach
				die
				disable
				disconnect
				enable
				exec_create
				exec_detach
				exec_start
				export
				health_status
				import
				install
				kill
				load
				mount
				oom
				pause
				pull
				push
				reload
				remove
				rename
				resize
				restart
				save
				start
				stop
				tag
				top
				unmount
				unpause
				untag
				update
			" -- "\${cur##*=}" ) )
			return
			;;
		image)
			cur="\${cur##*=}"
			__docker_complete_images
			return
			;;
		network)
			__docker_complete_networks --cur "\${cur##*=}"
			return
			;;
		type)
			COMPREPLY=( \$( compgen -W "container daemon image network plugin volume" -- "\${cur##*=}" ) )
			return
			;;
		volume)
			__docker_complete_volumes --cur "\${cur##*=}"
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "container daemon event image label network type volume" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--since|--until)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --help --since --until --format" -- "\$cur" ) )
			;;
	esac
}

_docker_system_info() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help" -- "\$cur" ) )
			;;
	esac
}

_docker_system_prune() {
	case "\$prev" in
		--filter)
			COMPREPLY=( \$( compgen -W "label label! until" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--all -a --force -f --filter --help --volumes" -- "\$cur" ) )
			;;
	esac
}


_docker_tag() {
	_docker_image_tag
}


_docker_trust() {
	local subcommands="
		revoke
		sign
		view
	"
	__docker_subcommands "\$subcommands" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_trust_revoke() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --yes -y" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_images
			fi
			;;
	esac
}

_docker_trust_sign() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help --local" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_images
			fi
			;;
	esac
}

_docker_trust_view() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			local counter=\$(__docker_pos_first_nonflag)
			if [ "\$cword" -eq "\$counter" ]; then
				__docker_complete_images
			fi
			;;
	esac
}


_docker_unpause() {
	_docker_container_unpause
}

_docker_update() {
	_docker_container_update
}

_docker_top() {
	_docker_container_top
}

_docker_version() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help" -- "\$cur" ) )
			;;
	esac
}

_docker_volume_create() {
	case "\$prev" in
		--driver|-d)
			__docker_complete_plugins_bundled --type Volume
			return
			;;
		--label|--opt|-o)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--driver -d --help --label --opt -o" -- "\$cur" ) )
			;;
	esac
}

_docker_volume_inspect() {
	case "\$prev" in
		--format|-f)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--format -f --help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_volumes
			;;
	esac
}

_docker_volume_list() {
	_docker_volume_ls
}

_docker_volume_ls() {
	local key=\$(__docker_map_key_of_current_option '--filter|-f')
	case "\$key" in
		dangling)
			COMPREPLY=( \$( compgen -W "true false" -- "\${cur##*=}" ) )
			return
			;;
		driver)
			__docker_complete_plugins_bundled --cur "\${cur##*=}" --type Volume
			return
			;;
		name)
			__docker_complete_volumes --cur "\${cur##*=}"
			return
			;;
	esac

	case "\$prev" in
		--filter|-f)
			COMPREPLY=( \$( compgen -S = -W "dangling driver label name" -- "\$cur" ) )
			__docker_nospace
			return
			;;
		--format)
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter -f --format --help --quiet -q" -- "\$cur" ) )
			;;
	esac
}

_docker_volume_prune() {
	case "\$prev" in
		--filter)
			COMPREPLY=( \$( compgen -W "label label!" -S = -- "\$cur" ) )
			__docker_nospace
			return
			;;
	esac

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--filter --force -f --help" -- "\$cur" ) )
			;;
	esac
}

_docker_volume_remove() {
	_docker_volume_rm
}

_docker_volume_rm() {
	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--force -f --help" -- "\$cur" ) )
			;;
		*)
			__docker_complete_volumes
			;;
	esac
}

_docker_volume() {
	local subcommands="
		create
		inspect
		ls
		prune
		rm
	"
	local aliases="
		list
		remove
	"
	__docker_subcommands "\$subcommands \$aliases" && return

	case "\$cur" in
		-*)
			COMPREPLY=( \$( compgen -W "--help" -- "\$cur" ) )
			;;
		*)
			COMPREPLY=( \$( compgen -W "\$subcommands" -- "\$cur" ) )
			;;
	esac
}

_docker_wait() {
	_docker_container_wait
}

_docker() {
	local previous_extglob_setting=\$(shopt -p extglob)
	shopt -s extglob

	local management_commands=(
		config
		container
		image
		network
		node
		plugin
		secret
		service
		stack
		system
		volume
	)

	local top_level_commands=(
		build
		login
		logout
		run
		search
		version
	)

	local legacy_commands=(
		attach
		commit
		cp
		create
		diff
		events
		exec
		export
		history
		images
		import
		info
		inspect
		kill
		load
		logs
		pause
		port
		ps
		pull
		push
		rename
		restart
		rm
		rmi
		save
		start
		stats
		stop
		swarm
		tag
		top
		unpause
		update
		wait
	)

	local experimental_commands=(
		checkpoint
		deploy
		trust
	)

	local commands=(\${management_commands[*]} \${top_level_commands[*]})
	[ -z "\$DOCKER_HIDE_LEGACY_COMMANDS" ] && commands+=(\${legacy_commands[*]})

	# These options are valid as global options for all client commands
	# and valid as command options for \`docker daemon\`
	local global_boolean_options="
		--debug -D
		--tls
		--tlsverify
	"
	local global_options_with_args="
		--config
		--host -H
		--log-level -l
		--tlscacert
		--tlscert
		--tlskey
	"

	local host config daemon_os

	COMPREPLY=()
	local cur prev words cword
	_get_comp_words_by_ref -n : cur prev words cword

	local command='docker' command_pos=0 subcommand_pos
	local counter=1
	while [ "\$counter" -lt "\$cword" ]; do
		case "\${words[\$counter]}" in
			# save host so that completion can use custom daemon
			--host|-H)
				(( counter++ ))
				host="\${words[\$counter]}"
				;;
			# save config so that completion can use custom configuration directories
			--config)
				(( counter++ ))
				config="\${words[\$counter]}"
				;;
			\$(__docker_to_extglob "\$global_options_with_args") )
				(( counter++ ))
				;;
			-*)
				;;
			=)
				(( counter++ ))
				;;
			*)
				command="\${words[\$counter]}"
				command_pos=\$counter
				break
				;;
		esac
		(( counter++ ))
	done

	local binary="\${words[0]}"
	if [[ \$binary == ?(*/)dockerd ]] ; then
		# for the dockerd binary, we reuse completion of \`docker daemon\`.
		# dockerd does not have subcommands and global options.
		command=daemon
		command_pos=0
	fi

	local completions_func=_docker_\${command//-/_}
	declare -F \$completions_func >/dev/null && \$completions_func

	eval "\$previous_extglob_setting"
	return 0
}

eval "\$__docker_previous_extglob_setting"
unset __docker_previous_extglob_setting

complete -F _docker docker docker.exe dockerd dockerd.exe
EOF
[ "$MD5SUM" != "$(md5sum "/etc/bash_completion.d/docker")" ] && SERVICE_sysvinit_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/bash_completion.d/docker")" ] && SERVICE_upstart_docker=1
MD5SUM="$(md5sum "/etc/cloud/cloud.cfg" 2>/dev/null)"
mkdir -p "/etc/cloud"
cat >"/etc/cloud/cloud.cfg" <<EOF
# The top level settings are used as module
# and system configuration.

# A set of users which may be applied and/or used by various modules
# when a 'default' entry is found it will reference the 'default_user'
# from the distro configuration specified below
users:
   - default

# If this is set, 'root' will not be able to ssh in and they 
# will get a message to login instead as the above \$user (debian)
disable_root: true

# This will cause the set+update hostname module to not operate (if true)
preserve_hostname: false

# Example datasource config
# datasource: 
#    Ec2: 
#      metadata_urls: [ 'blah.com' ]
#      timeout: 5 # (defaults to 50 seconds)
#      max_wait: 10 # (defaults to 120 seconds)

# The modules that run in the 'init' stage
cloud_init_modules:
 - migrator
 - seed_random
 - growpart
 - bootcmd
 - write-files
 - growpart
 - resizefs
 - set_hostname
 - update_hostname
 - update_etc_hosts
 - ca-certs
 - rsyslog
 - users-groups
 - ssh

# The modules that run in the 'config' stage
cloud_config_modules:
# Emit the cloud config ready event
# this can be used by upstart jobs for 'start on cloud-config'.
 - emit_upstart
 - disk_setup
 - mounts
 - ssh-import-id
 - locale
 - set-passwords
 - grub-dpkg
 - apt-pipelining
 - apt-configure
 - package-update-upgrade-install
 - fan
 - landscape
 - timezone
 - puppet
 - chef
 - salt-minion
 - mcollective
 - disable-ec2-metadata
 - runcmd
 - byobu

# The modules that run in the 'final' stage
cloud_final_modules:
 - rightscale_userdata
 - scripts-vendor
 - scripts-per-once
 - scripts-per-boot
 - scripts-per-instance
 - scripts-user
 - ssh-authkey-fingerprints
 - keys-to-console
 - phone-home
 - final-message
 - power-state-change

# System and/or distro specific settings
# (not accessible to handlers/transforms)
system_info:
   # This will affect which distro class gets used
   distro: debian
   # Default user name + that default users groups (if added/used)
   default_user:
     name: admin
     sudo: ALL=(ALL) NOPASSWD:ALL
     shell: /bin/bash
     lock_passwd: True
     gecos: Debian
     groups: [adm, audio, cdrom, dialout, dip, floppy, netdev, plugdev, sudo, video]
     sudo: ["ALL=(ALL) NOPASSWD:ALL"]
     shell: /bin/bash
   # Other config here will be given to the distro class and/or path classes
   paths:
      cloud_dir: /var/lib/cloud/
      templates_dir: /etc/cloud/templates/
      upstart_dir: /etc/init/
   package_mirrors:
     - arches: [default]
       failsafe:
         primary: http://httpredir.debian.org/debian
         security: http://security.debian.org/
EOF
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg")" ] && SERVICE_sysvinit_cloudconfig=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg")" ] && SERVICE_sysvinit_cloudinit=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg")" ] && SERVICE_upstart_cloudconfig=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg")" ] && SERVICE_sysvinit_cloudinitlocal=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg")" ] && SERVICE_sysvinit_cloudfinal=1
MD5SUM="$(md5sum "/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg" 2>/dev/null)"
mkdir -p "/etc/cloud/cloud.cfg.d"
cat >"/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg" <<EOF
apt_preserve_sources_list: true
manage_etc_hosts: true
EOF
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg")" ] && SERVICE_sysvinit_cloudconfig=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg")" ] && SERVICE_sysvinit_cloudinit=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg")" ] && SERVICE_upstart_cloudconfig=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg")" ] && SERVICE_sysvinit_cloudinitlocal=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/01_debian_cloud.cfg")" ] && SERVICE_sysvinit_cloudfinal=1
MD5SUM="$(md5sum "/etc/cloud/cloud.cfg.d/90_dpkg.cfg" 2>/dev/null)"
mkdir -p "/etc/cloud/cloud.cfg.d"
cat >"/etc/cloud/cloud.cfg.d/90_dpkg.cfg" <<EOF
# to update this file, run dpkg-reconfigure cloud-init
datasource_list: [    Ec2 ]
EOF
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/90_dpkg.cfg")" ] && SERVICE_sysvinit_cloudconfig=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/90_dpkg.cfg")" ] && SERVICE_sysvinit_cloudinit=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/90_dpkg.cfg")" ] && SERVICE_upstart_cloudconfig=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/90_dpkg.cfg")" ] && SERVICE_sysvinit_cloudinitlocal=1
[ "$MD5SUM" != "$(md5sum "/etc/cloud/cloud.cfg.d/90_dpkg.cfg")" ] && SERVICE_sysvinit_cloudfinal=1
MD5SUM="$(md5sum "/etc/default/docker" 2>/dev/null)"
mkdir -p "/etc/default"
cat >"/etc/default/docker" <<EOF
# Docker Upstart and SysVinit configuration file

#
# THIS FILE DOES NOT APPLY TO SYSTEMD
#
#   Please see the documentation for "systemd drop-ins":
#   https://docs.docker.com/engine/admin/systemd/
#

# Customize location of Docker binary (especially for development testing).
#DOCKERD="/usr/local/bin/dockerd"

# Use DOCKER_OPTS to modify the daemon startup options.
#DOCKER_OPTS="--dns 8.8.8.8 --dns 8.8.4.4"

# If you need Docker to use an HTTP proxy, it can also be specified here.
#export http_proxy="http://127.0.0.1:3128/"

# This is also a handy place to tweak where Docker's temporary files go.
#export DOCKER_TMPDIR="/mnt/bigdrive/docker-tmp"

OPTIONS=" -H tcp://0.0.0.0:2375  -H unix:///var/run/docker.sock --ip-forward=true --iptables=true --ip-masq=true"

EOF
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_ipmievd=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_rabbitmqserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_rsync=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_upstart_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_upstart_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_redisserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_nginx=1
[ "$MD5SUM" != "$(md5sum "/etc/default/docker")" ] && SERVICE_sysvinit_supervisor=1
MD5SUM="$(md5sum "/etc/default/grub" 2>/dev/null)"
mkdir -p "/etc/default"
cat >"/etc/default/grub" <<EOF
GRUB_CMDLINE_LINUX="init=/bin/systemd"
GRUB_TIMEOUT=0
GRUB_SERIAL_COMMAND="serial"
GRUB_DISABLE_RECOVERY=True
GRUB_GFXMODE="auto"
GRUB_HIDDEN_TIMEOUT_QUIET=True
GRUB_HIDDEN_TIMEOUT=0
TERMINAL="console"
GRUB_DEFAULT=0
GRUB_CMDLINE_LINUX_DEFAULT="console=ttyS0 console=hvc0 cgroup_enable=memory swapaccount=1"
EOF
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_ipmievd=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_rabbitmqserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_rsync=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_upstart_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_upstart_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_redisserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_nginx=1
[ "$MD5SUM" != "$(md5sum "/etc/default/grub")" ] && SERVICE_sysvinit_supervisor=1
MD5SUM="$(md5sum "/etc/default/ipmievd" 2>/dev/null)"
mkdir -p "/etc/default"
cat >"/etc/default/ipmievd" <<EOF
# This is a shell script fraction

#
# To enable ipmievd set ENABLED="true" for sysvinit (ignored by systemd)
#
ENABLED="false"


# Options to the daemon ipmievd(8).
#
IPMIEVD_OPTIONS="open daemon"
ENABLED=false
EOF
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_ipmievd=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_rabbitmqserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_rsync=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_upstart_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_upstart_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_redisserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_nginx=1
[ "$MD5SUM" != "$(md5sum "/etc/default/ipmievd")" ] && SERVICE_sysvinit_supervisor=1
MD5SUM="$(md5sum "/etc/default/locale" 2>/dev/null)"
mkdir -p "/etc/default"
cat >"/etc/default/locale" <<EOF
# Created by cloud-init v. 0.7.7 on Wed, 21 Feb 2018 06:21:19 +0000
LANG="en_US.UTF-8"
EOF
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_ipmievd=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_rabbitmqserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_rsync=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_upstart_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_upstart_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_redisserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_nginx=1
[ "$MD5SUM" != "$(md5sum "/etc/default/locale")" ] && SERVICE_sysvinit_supervisor=1
MD5SUM="$(md5sum "/etc/default/sysstat" 2>/dev/null)"
mkdir -p "/etc/default"
cat >"/etc/default/sysstat" <<EOF
#
# Default settings for /etc/init.d/sysstat, /etc/cron.d/sysstat
# and /etc/cron.daily/sysstat files
#

# Should sadc collect system activity informations? Valid values
# are "true" and "false". Please do not put other values, they
# will be overwritten by debconf!
ENABLED="false"

EOF
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_ipmievd=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_rabbitmqserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_rsync=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_upstart_ssh=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_upstart_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_docker=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_redisserver=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_sysstat=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_nginx=1
[ "$MD5SUM" != "$(md5sum "/etc/default/sysstat")" ] && SERVICE_sysvinit_supervisor=1
mkdir -p "/etc/dhcp/dhclient-exit-hooks.d"
cat >"/etc/dhcp/dhclient-exit-hooks.d/ec2dhcp.sh" <<EOF
#!/bin/bash

# Copyright (C) 2012 Amazon.com, Inc. or its affiliates.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#    http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the
# License.

INTERFACE="\${interface}"
PREFIX="\${new_prefix}"
. /etc/sysconfig/network-scripts/ec2net-functions

ec2dhcp_config() {
  rewrite_rules
  rewrite_aliases
}

ec2dhcp_restore() {
  remove_aliases
  remove_rules
}

EOF
chmod 0755 "/etc/dhcp/dhclient-exit-hooks.d/ec2dhcp.sh"
mkdir -p "/etc/docker"
cat >"/etc/docker/key.json" <<EOF
{"crv":"P-256","d":"T6CAAa05jmUIv50EboA9JAuSf_R7dxbNngRnkLkoW3M","kid":"VA4Q:SD7S:LCN3:A7RP:IS57:IBCY:ZYXT:E7NP:YWR2:JGGB:7KVX:PLWU","kty":"EC","x":"6iYkNkSD9wiETi3z1idqS5M1moss8LtlS1tpZXIcc1w","y":"OC5wFU2UNzD3la8u3wojzVbOpBhPm8bybV2h8Zkq15E"}
EOF
chmod 0600 "/etc/docker/key.json"
mkdir -p "/etc/fonts/conf.d"
ln -s "/usr/share/fontconfig/conf.avail/70-no-bitmaps.conf" "/etc/fonts/conf.d/70-no-bitmaps.conf"
mkdir -p "/etc"
cat >"/etc/idmapd.conf" <<EOF
[General]

Verbosity = 0
Pipefs-Directory = /run/rpc_pipefs
# set your own domain here, if id differs from FQDN minus hostname
# Domain = localdomain

[Mapping]

Nobody-User = nobody
Nobody-Group = nogroup
EOF
mkdir -p "/etc/initramfs-tools"
cat >"/etc/initramfs-tools/modules" <<EOF
# List of modules that you want to include in your initramfs.
# They will be loaded at boot time in the order below.
#
# Syntax:  module_name [args ...]
#
# You must run update-initramfs(8) to effect this change.
#
# Examples:
#
# raid1
# sd_mod
EOF
mkdir -p "/etc/local/rbrain-frontend"
cat >"/etc/local/rbrain-frontend/setup.js" <<EOF
window.rbrain = {
  sentry: '',
  max_size: 524288000,
  marketplace_item_update_max_size: 5242880,
  intercomId: '',
  elb_port: '4443',
  isRegistrationEnabled: true
};
EOF
chown apprbrain "/etc/local/rbrain-frontend/setup.js"
chgrp admin "/etc/local/rbrain-frontend/setup.js"
mkdir -p "/etc/local/rbrain-ops-apps"
cat >"/etc/local/rbrain-ops-apps/settings_ops_apps.py" <<EOF
# BASE SETTINGS
AWS_DEFAULT_REGION = 'eu-west-2'
ENV_FILE = '/etc/envname'

# SWARM
MANAGER_URL = 'tcp://localhost:4000'

# DRAINED SETTINGS
DRAINED_IMAGE = 'rbrain/hello'
DRAINED_LABEL =  'drained'
DRAINED_LABEL_VALUE = 'true'
OMITTED_IMAGES = ['swarm', ] + [DRAINED_IMAGE]

# LOGGING SETTINGS
LOG_LEVEL = 'INFO'
LOG_PATH = '/var/log/rbrain-ops-apps'

# DEBUG MODE
LOCALLY_HOSTED = False

CRITICAL_INTEGRATION_KEY = 'c8e185a66ae64783ab472568f2d42ae5'
DOWN_INTEGRATION_KEY = 'c8e185a66ae64783ab472568f2d42ae5'
WARNING_INTEGRATION_KEY = '9ce780c7987546998e2a6e7910034c67'
UNKNOWN_INTEGRATION_KEY = '9ce780c7987546998e2a6e7910034c67'
EOF
mkdir -p "/etc/modprobe.d"
cat >"/etc/modprobe.d/blacklist.conf" <<EOF
# disable pc speaker and floppy
blacklist pcspkr
blacklist floppy
blacklist i2c_piix4
blacklist psmouse
EOF
mkdir -p "/etc/modules-load.d"
ln -s "../modules" "/etc/modules-load.d/modules.conf"
mkdir -p "/etc"
cat >"/etc/networks" <<EOF
default		0.0.0.0
loopback	127.0.0.0
link-local	169.254.0.0

EOF
MD5SUM="$(md5sum "/etc/nginx/nginx.conf" 2>/dev/null)"
mkdir -p "/etc/nginx"
cat >"/etc/nginx/nginx.conf" <<EOF
# MANAGED BY PUPPET
user www-data;
worker_processes 1;
worker_rlimit_nofile 1024;

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/error.log error;


events {
  worker_connections 1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  access_log  /var/log/nginx/access.log;

  sendfile    on;

  server_tokens on;

  types_hash_max_size 1024;
  types_hash_bucket_size 512;

  server_names_hash_bucket_size 256;
  server_names_hash_max_size 512;

  keepalive_timeout  65;
  tcp_nodelay        on;

  gzip              on;
  gzip_comp_level   1;
  gzip_disable      msie6;
  gzip_min_length   20;
  gzip_http_version 1.1;
  gzip_proxied      off;
  gzip_types        application/json application/x-javascript application/javascript text/javascript text/css text/plain;
  gzip_vary         off;

  client_body_temp_path   /var/nginx/client_body_temp;
  client_max_body_size    10M;
  client_body_buffer_size 128k;
  proxy_redirect          off;
  proxy_temp_path         /var/nginx/proxy_temp;
  proxy_connect_timeout   90;
  proxy_send_timeout      90;
  proxy_read_timeout      90;
  proxy_buffers           32 4k;
  proxy_buffer_size       8k;
  proxy_http_version      1.1;
  proxy_set_header        Host \$host;
  proxy_set_header        X-Real-IP \$remote_addr;
  proxy_set_header        X-Forwarded-For \$proxy_add_x_forwarded_for;
  proxy_headers_hash_bucket_size 64;

  include /etc/nginx/conf.d/*.conf;
  include /etc/nginx/sites-enabled/*;
}
EOF
chown apprbrain "/etc/nginx/nginx.conf"
chgrp admin "/etc/nginx/nginx.conf"
[ "$MD5SUM" != "$(md5sum "/etc/nginx/nginx.conf")" ] && SERVICE_sysvinit_nginx=1
MD5SUM="$(md5sum "/etc/nginx/sites-available/ride-jupyter.conf" 2>/dev/null)"
mkdir -p "/etc/nginx/sites-available"
cat >"/etc/nginx/sites-available/ride-jupyter.conf" <<EOF
server {
  listen *:82 proxy_protocol;
  server_name           *.amazonaws.com;

  index  index.html index.htm index.php;

  access_log            /var/log/nginx/ride-jupyter.access.log combined;
  error_log             /var/log/nginx/ride-jupyter.error.log;

  location / {

    proxy_pass            http://localhost:8000;
    proxy_read_timeout    1800;
    proxy_connect_timeout 90;
    proxy_redirect        off;
    proxy_set_header      Proxy-Destination jupyter;
    proxy_set_header      Upgrade \$http_upgrade;
    proxy_set_header      Connection Upgrade;
  }
#  if (\$http_x_forwarded_proto = 'http') { return 301 https://ride.staging.r-brain.io\$request_uri; }
  set \$dummy dummy;
  real_ip_header proxy_protocol;
  set_real_ip_from 10.0.0.0/22;
}
EOF
chown apprbrain "/etc/nginx/sites-available/ride-jupyter.conf"
chgrp admin "/etc/nginx/sites-available/ride-jupyter.conf"
[ "$MD5SUM" != "$(md5sum "/etc/nginx/sites-available/ride-jupyter.conf")" ] && SERVICE_sysvinit_nginx=1
MD5SUM="$(md5sum "/etc/nginx/sites-available/ride-lsp.conf" 2>/dev/null)"
mkdir -p "/etc/nginx/sites-available"
cat >"/etc/nginx/sites-available/ride-lsp.conf" <<EOF
server {
  listen *:8080 proxy_protocol;
  server_name           *;

  index  index.html index.htm index.php;

  access_log            /var/log/nginx/ride-lsp.access.log combined;
  error_log             /var/log/nginx/ride-lsp.error.log;

  location / {

    proxy_pass            http://localhost:8000;
    proxy_read_timeout    1800;
    proxy_connect_timeout 90;
    proxy_redirect        off;
    proxy_set_header      Proxy-Destination lsp;
    proxy_set_header      Upgrade \$http_upgrade;
    proxy_set_header      Connection Upgrade;
  }
#  if (\$http_x_forwarded_proto = 'http') { return 301 https://ride.staging.r-brain.io\$request_uri; }
  set \$dummy dummy;
  real_ip_header proxy_protocol;
  set_real_ip_from 10.0.0.0/22;
}

EOF
chown apprbrain "/etc/nginx/sites-available/ride-lsp.conf"
chgrp admin "/etc/nginx/sites-available/ride-lsp.conf"
[ "$MD5SUM" != "$(md5sum "/etc/nginx/sites-available/ride-lsp.conf")" ] && SERVICE_sysvinit_nginx=1
MD5SUM="$(md5sum "/etc/nginx/sites-enabled/default.conf" 2>/dev/null)"
mkdir -p "/etc/nginx/sites-enabled"
cat >"/etc/nginx/sites-enabled/default.conf" <<EOF
# MANAGED BY PUPPET
server {
  listen *:80 default_server;
  server_name           default;

  index  index.html index.htm index.php;

  access_log            /var/log/nginx/default.access.log combined;
  error_log             /var/log/nginx/default.error.log;

  location /nginx_status {
    allow 127.0.0.1;
    deny all;

    stub_status on;
  }

  location / {

    return 200;
    root      /usr/share/nginx/html;
    index     index.html index.htm index.php;
  }
}
EOF
[ "$MD5SUM" != "$(md5sum "/etc/nginx/sites-enabled/default.conf")" ] && SERVICE_sysvinit_nginx=1
mkdir -p "/etc/postfix"
cat >"/etc/postfix/main.cf" <<EOF
# See /usr/share/postfix/main.cf.dist for a commented, more complete version


# Debian specific:  Specifying a file name will cause the first
# line of that file to be used as the name.  The Debian default
# is /etc/mailname.
#myorigin = /etc/mailname

smtpd_banner = \$myhostname ESMTP \$mail_name (Debian/GNU)
biff = no

# appending .domain is the MUA's job.
append_dot_mydomain = no

# Uncomment the next line to generate "delayed mail" warnings
#delay_warning_time = 4h

readme_directory = no

# TLS parameters
smtpd_tls_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
smtpd_tls_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
smtpd_use_tls=yes
smtpd_tls_session_cache_database = btree:\${data_directory}/smtpd_scache
smtp_tls_session_cache_database = btree:\${data_directory}/smtp_scache

# See /usr/share/doc/postfix/TLS_README.gz in the postfix-doc package for
# information on enabling SSL in the smtp client.

smtpd_relay_restrictions = permit_mynetworks permit_sasl_authenticated defer_unauth_destination
myhostname = ip-172-31-15-182.eu-west-2.compute.internal
alias_maps = hash:/etc/aliases
alias_database = hash:/etc/aliases
myorigin = /etc/mailname
mydestination = ip-172-31-15-182.eu-west-2.compute.internal, localhost.eu-west-2.compute.internal, localhost
relayhost = 
mynetworks = 127.0.0.0/8 [::ffff:127.0.0.0]/104 [::1]/128
mailbox_size_limit = 0
recipient_delimiter = +
inet_interfaces = loopback-only
default_transport = error
relay_transport = error
EOF
mkdir -p "/etc/postgresql/10/main"
cat >"/etc/postgresql/10/main/environment" <<EOF
# environment variables for postgres processes
# This file has the same syntax as postgresql.conf:
#  VARIABLE = simple_value
#  VARIABLE2 = 'any value!'
# I. e. you need to enclose any value which does not only consist of letters,
# numbers, and '-', '_', '.' in single quotes. Shell commands are not
# evaluated.
EOF
chown postgres "/etc/postgresql/10/main/environment"
chgrp postgres "/etc/postgresql/10/main/environment"
mkdir -p "/etc/postgresql/10/main"
cat >"/etc/postgresql/10/main/pg_ident.conf" <<EOF
# PostgreSQL User Name Maps
# =========================
#
# Refer to the PostgreSQL documentation, chapter "Client
# Authentication" for a complete description.  A short synopsis
# follows.
#
# This file controls PostgreSQL user name mapping.  It maps external
# user names to their corresponding PostgreSQL user names.  Records
# are of the form:
#
# MAPNAME  SYSTEM-USERNAME  PG-USERNAME
#
# (The uppercase quantities must be replaced by actual values.)
#
# MAPNAME is the (otherwise freely chosen) map name that was used in
# pg_hba.conf.  SYSTEM-USERNAME is the detected user name of the
# client.  PG-USERNAME is the requested PostgreSQL user name.  The
# existence of a record specifies that SYSTEM-USERNAME may connect as
# PG-USERNAME.
#
# If SYSTEM-USERNAME starts with a slash (/), it will be treated as a
# regular expression.  Optionally this can contain a capture (a
# parenthesized subexpression).  The substring matching the capture
# will be substituted for \\1 (backslash-one) if present in
# PG-USERNAME.
#
# Multiple maps may be specified in this file and used by pg_hba.conf.
#
# No map names are defined in the default configuration.  If all
# system user names and PostgreSQL user names are the same, you don't
# need anything in this file.
#
# This file is read on server startup and when the postmaster receives
# a SIGHUP signal.  If you edit the file on a running system, you have
# to SIGHUP the postmaster for the changes to take effect.  You can
# use "pg_ctl reload" to do that.

# Put your actual configuration here
# ----------------------------------

# MAPNAME       SYSTEM-USERNAME         PG-USERNAME
EOF
chown postgres "/etc/postgresql/10/main/pg_ident.conf"
chgrp postgres "/etc/postgresql/10/main/pg_ident.conf"
chmod 0640 "/etc/postgresql/10/main/pg_ident.conf"
mkdir -p "/etc/postgresql/10/main"
cat >"/etc/postgresql/10/main/postgresql.conf" <<EOF
# -----------------------------
# PostgreSQL configuration file
# -----------------------------
#
# This file consists of lines of the form:
#
#   name = value
#
# (The "=" is optional.)  Whitespace may be used.  Comments are introduced with
# "#" anywhere on a line.  The complete list of parameter names and allowed
# values can be found in the PostgreSQL documentation.
#
# The commented-out settings shown in this file represent the default values.
# Re-commenting a setting is NOT sufficient to revert it to the default value;
# you need to reload the server.
#
# This file is read on server startup and when the server receives a SIGHUP
# signal.  If you edit the file on a running system, you have to SIGHUP the
# server for the changes to take effect, run "pg_ctl reload", or execute
# "SELECT pg_reload_conf()".  Some parameters, which are marked below,
# require a server shutdown and restart to take effect.
#
# Any parameter can also be given as a command-line option to the server, e.g.,
# "postgres -c log_connections=on".  Some parameters can be changed at run time
# with the "SET" SQL command.
#
# Memory units:  kB = kilobytes        Time units:  ms  = milliseconds
#                MB = megabytes                     s   = seconds
#                GB = gigabytes                     min = minutes
#                TB = terabytes                     h   = hours
#                                                   d   = days


#------------------------------------------------------------------------------
# FILE LOCATIONS
#------------------------------------------------------------------------------

# The default values of these variables are driven from the -D command-line
# option or PGDATA environment variable, represented here as ConfigDir.

data_directory = '/var/lib/postgresql/10/main'		# use data in another directory
					# (change requires restart)
hba_file = '/etc/postgresql/10/main/pg_hba.conf'	# host-based authentication file
					# (change requires restart)
ident_file = '/etc/postgresql/10/main/pg_ident.conf'	# ident configuration file
					# (change requires restart)

# If external_pid_file is not explicitly set, no extra PID file is written.
external_pid_file = '/var/run/postgresql/10-main.pid'			# write an extra PID file
					# (change requires restart)


#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

# - Connection Settings -

#listen_addresses = 'localhost'		# what IP address(es) to listen on;
					# comma-separated list of addresses;
					# defaults to 'localhost'; use '*' for all
					# (change requires restart)
port = 5432				# (change requires restart)
max_connections = 100			# (change requires restart)
#superuser_reserved_connections = 3	# (change requires restart)
unix_socket_directories = '/var/run/postgresql'	# comma-separated list of directories
					# (change requires restart)
#unix_socket_group = ''			# (change requires restart)
#unix_socket_permissions = 0777		# begin with 0 to use octal notation
					# (change requires restart)
#bonjour = off				# advertise server via Bonjour
					# (change requires restart)
#bonjour_name = ''			# defaults to the computer name
					# (change requires restart)

# - Security and Authentication -

#authentication_timeout = 1min		# 1s-600s
ssl = on
#ssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL' # allowed SSL ciphers
#ssl_prefer_server_ciphers = on
#ssl_ecdh_curve = 'prime256v1'
#ssl_dh_params_file = ''
ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'
ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'
#ssl_ca_file = ''
#ssl_crl_file = ''
#password_encryption = md5		# md5 or scram-sha-256
#db_user_namespace = off
#row_security = on

# GSSAPI using Kerberos
#krb_server_keyfile = ''
#krb_caseins_users = off

# - TCP Keepalives -
# see "man 7 tcp" for details

#tcp_keepalives_idle = 0		# TCP_KEEPIDLE, in seconds;
					# 0 selects the system default
#tcp_keepalives_interval = 0		# TCP_KEEPINTVL, in seconds;
					# 0 selects the system default
#tcp_keepalives_count = 0		# TCP_KEEPCNT;
					# 0 selects the system default


#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# - Memory -

shared_buffers = 128MB			# min 128kB
					# (change requires restart)
#huge_pages = try			# on, off, or try
					# (change requires restart)
#temp_buffers = 8MB			# min 800kB
#max_prepared_transactions = 0		# zero disables the feature
					# (change requires restart)
# Caution: it is not advisable to set max_prepared_transactions nonzero unless
# you actively intend to use prepared transactions.
#work_mem = 4MB				# min 64kB
#maintenance_work_mem = 64MB		# min 1MB
#replacement_sort_tuples = 150000	# limits use of replacement selection sort
#autovacuum_work_mem = -1		# min 1MB, or -1 to use maintenance_work_mem
#max_stack_depth = 2MB			# min 100kB
dynamic_shared_memory_type = posix	# the default is the first option
					# supported by the operating system:
					#   posix
					#   sysv
					#   windows
					#   mmap
					# use none to disable dynamic shared memory
					# (change requires restart)

# - Disk -

#temp_file_limit = -1			# limits per-process temp file space
					# in kB, or -1 for no limit

# - Kernel Resource Usage -

#max_files_per_process = 1000		# min 25
					# (change requires restart)
#shared_preload_libraries = ''		# (change requires restart)

# - Cost-Based Vacuum Delay -

#vacuum_cost_delay = 0			# 0-100 milliseconds
#vacuum_cost_page_hit = 1		# 0-10000 credits
#vacuum_cost_page_miss = 10		# 0-10000 credits
#vacuum_cost_page_dirty = 20		# 0-10000 credits
#vacuum_cost_limit = 200		# 1-10000 credits

# - Background Writer -

#bgwriter_delay = 200ms			# 10-10000ms between rounds
#bgwriter_lru_maxpages = 100		# 0-1000 max buffers written/round
#bgwriter_lru_multiplier = 2.0		# 0-10.0 multiplier on buffers scanned/round
#bgwriter_flush_after = 512kB		# measured in pages, 0 disables

# - Asynchronous Behavior -

#effective_io_concurrency = 1		# 1-1000; 0 disables prefetching
#max_worker_processes = 8		# (change requires restart)
#max_parallel_workers_per_gather = 2	# taken from max_parallel_workers
#max_parallel_workers = 8		# maximum number of max_worker_processes that
					# can be used in parallel queries
#old_snapshot_threshold = -1		# 1min-60d; -1 disables; 0 is immediate
					# (change requires restart)
#backend_flush_after = 0		# measured in pages, 0 disables


#------------------------------------------------------------------------------
# WRITE AHEAD LOG
#------------------------------------------------------------------------------

# - Settings -

#wal_level = replica			# minimal, replica, or logical
					# (change requires restart)
#fsync = on				# flush data to disk for crash safety
					# (turning this off can cause
					# unrecoverable data corruption)
#synchronous_commit = on		# synchronization level;
					# off, local, remote_write, remote_apply, or on
#wal_sync_method = fsync		# the default is the first option
					# supported by the operating system:
					#   open_datasync
					#   fdatasync (default on Linux)
					#   fsync
					#   fsync_writethrough
					#   open_sync
#full_page_writes = on			# recover from partial page writes
#wal_compression = off			# enable compression of full-page writes
#wal_log_hints = off			# also do full page writes of non-critical updates
					# (change requires restart)
#wal_buffers = -1			# min 32kB, -1 sets based on shared_buffers
					# (change requires restart)
#wal_writer_delay = 200ms		# 1-10000 milliseconds
#wal_writer_flush_after = 1MB		# measured in pages, 0 disables

#commit_delay = 0			# range 0-100000, in microseconds
#commit_siblings = 5			# range 1-1000

# - Checkpoints -

#checkpoint_timeout = 5min		# range 30s-1d
#max_wal_size = 1GB
#min_wal_size = 80MB
#checkpoint_completion_target = 0.5	# checkpoint target duration, 0.0 - 1.0
#checkpoint_flush_after = 256kB		# measured in pages, 0 disables
#checkpoint_warning = 30s		# 0 disables

# - Archiving -

#archive_mode = off		# enables archiving; off, on, or always
				# (change requires restart)
#archive_command = ''		# command to use to archive a logfile segment
				# placeholders: %p = path of file to archive
				#               %f = file name only
				# e.g. 'test ! -f /mnt/server/archivedir/%f && cp %p /mnt/server/archivedir/%f'
#archive_timeout = 0		# force a logfile segment switch after this
				# number of seconds; 0 disables


#------------------------------------------------------------------------------
# REPLICATION
#------------------------------------------------------------------------------

# - Sending Server(s) -

# Set these on the master and on any standby that will send replication data.

#max_wal_senders = 10		# max number of walsender processes
				# (change requires restart)
#wal_keep_segments = 0		# in logfile segments, 16MB each; 0 disables
#wal_sender_timeout = 60s	# in milliseconds; 0 disables

#max_replication_slots = 10	# max number of replication slots
				# (change requires restart)
#track_commit_timestamp = off	# collect timestamp of transaction commit
				# (change requires restart)

# - Master Server -

# These settings are ignored on a standby server.

#synchronous_standby_names = ''	# standby servers that provide sync rep
				# method to choose sync standbys, number of sync standbys,
				# and comma-separated list of application_name
				# from standby(s); '*' = all
#vacuum_defer_cleanup_age = 0	# number of xacts by which cleanup is delayed

# - Standby Servers -

# These settings are ignored on a master server.

#hot_standby = on			# "off" disallows queries during recovery
					# (change requires restart)
#max_standby_archive_delay = 30s	# max delay before canceling queries
					# when reading WAL from archive;
					# -1 allows indefinite delay
#max_standby_streaming_delay = 30s	# max delay before canceling queries
					# when reading streaming WAL;
					# -1 allows indefinite delay
#wal_receiver_status_interval = 10s	# send replies at least this often
					# 0 disables
#hot_standby_feedback = off		# send info from standby to prevent
					# query conflicts
#wal_receiver_timeout = 60s		# time that receiver waits for
					# communication from master
					# in milliseconds; 0 disables
#wal_retrieve_retry_interval = 5s	# time to wait before retrying to
					# retrieve WAL after a failed attempt

# - Subscribers -

# These settings are ignored on a publisher.

#max_logical_replication_workers = 4	# taken from max_worker_processes
					# (change requires restart)
#max_sync_workers_per_subscription = 2	# taken from max_logical_replication_workers


#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# - Planner Method Configuration -

#enable_bitmapscan = on
#enable_hashagg = on
#enable_hashjoin = on
#enable_indexscan = on
#enable_indexonlyscan = on
#enable_material = on
#enable_mergejoin = on
#enable_nestloop = on
#enable_seqscan = on
#enable_sort = on
#enable_tidscan = on

# - Planner Cost Constants -

#seq_page_cost = 1.0			# measured on an arbitrary scale
#random_page_cost = 4.0			# same scale as above
#cpu_tuple_cost = 0.01			# same scale as above
#cpu_index_tuple_cost = 0.005		# same scale as above
#cpu_operator_cost = 0.0025		# same scale as above
#parallel_tuple_cost = 0.1		# same scale as above
#parallel_setup_cost = 1000.0	# same scale as above
#min_parallel_table_scan_size = 8MB
#min_parallel_index_scan_size = 512kB
#effective_cache_size = 4GB

# - Genetic Query Optimizer -

#geqo = on
#geqo_threshold = 12
#geqo_effort = 5			# range 1-10
#geqo_pool_size = 0			# selects default based on effort
#geqo_generations = 0			# selects default based on effort
#geqo_selection_bias = 2.0		# range 1.5-2.0
#geqo_seed = 0.0			# range 0.0-1.0

# - Other Planner Options -

#default_statistics_target = 100	# range 1-10000
#constraint_exclusion = partition	# on, off, or partition
#cursor_tuple_fraction = 0.1		# range 0.0-1.0
#from_collapse_limit = 8
#join_collapse_limit = 8		# 1 disables collapsing of explicit
					# JOIN clauses
#force_parallel_mode = off


#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# - Where to Log -

#log_destination = 'stderr'		# Valid values are combinations of
					# stderr, csvlog, syslog, and eventlog,
					# depending on platform.  csvlog
					# requires logging_collector to be on.

# This is used when logging to stderr:
#logging_collector = off		# Enable capturing of stderr and csvlog
					# into log files. Required to be on for
					# csvlogs.
					# (change requires restart)

# These are only used if logging_collector is on:
#log_directory = 'log'			# directory where log files are written,
					# can be absolute or relative to PGDATA
#log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'	# log file name pattern,
					# can include strftime() escapes
#log_file_mode = 0600			# creation mode for log files,
					# begin with 0 to use octal notation
#log_truncate_on_rotation = off		# If on, an existing log file with the
					# same name as the new log file will be
					# truncated rather than appended to.
					# But such truncation only occurs on
					# time-driven rotation, not on restarts
					# or size-driven rotation.  Default is
					# off, meaning append to existing files
					# in all cases.
#log_rotation_age = 1d			# Automatic rotation of logfiles will
					# happen after that time.  0 disables.
#log_rotation_size = 10MB		# Automatic rotation of logfiles will
					# happen after that much log output.
					# 0 disables.

# These are relevant when logging to syslog:
#syslog_facility = 'LOCAL0'
#syslog_ident = 'postgres'
#syslog_sequence_numbers = on
#syslog_split_messages = on

# This is only relevant when logging to eventlog (win32):
# (change requires restart)
#event_source = 'PostgreSQL'

# - When to Log -

#client_min_messages = notice		# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   log
					#   notice
					#   warning
					#   error

#log_min_messages = warning		# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   info
					#   notice
					#   warning
					#   error
					#   log
					#   fatal
					#   panic

#log_min_error_statement = error	# values in order of decreasing detail:
					#   debug5
					#   debug4
					#   debug3
					#   debug2
					#   debug1
					#   info
					#   notice
					#   warning
					#   error
					#   log
					#   fatal
					#   panic (effectively off)

#log_min_duration_statement = -1	# -1 is disabled, 0 logs all statements
					# and their durations, > 0 logs only
					# statements running at least this number
					# of milliseconds


# - What to Log -

#debug_print_parse = off
#debug_print_rewritten = off
#debug_print_plan = off
#debug_pretty_print = on
#log_checkpoints = off
#log_connections = off
#log_disconnections = off
#log_duration = off
#log_error_verbosity = default		# terse, default, or verbose messages
#log_hostname = off
log_line_prefix = '%m [%p] %q%u@%d '		# special values:
					#   %a = application name
					#   %u = user name
					#   %d = database name
					#   %r = remote host and port
					#   %h = remote host
					#   %p = process ID
					#   %t = timestamp without milliseconds
					#   %m = timestamp with milliseconds
					#   %n = timestamp with milliseconds (as a Unix epoch)
					#   %i = command tag
					#   %e = SQL state
					#   %c = session ID
					#   %l = session line number
					#   %s = session start timestamp
					#   %v = virtual transaction ID
					#   %x = transaction ID (0 if none)
					#   %q = stop here in non-session
					#        processes
					#   %% = '%'
					# e.g. '<%u%%%d> '
#log_lock_waits = off			# log lock waits >= deadlock_timeout
#log_statement = 'none'			# none, ddl, mod, all
#log_replication_commands = off
#log_temp_files = -1			# log temporary files equal or larger
					# than the specified size in kilobytes;
					# -1 disables, 0 logs all temp files
log_timezone = 'UTC'


# - Process Title -

cluster_name = '10/main'			# added to process titles if nonempty
					# (change requires restart)
#update_process_title = on


#------------------------------------------------------------------------------
# RUNTIME STATISTICS
#------------------------------------------------------------------------------

# - Query/Index Statistics Collector -

#track_activities = on
#track_counts = on
#track_io_timing = off
#track_functions = none			# none, pl, all
#track_activity_query_size = 1024	# (change requires restart)
stats_temp_directory = '/var/run/postgresql/10-main.pg_stat_tmp'


# - Statistics Monitoring -

#log_parser_stats = off
#log_planner_stats = off
#log_executor_stats = off
#log_statement_stats = off


#------------------------------------------------------------------------------
# AUTOVACUUM PARAMETERS
#------------------------------------------------------------------------------

#autovacuum = on			# Enable autovacuum subprocess?  'on'
					# requires track_counts to also be on.
#log_autovacuum_min_duration = -1	# -1 disables, 0 logs all actions and
					# their durations, > 0 logs only
					# actions running at least this number
					# of milliseconds.
#autovacuum_max_workers = 3		# max number of autovacuum subprocesses
					# (change requires restart)
#autovacuum_naptime = 1min		# time between autovacuum runs
#autovacuum_vacuum_threshold = 50	# min number of row updates before
					# vacuum
#autovacuum_analyze_threshold = 50	# min number of row updates before
					# analyze
#autovacuum_vacuum_scale_factor = 0.2	# fraction of table size before vacuum
#autovacuum_analyze_scale_factor = 0.1	# fraction of table size before analyze
#autovacuum_freeze_max_age = 200000000	# maximum XID age before forced vacuum
					# (change requires restart)
#autovacuum_multixact_freeze_max_age = 400000000	# maximum multixact age
					# before forced vacuum
					# (change requires restart)
#autovacuum_vacuum_cost_delay = 20ms	# default vacuum cost delay for
					# autovacuum, in milliseconds;
					# -1 means use vacuum_cost_delay
#autovacuum_vacuum_cost_limit = -1	# default vacuum cost limit for
					# autovacuum, -1 means use
					# vacuum_cost_limit


#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# - Statement Behavior -

#search_path = '"\$user", public'	# schema names
#default_tablespace = ''		# a tablespace name, '' uses the default
#temp_tablespaces = ''			# a list of tablespace names, '' uses
					# only default tablespace
#check_function_bodies = on
#default_transaction_isolation = 'read committed'
#default_transaction_read_only = off
#default_transaction_deferrable = off
#session_replication_role = 'origin'
#statement_timeout = 0			# in milliseconds, 0 is disabled
#lock_timeout = 0			# in milliseconds, 0 is disabled
#idle_in_transaction_session_timeout = 0	# in milliseconds, 0 is disabled
#vacuum_freeze_min_age = 50000000
#vacuum_freeze_table_age = 150000000
#vacuum_multixact_freeze_min_age = 5000000
#vacuum_multixact_freeze_table_age = 150000000
#bytea_output = 'hex'			# hex, escape
#xmlbinary = 'base64'
#xmloption = 'content'
#gin_fuzzy_search_limit = 0
#gin_pending_list_limit = 4MB

# - Locale and Formatting -

datestyle = 'iso, mdy'
#intervalstyle = 'postgres'
timezone = 'UTC'
#timezone_abbreviations = 'Default'     # Select the set of available time zone
					# abbreviations.  Currently, there are
					#   Default
					#   Australia (historical usage)
					#   India
					# You can create your own file in
					# share/timezonesets/.
#extra_float_digits = 0			# min -15, max 3
#client_encoding = sql_ascii		# actually, defaults to database
					# encoding

# These settings are initialized by initdb, but they can be changed.
lc_messages = 'en_US.UTF-8'			# locale for system error message
					# strings
lc_monetary = 'en_US.UTF-8'			# locale for monetary formatting
lc_numeric = 'en_US.UTF-8'			# locale for number formatting
lc_time = 'en_US.UTF-8'				# locale for time formatting

# default configuration for text search
default_text_search_config = 'pg_catalog.english'

# - Other Defaults -

#dynamic_library_path = '\$libdir'
#local_preload_libraries = ''
#session_preload_libraries = ''


#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------

#deadlock_timeout = 1s
#max_locks_per_transaction = 64		# min 10
					# (change requires restart)
#max_pred_locks_per_transaction = 64	# min 10
					# (change requires restart)
#max_pred_locks_per_relation = -2	# negative values mean
					# (max_pred_locks_per_transaction
					#  / -max_pred_locks_per_relation) - 1
#max_pred_locks_per_page = 2            # min 0


#------------------------------------------------------------------------------
# VERSION/PLATFORM COMPATIBILITY
#------------------------------------------------------------------------------

# - Previous PostgreSQL Versions -

#array_nulls = on
#backslash_quote = safe_encoding	# on, off, or safe_encoding
#default_with_oids = off
#escape_string_warning = on
#lo_compat_privileges = off
#operator_precedence_warning = off
#quote_all_identifiers = off
#standard_conforming_strings = on
#synchronize_seqscans = on

# - Other Platforms and Clients -

#transform_null_equals = off


#------------------------------------------------------------------------------
# ERROR HANDLING
#------------------------------------------------------------------------------

#exit_on_error = off			# terminate session on any error?
#restart_after_crash = on		# reinitialize after backend crash?


#------------------------------------------------------------------------------
# CONFIG FILE INCLUDES
#------------------------------------------------------------------------------

# These options allow settings to be loaded from files other than the
# default postgresql.conf.

include_dir = 'conf.d'			# include files ending in '.conf' from
					# directory 'conf.d'
#include_if_exists = 'exists.conf'	# include file only if it exists
#include = 'special.conf'		# include file


#------------------------------------------------------------------------------
# CUSTOMIZED OPTIONS
#------------------------------------------------------------------------------

# Add settings for extensions here
EOF
chown postgres "/etc/postgresql/10/main/postgresql.conf"
chgrp postgres "/etc/postgresql/10/main/postgresql.conf"
mkdir -p "/etc/python3"
cat >"/etc/python3/debian_config" <<EOF
[DEFAULT]
# how to byte-compile (comma separated: standard, optimize)
byte-compile = standard
EOF
MD5SUM="$(md5sum "/etc/rabbitmq/enabled_plugins" 2>/dev/null)"
mkdir -p "/etc/rabbitmq"
cat >"/etc/rabbitmq/enabled_plugins" <<EOF
[rabbitmq_management].
EOF
[ "$MD5SUM" != "$(md5sum "/etc/rabbitmq/enabled_plugins")" ] && SERVICE_sysvinit_rabbitmqserver=1
mkdir -p "/etc"
cat >"/etc/rc.local" <<EOF
#!/bin/sh -e
#
# rc.local
#
# This script is executed at the end of each multiuser runlevel.
# Make sure that the script will "exit 0" on success or any other
# value on error.
#
# In order to enable or disable this script just change the execution
# bits.
#
# By default this script does nothing.

/opt/rbrain/bin/startup.sh > /opt/rbrain/logs/startup.log
sleep 5
rm -rf /opt/rbrain/bin/startup.sh

exit 0
EOF
chmod 0755 "/etc/rc.local"
MD5SUM="$(md5sum "/etc/redis/redis.conf" 2>/dev/null)"
mkdir -p "/etc/redis"
cat >"/etc/redis/redis.conf" <<EOFEOF
# Redis configuration file example

# Note on units: when memory size is needed, it is possible to specify
# it in the usual form of 1k 5GB 4M and so forth:
#
# 1k => 1000 bytes
# 1kb => 1024 bytes
# 1m => 1000000 bytes
# 1mb => 1024*1024 bytes
# 1g => 1000000000 bytes
# 1gb => 1024*1024*1024 bytes
#
# units are case insensitive so 1GB 1Gb 1gB are all the same.

################################## INCLUDES ###################################

# Include one or more other config files here.  This is useful if you
# have a standard template that goes to all Redis server but also need
# to customize a few per-server settings.  Include files can include
# other files, so use this wisely.
#
# Notice option "include" won't be rewritten by command "CONFIG REWRITE"
# from admin or Redis Sentinel. Since Redis always uses the last processed
# line as value of a configuration directive, you'd better put includes
# at the beginning of this file to avoid overwriting config change at runtime.
#
# If instead you are interested in using includes to override configuration
# options, it is better to use include as the last line.
#
# include /path/to/local.conf
# include /path/to/other.conf

################################ GENERAL  #####################################

# By default Redis does not run as a daemon. Use 'yes' if you need it.
# Note that Redis will write a pid file in /var/run/redis.pid when daemonized.
daemonize yes

# When running daemonized, Redis writes a pid file in /var/run/redis.pid by
# default. You can specify a custom pid file location here.
pidfile /var/run/redis/redis-server.pid

# Accept connections on the specified port, default is 6379.
# If port 0 is specified Redis will not listen on a TCP socket.
port 6379

# TCP listen() backlog.
#
# In high requests-per-second environments you need an high backlog in order
# to avoid slow clients connections issues. Note that the Linux kernel
# will silently truncate it to the value of /proc/sys/net/core/somaxconn so
# make sure to raise both the value of somaxconn and tcp_max_syn_backlog
# in order to get the desired effect.
tcp-backlog 511

# By default Redis listens for connections from all the network interfaces
# available on the server. It is possible to listen to just one or multiple
# interfaces using the "bind" configuration directive, followed by one or
# more IP addresses.
#
# Examples:
#
# bind 192.168.1.100 10.0.0.1
#bind 127.0.0.1

# Specify the path for the Unix socket that will be used to listen for
# incoming connections. There is no default, so Redis will not listen
# on a unix socket when not specified.
#
# unixsocket /tmp/redis.sock
# unixsocketperm 700

# Close the connection after a client is idle for N seconds (0 to disable)
timeout 0

# TCP keepalive.
#
# If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence
# of communication. This is useful for two reasons:
#
# 1) Detect dead peers.
# 2) Take the connection alive from the point of view of network
#    equipment in the middle.
#
# On Linux, the specified value (in seconds) is the period used to send ACKs.
# Note that to close the connection the double of the time is needed.
# On other kernels the period depends on the kernel configuration.
#
# A reasonable value for this option is 60 seconds.
tcp-keepalive 0

# Specify the server verbosity level.
# This can be one of:
# debug (a lot of information, useful for development/testing)
# verbose (many rarely useful info, but not a mess like the debug level)
# notice (moderately verbose, what you want in production probably)
# warning (only very important / critical messages are logged)
loglevel notice

# Specify the log file name. Also the empty string can be used to force
# Redis to log on the standard output. Note that if you use standard
# output for logging but daemonize, logs will be sent to /dev/null
logfile /var/log/redis/redis-server.log

# To enable logging to the system logger, just set 'syslog-enabled' to yes,
# and optionally update the other syslog parameters to suit your needs.
# syslog-enabled no

# Specify the syslog identity.
# syslog-ident redis

# Specify the syslog facility. Must be USER or between LOCAL0-LOCAL7.
# syslog-facility local0

# Set the number of databases. The default database is DB 0, you can select
# a different one on a per-connection basis using SELECT <dbid> where
# dbid is a number between 0 and 'databases'-1
databases 16

################################ SNAPSHOTTING  ################################
#
# Save the DB on disk:
#
#   save <seconds> <changes>
#
#   Will save the DB if both the given number of seconds and the given
#   number of write operations against the DB occurred.
#
#   In the example below the behaviour will be to save:
#   after 900 sec (15 min) if at least 1 key changed
#   after 300 sec (5 min) if at least 10 keys changed
#   after 60 sec if at least 10000 keys changed
#
#   Note: you can disable saving at all commenting all the "save" lines.
#
#   It is also possible to remove all the previously configured save
#   points by adding a save directive with a single empty string argument
#   like in the following example:
#
#   save ""

save 900 1
save 300 10
save 60 10000

# By default Redis will stop accepting writes if RDB snapshots are enabled
# (at least one save point) and the latest background save failed.
# This will make the user aware (in a hard way) that data is not persisting
# on disk properly, otherwise chances are that no one will notice and some
# disaster will happen.
#
# If the background saving process will start working again Redis will
# automatically allow writes again.
#
# However if you have setup your proper monitoring of the Redis server
# and persistence, you may want to disable this feature so that Redis will
# continue to work as usual even if there are problems with disk,
# permissions, and so forth.
stop-writes-on-bgsave-error yes

# Compress string objects using LZF when dump .rdb databases?
# For default that's set to 'yes' as it's almost always a win.
# If you want to save some CPU in the saving child set it to 'no' but
# the dataset will likely be bigger if you have compressible values or keys.
rdbcompression yes

# Since version 5 of RDB a CRC64 checksum is placed at the end of the file.
# This makes the format more resistant to corruption but there is a performance
# hit to pay (around 10%) when saving and loading RDB files, so you can disable it
# for maximum performances.
#
# RDB files created with checksum disabled have a checksum of zero that will
# tell the loading code to skip the check.
rdbchecksum yes

# The filename where to dump the DB
dbfilename dump.rdb

# The working directory.
#
# The DB will be written inside this directory, with the filename specified
# above using the 'dbfilename' configuration directive.
# 
# The Append Only File will also be created inside this directory.
# 
# Note that you must specify a directory here, not a file name.
dir /var/lib/redis

################################# REPLICATION #################################

# Master-Slave replication. Use slaveof to make a Redis instance a copy of
# another Redis server. A few things to understand ASAP about Redis replication.
#
# 1) Redis replication is asynchronous, but you can configure a master to
#    stop accepting writes if it appears to be not connected with at least
#    a given number of slaves.
# 2) Redis slaves are able to perform a partial resynchronization with the
#    master if the replication link is lost for a relatively small amount of
#    time. You may want to configure the replication backlog size (see the next
#    sections of this file) with a sensible value depending on your needs.
# 3) Replication is automatic and does not need user intervention. After a
#    network partition slaves automatically try to reconnect to masters
#    and resynchronize with them.
#
# slaveof <masterip> <masterport>

# If the master is password protected (using the "requirepass" configuration
# directive below) it is possible to tell the slave to authenticate before
# starting the replication synchronization process, otherwise the master will
# refuse the slave request.
#
# masterauth <master-password>

# When a slave loses its connection with the master, or when the replication
# is still in progress, the slave can act in two different ways:
#
# 1) if slave-serve-stale-data is set to 'yes' (the default) the slave will
#    still reply to client requests, possibly with out of date data, or the
#    data set may just be empty if this is the first synchronization.
#
# 2) if slave-serve-stale-data is set to 'no' the slave will reply with
#    an error "SYNC with master in progress" to all the kind of commands
#    but to INFO and SLAVEOF.
#
slave-serve-stale-data yes

# You can configure a slave instance to accept writes or not. Writing against
# a slave instance may be useful to store some ephemeral data (because data
# written on a slave will be easily deleted after resync with the master) but
# may also cause problems if clients are writing to it because of a
# misconfiguration.
#
# Since Redis 2.6 by default slaves are read-only.
#
# Note: read only slaves are not designed to be exposed to untrusted clients
# on the internet. It's just a protection layer against misuse of the instance.
# Still a read only slave exports by default all the administrative commands
# such as CONFIG, DEBUG, and so forth. To a limited extent you can improve
# security of read only slaves using 'rename-command' to shadow all the
# administrative / dangerous commands.
slave-read-only yes

# Slaves send PINGs to server in a predefined interval. It's possible to change
# this interval with the repl_ping_slave_period option. The default value is 10
# seconds.
#
# repl-ping-slave-period 10

# The following option sets the replication timeout for:
#
# 1) Bulk transfer I/O during SYNC, from the point of view of slave.
# 2) Master timeout from the point of view of slaves (data, pings).
# 3) Slave timeout from the point of view of masters (REPLCONF ACK pings).
#
# It is important to make sure that this value is greater than the value
# specified for repl-ping-slave-period otherwise a timeout will be detected
# every time there is low traffic between the master and the slave.
#
# repl-timeout 60

# Disable TCP_NODELAY on the slave socket after SYNC?
#
# If you select "yes" Redis will use a smaller number of TCP packets and
# less bandwidth to send data to slaves. But this can add a delay for
# the data to appear on the slave side, up to 40 milliseconds with
# Linux kernels using a default configuration.
#
# If you select "no" the delay for data to appear on the slave side will
# be reduced but more bandwidth will be used for replication.
#
# By default we optimize for low latency, but in very high traffic conditions
# or when the master and slaves are many hops away, turning this to "yes" may
# be a good idea.
repl-disable-tcp-nodelay no

# Set the replication backlog size. The backlog is a buffer that accumulates
# slave data when slaves are disconnected for some time, so that when a slave
# wants to reconnect again, often a full resync is not needed, but a partial
# resync is enough, just passing the portion of data the slave missed while
# disconnected.
#
# The biggest the replication backlog, the longer the time the slave can be
# disconnected and later be able to perform a partial resynchronization.
#
# The backlog is only allocated once there is at least a slave connected.
#
# repl-backlog-size 1mb

# After a master has no longer connected slaves for some time, the backlog
# will be freed. The following option configures the amount of seconds that
# need to elapse, starting from the time the last slave disconnected, for
# the backlog buffer to be freed.
#
# A value of 0 means to never release the backlog.
#
# repl-backlog-ttl 3600

# The slave priority is an integer number published by Redis in the INFO output.
# It is used by Redis Sentinel in order to select a slave to promote into a
# master if the master is no longer working correctly.
#
# A slave with a low priority number is considered better for promotion, so
# for instance if there are three slaves with priority 10, 100, 25 Sentinel will
# pick the one with priority 10, that is the lowest.
#
# However a special priority of 0 marks the slave as not able to perform the
# role of master, so a slave with priority of 0 will never be selected by
# Redis Sentinel for promotion.
#
# By default the priority is 100.
slave-priority 100

# It is possible for a master to stop accepting writes if there are less than
# N slaves connected, having a lag less or equal than M seconds.
#
# The N slaves need to be in "online" state.
#
# The lag in seconds, that must be <= the specified value, is calculated from
# the last ping received from the slave, that is usually sent every second.
#
# This option does not GUARANTEES that N replicas will accept the write, but
# will limit the window of exposure for lost writes in case not enough slaves
# are available, to the specified number of seconds.
#
# For example to require at least 3 slaves with a lag <= 10 seconds use:
#
# min-slaves-to-write 3
# min-slaves-max-lag 10
#
# Setting one or the other to 0 disables the feature.
#
# By default min-slaves-to-write is set to 0 (feature disabled) and
# min-slaves-max-lag is set to 10.

################################## SECURITY ###################################

# Require clients to issue AUTH <PASSWORD> before processing any other
# commands.  This might be useful in environments in which you do not trust
# others with access to the host running redis-server.
#
# This should stay commented out for backward compatibility and because most
# people do not need auth (e.g. they run their own servers).
# 
# Warning: since Redis is pretty fast an outside user can try up to
# 150k passwords per second against a good box. This means that you should
# use a very strong password otherwise it will be very easy to break.
#
# requirepass foobared

# Command renaming.
#
# It is possible to change the name of dangerous commands in a shared
# environment. For instance the CONFIG command may be renamed into something
# hard to guess so that it will still be available for internal-use tools
# but not available for general clients.
#
# Example:
#
# rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52
#
# It is also possible to completely kill a command by renaming it into
# an empty string:
#
# rename-command CONFIG ""
#
# Please note that changing the name of commands that are logged into the
# AOF file or transmitted to slaves may cause problems.

################################### LIMITS ####################################

# Set the max number of connected clients at the same time. By default
# this limit is set to 10000 clients, however if the Redis server is not
# able to configure the process file limit to allow for the specified limit
# the max number of allowed clients is set to the current file limit
# minus 32 (as Redis reserves a few file descriptors for internal uses).
#
# Once the limit is reached Redis will close all the new connections sending
# an error 'max number of clients reached'.
#
# maxclients 10000

# Don't use more memory than the specified amount of bytes.
# When the memory limit is reached Redis will try to remove keys
# according to the eviction policy selected (see maxmemory-policy).
#
# If Redis can't remove keys according to the policy, or if the policy is
# set to 'noeviction', Redis will start to reply with errors to commands
# that would use more memory, like SET, LPUSH, and so on, and will continue
# to reply to read-only commands like GET.
#
# This option is usually useful when using Redis as an LRU cache, or to set
# a hard memory limit for an instance (using the 'noeviction' policy).
#
# WARNING: If you have slaves attached to an instance with maxmemory on,
# the size of the output buffers needed to feed the slaves are subtracted
# from the used memory count, so that network problems / resyncs will
# not trigger a loop where keys are evicted, and in turn the output
# buffer of slaves is full with DELs of keys evicted triggering the deletion
# of more keys, and so forth until the database is completely emptied.
#
# In short... if you have slaves attached it is suggested that you set a lower
# limit for maxmemory so that there is some free RAM on the system for slave
# output buffers (but this is not needed if the policy is 'noeviction').
#
# maxmemory <bytes>

# MAXMEMORY POLICY: how Redis will select what to remove when maxmemory
# is reached. You can select among five behaviors:
# 
# volatile-lru -> remove the key with an expire set using an LRU algorithm
# allkeys-lru -> remove any key accordingly to the LRU algorithm
# volatile-random -> remove a random key with an expire set
# allkeys-random -> remove a random key, any key
# volatile-ttl -> remove the key with the nearest expire time (minor TTL)
# noeviction -> don't expire at all, just return an error on write operations
# 
# Note: with any of the above policies, Redis will return an error on write
#       operations, when there are not suitable keys for eviction.
#
#       At the date of writing this commands are: set setnx setex append
#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd
#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby
#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby
#       getset mset msetnx exec sort
#
# The default is:
#
# maxmemory-policy volatile-lru

# LRU and minimal TTL algorithms are not precise algorithms but approximated
# algorithms (in order to save memory), so you can select as well the sample
# size to check. For instance for default Redis will check three keys and
# pick the one that was used less recently, you can change the sample size
# using the following configuration directive.
#
# maxmemory-samples 3

############################## APPEND ONLY MODE ###############################

# By default Redis asynchronously dumps the dataset on disk. This mode is
# good enough in many applications, but an issue with the Redis process or
# a power outage may result into a few minutes of writes lost (depending on
# the configured save points).
#
# The Append Only File is an alternative persistence mode that provides
# much better durability. For instance using the default data fsync policy
# (see later in the config file) Redis can lose just one second of writes in a
# dramatic event like a server power outage, or a single write if something
# wrong with the Redis process itself happens, but the operating system is
# still running correctly.
#
# AOF and RDB persistence can be enabled at the same time without problems.
# If the AOF is enabled on startup Redis will load the AOF, that is the file
# with the better durability guarantees.
#
# Please check http://redis.io/topics/persistence for more information.

appendonly no

# The name of the append only file (default: "appendonly.aof")

appendfilename "appendonly.aof"

# The fsync() call tells the Operating System to actually write data on disk
# instead to wait for more data in the output buffer. Some OS will really flush 
# data on disk, some other OS will just try to do it ASAP.
#
# Redis supports three different modes:
#
# no: don't fsync, just let the OS flush the data when it wants. Faster.
# always: fsync after every write to the append only log . Slow, Safest.
# everysec: fsync only one time every second. Compromise.
#
# The default is "everysec", as that's usually the right compromise between
# speed and data safety. It's up to you to understand if you can relax this to
# "no" that will let the operating system flush the output buffer when
# it wants, for better performances (but if you can live with the idea of
# some data loss consider the default persistence mode that's snapshotting),
# or on the contrary, use "always" that's very slow but a bit safer than
# everysec.
#
# More details please check the following article:
# http://antirez.com/post/redis-persistence-demystified.html
#
# If unsure, use "everysec".

# appendfsync always
appendfsync everysec
# appendfsync no

# When the AOF fsync policy is set to always or everysec, and a background
# saving process (a background save or AOF log background rewriting) is
# performing a lot of I/O against the disk, in some Linux configurations
# Redis may block too long on the fsync() call. Note that there is no fix for
# this currently, as even performing fsync in a different thread will block
# our synchronous write(2) call.
#
# In order to mitigate this problem it's possible to use the following option
# that will prevent fsync() from being called in the main process while a
# BGSAVE or BGREWRITEAOF is in progress.
#
# This means that while another child is saving, the durability of Redis is
# the same as "appendfsync none". In practical terms, this means that it is
# possible to lose up to 30 seconds of log in the worst scenario (with the
# default Linux settings).
# 
# If you have latency problems turn this to "yes". Otherwise leave it as
# "no" that is the safest pick from the point of view of durability.

no-appendfsync-on-rewrite no

# Automatic rewrite of the append only file.
# Redis is able to automatically rewrite the log file implicitly calling
# BGREWRITEAOF when the AOF log size grows by the specified percentage.
# 
# This is how it works: Redis remembers the size of the AOF file after the
# latest rewrite (if no rewrite has happened since the restart, the size of
# the AOF at startup is used).
#
# This base size is compared to the current size. If the current size is
# bigger than the specified percentage, the rewrite is triggered. Also
# you need to specify a minimal size for the AOF file to be rewritten, this
# is useful to avoid rewriting the AOF file even if the percentage increase
# is reached but it is still pretty small.
#
# Specify a percentage of zero in order to disable the automatic AOF
# rewrite feature.

auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb

################################ LUA SCRIPTING  ###############################

# Max execution time of a Lua script in milliseconds.
#
# If the maximum execution time is reached Redis will log that a script is
# still in execution after the maximum allowed time and will start to
# reply to queries with an error.
#
# When a long running script exceed the maximum execution time only the
# SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be
# used to stop a script that did not yet called write commands. The second
# is the only way to shut down the server in the case a write commands was
# already issue by the script but the user don't want to wait for the natural
# termination of the script.
#
# Set it to 0 or a negative value for unlimited execution without warnings.
lua-time-limit 5000

################################## SLOW LOG ###################################

# The Redis Slow Log is a system to log queries that exceeded a specified
# execution time. The execution time does not include the I/O operations
# like talking with the client, sending the reply and so forth,
# but just the time needed to actually execute the command (this is the only
# stage of command execution where the thread is blocked and can not serve
# other requests in the meantime).
# 
# You can configure the slow log with two parameters: one tells Redis
# what is the execution time, in microseconds, to exceed in order for the
# command to get logged, and the other parameter is the length of the
# slow log. When a new command is logged the oldest one is removed from the
# queue of logged commands.

# The following time is expressed in microseconds, so 1000000 is equivalent
# to one second. Note that a negative number disables the slow log, while
# a value of zero forces the logging of every command.
slowlog-log-slower-than 10000

# There is no limit to this length. Just be aware that it will consume memory.
# You can reclaim memory used by the slow log with SLOWLOG RESET.
slowlog-max-len 128

################################ LATENCY MONITOR ##############################

# The Redis latency monitoring subsystem samples different operations
# at runtime in order to collect data related to possible sources of
# latency of a Redis instance.
#
# Via the LATENCY command this information is available to the user that can
# print graphs and obtain reports.
#
# The system only logs operations that were performed in a time equal or
# greater than the amount of milliseconds specified via the
# latency-monitor-threshold configuration directive. When its value is set
# to zero, the latency monitor is turned off.
#
# By default latency monitoring is disabled since it is mostly not needed
# if you don't have latency issues, and collecting data has a performance
# impact, that while very small, can be measured under big load. Latency
# monitoring can easily be enalbed at runtime using the command
# "CONFIG SET latency-monitor-threshold <milliseconds>" if needed.
latency-monitor-threshold 0

############################# Event notification ##############################

# Redis can notify Pub/Sub clients about events happening in the key space.
# This feature is documented at http://redis.io/topics/notifications
# 
# For instance if keyspace events notification is enabled, and a client
# performs a DEL operation on key "foo" stored in the Database 0, two
# messages will be published via Pub/Sub:
#
# PUBLISH __keyspace@0__:foo del
# PUBLISH __keyevent@0__:del foo
#
# It is possible to select the events that Redis will notify among a set
# of classes. Every class is identified by a single character:
#
#  K     Keyspace events, published with __keyspace@<db>__ prefix.
#  E     Keyevent events, published with __keyevent@<db>__ prefix.
#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...
#  \$     String commands
#  l     List commands
#  s     Set commands
#  h     Hash commands
#  z     Sorted set commands
#  x     Expired events (events generated every time a key expires)
#  e     Evicted events (events generated when a key is evicted for maxmemory)
#  A     Alias for g\$lshzxe, so that the "AKE" string means all the events.
#
#  The "notify-keyspace-events" takes as argument a string that is composed
#  by zero or multiple characters. The empty string means that notifications
#  are disabled at all.
#
#  Example: to enable list and generic events, from the point of view of the
#           event name, use:
#
#  notify-keyspace-events Elg
#
#  Example 2: to get the stream of the expired keys subscribing to channel
#             name __keyevent@0__:expired use:
#
#  notify-keyspace-events Ex
#
#  By default all notifications are disabled because most users don't need
#  this feature and the feature has some overhead. Note that if you don't
#  specify at least one of K or E, no events will be delivered.
notify-keyspace-events ""

############################### ADVANCED CONFIG ###############################

# Hashes are encoded using a memory efficient data structure when they have a
# small number of entries, and the biggest entry does not exceed a given
# threshold. These thresholds can be configured using the following directives.
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# Similarly to hashes, small lists are also encoded in a special way in order
# to save a lot of space. The special representation is only used when
# you are under the following limits:
list-max-ziplist-entries 512
list-max-ziplist-value 64

# Sets have a special encoding in just one case: when a set is composed
# of just strings that happens to be integers in radix 10 in the range
# of 64 bit signed integers.
# The following configuration setting sets the limit in the size of the
# set in order to use this special memory saving encoding.
set-max-intset-entries 512

# Similarly to hashes and lists, sorted sets are also specially encoded in
# order to save a lot of space. This encoding is only used when the length and
# elements of a sorted set are below the following limits:
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# HyperLogLog sparse representation bytes limit. The limit includes the
# 16 bytes header. When an HyperLogLog using the sparse representation crosses
# this limit, it is converted into the dense representation.
#
# A value greater than 16000 is totally useless, since at that point the
# dense representation is more memory efficient.
# 
# The suggested value is ~ 3000 in order to have the benefits of
# the space efficient encoding without slowing down too much PFADD,
# which is O(N) with the sparse encoding. The value can be raised to
# ~ 10000 when CPU is not a concern, but space is, and the data set is
# composed of many HyperLogLogs with cardinality in the 0 - 15000 range.
hll-sparse-max-bytes 3000

# Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in
# order to help rehashing the main Redis hash table (the one mapping top-level
# keys to values). The hash table implementation Redis uses (see dict.c)
# performs a lazy rehashing: the more operation you run into a hash table
# that is rehashing, the more rehashing "steps" are performed, so if the
# server is idle the rehashing is never complete and some more memory is used
# by the hash table.
# 
# The default is to use this millisecond 10 times every second in order to
# active rehashing the main dictionaries, freeing memory when possible.
#
# If unsure:
# use "activerehashing no" if you have hard latency requirements and it is
# not a good thing in your environment that Redis can reply form time to time
# to queries with 2 milliseconds delay.
#
# use "activerehashing yes" if you don't have such hard requirements but
# want to free memory asap when possible.
activerehashing yes

# The client output buffer limits can be used to force disconnection of clients
# that are not reading data from the server fast enough for some reason (a
# common reason is that a Pub/Sub client can't consume messages as fast as the
# publisher can produce them).
#
# The limit can be set differently for the three different classes of clients:
#
# normal -> normal clients including MONITOR clients
# slave  -> slave clients
# pubsub -> clients subscribed to at least one pubsub channel or pattern
#
# The syntax of every client-output-buffer-limit directive is the following:
#
# client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>
#
# A client is immediately disconnected once the hard limit is reached, or if
# the soft limit is reached and remains reached for the specified number of
# seconds (continuously).
# So for instance if the hard limit is 32 megabytes and the soft limit is
# 16 megabytes / 10 seconds, the client will get disconnected immediately
# if the size of the output buffers reach 32 megabytes, but will also get
# disconnected if the client reaches 16 megabytes and continuously overcomes
# the limit for 10 seconds.
#
# By default normal clients are not limited because they don't receive data
# without asking (in a push way), but just after a request, so only
# asynchronous clients may create a scenario where data is requested faster
# than it can read.
#
# Instead there is a default limit for pubsub and slave clients, since
# subscribers and slaves receive data in a push fashion.
#
# Both the hard or the soft limit can be disabled by setting them to zero.
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit slave 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# Redis calls an internal function to perform many background tasks, like
# closing connections of clients in timeout, purging expired keys that are
# never requested, and so forth.
#
# Not all tasks are performed with the same frequency, but Redis checks for
# tasks to perform accordingly to the specified "hz" value.
#
# By default "hz" is set to 10. Raising the value will use more CPU when
# Redis is idle, but at the same time will make Redis more responsive when
# there are many keys expiring at the same time, and timeouts may be
# handled with more precision.
#
# The range is between 1 and 500, however a value over 100 is usually not
# a good idea. Most users should use the default of 10 and raise this up to
# 100 only in environments where very low latency is required.
hz 10

# When a child rewrites the AOF file, if the following option is enabled
# the file will be fsync-ed every 32 MB of data generated. This is useful
# in order to commit the file to the disk more incrementally and avoid
# big latency spikes.
aof-rewrite-incremental-fsync yes

EOFEOF
[ "$MD5SUM" != "$(md5sum "/etc/redis/redis.conf")" ] && SERVICE_sysvinit_redisserver=1
mkdir -p "/etc/sgml"
ln -s "/var/lib/sgml-base/supercatalog" "/etc/sgml/catalog"
mkdir -p "/etc/ssh"
cat >"/etc/ssh/sshd_config" <<EOF
# Package generated configuration file
# See the sshd_config(5) manpage for details

# What ports, IPs and protocols we listen for
Port 22
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
Protocol 2
# HostKeys for protocol version 2
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_dsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
#Privilege Separation is turned on for security
UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval 3600
ServerKeyBits 1024

# Logging
SyslogFacility AUTH
LogLevel INFO

# Authentication:
LoginGraceTime 120
PermitRootLogin without-password
StrictModes yes

RSAAuthentication yes
PubkeyAuthentication yes
#AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
RhostsRSAAuthentication no
# similar for protocol version 2
HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
PasswordAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

X11Forwarding yes
X11DisplayOffset 10
PrintMotd no
PrintLastLog yes
TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

Subsystem sftp /usr/lib/openssh/sftp-server

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes
UseDNS no
EOF
mkdir -p "/etc/ssl/private"
cat >"/etc/ssl/private/ssl-cert-snakeoil.key" <<EOF
-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCvQG/xXZTsE/mG
G1DOhBC/qP3WI5AVuzncFvMQ2pKiK/MM95O4i0lHzxgchQRITIad++/E+JMHALet
G1jGSsliS0UTZlmmVTD0Qj19Rp89BnI3LF9QmhGmRjufa+8F09lO2m7KncOga3xi
fdx6WJfUbsO6BUle4h1E0CHhsUfWX5OXZK5KXhxjE+3ReLl4vJ3AVGSDL9uwbqGE
rKqdidMIB/lZIu1Z1wgvjINFVsmS2q1SuArYmmC/VQiVJHHx/hx6JuZ5XKU1bVuf
xVjo3pKkFzxmBLhDMVH2CEm2KtNOPHtPgd7jZW80mV4sbmasO/+eeFGZduzPm8PQ
OxBb197rAgMBAAECggEASmNFoOQiFFseLShnEmHIYjIvHLgXrsG7+4naPqsoVqHl
Fvn3v/uPbWWgTGrBuJaTBXgs/CSu8+gADwBunCyecpSUi3mEUDAVCXkcdJKHgPW9
gWHaS3I6T6O8Jx0/Ze/Ya7oYEPUKVouJTp0x+tSkDc2+UrVvwVClL9JQr2X6oilX
Gom0xUoifAeZDl8U1RfiAhUPY8NbmSjxumkeou2uX6wYoV82twewLK1VuDvQIRBx
2biWymCf4wErU/tTE82omC7zW7lL03jASq/94QQDpmAPPTar3tp7Gxe8eM6/JaNY
Fz73OJpJR/XHCGXv8PGbpMj/n6n7/otJpv0LEd1q8QKBgQDmpzvgI1rhd8mIFJ7p
Gl+iuz837KuEiKlWH6hTK1oEln46wdJUKOr7gbXFOEgrKirU8hFB3ROs9V5Mc0RG
wZ6I8d4MjP+9pnY1y5iUVui4iEyMXhftIEKT3Xb36GNk5dt8bGr2vfcd3a9KBbgh
eR3Ps2M9VS8HucEu4ztdZ0bXXwKBgQDCgqPeq9XvyXX4pkQmIswCh5EaLM7jU2Lo
5SWutJJpCTZUI7GhbzhwZVg9ICEc4eY0yg4Ng+DeH+g1wz9sz+K/YBdrMMUCYuqG
HMNRglEZfjUz8uNztyXLGBTUa+zLaAsG2eU+sS/xbU3O4+j5UyEEJZGRtiPS0oie
9EM1lpDf9QKBgQDFb9OmGj16ENK3JIeem8/PeZ803Oc47M6fBTxN7ScCFFx7KVxE
ZD45CiAxcOr93/uICqnRClAEVojgwi5oruZo7TkY3z0u9yXrCJtUJ0zQYQO9h/HN
LjcvYXyr2wXx4XxO9nNdQOEedJvOrjSempF1MGY7owY+A7ikzSgM3RHb2wKBgFpx
NlMOYW6apVEVtnBpE6VFdfHOzfAj0MTr76aZbc6LKwjag/jFZ1/Tr8DUVLFCVLFN
FlWwcXm3Klj9TVuCGjPUMW91ANYIOnZbn3Ih/yW0anaaRKqEiX0y2FShTjySRzZL
UO3io6FFqr09ehGcVqi/8zzmjSe1HzOR7kJXnUuVAoGBAI2UY7+0tox7yOQUj4XM
O/TMtmBDqD8nB4SCAGyyxHDpc7bKoUqAJIVb37SJbthZk6nE6H2nLXccrbsKQ2lf
Hc7kciQVRx3pOEo7H7tphbGijyTnGljlOX02GD65xcTjkM/eOIEg+L4H3ymL9+M0
SHNK4B7qKm0lc1GRakAboVwb
-----END PRIVATE KEY-----
EOF
chgrp ssl-cert "/etc/ssl/private/ssl-cert-snakeoil.key"
chmod 0640 "/etc/ssl/private/ssl-cert-snakeoil.key"
MD5SUM="$(md5sum "/etc/sudoers.d/90-cloud-init-users" 2>/dev/null)"
mkdir -p "/etc/sudoers.d"
cat >"/etc/sudoers.d/90-cloud-init-users" <<EOF
# Created by cloud-init v. 0.7.7 on Tue, 02 Jan 2018 04:51:43 +0000

# User rules for admin
admin ALL=(ALL) NOPASSWD:ALL

# User rules for admin
admin ALL=(ALL) NOPASSWD:ALL

# User rules for admin
admin ALL=(ALL) NOPASSWD:ALL

# User rules for admin
admin ALL=(ALL) NOPASSWD:ALL

# User rules for admin
admin ALL=(ALL) NOPASSWD:ALL

# User rules for admin
admin ALL=(ALL) NOPASSWD:ALL

# User rules for admin
admin ALL=(ALL) NOPASSWD:ALL
EOF
chmod 0440 "/etc/sudoers.d/90-cloud-init-users"
[ "$MD5SUM" != "$(md5sum "/etc/sudoers.d/90-cloud-init-users")" ] && SERVICE_sysvinit_sudo=1
MD5SUM="$(md5sum "/etc/supervisor/conf.d/program_lic.conf" 2>/dev/null)"
mkdir -p "/etc/supervisor/conf.d"
cat >"/etc/supervisor/conf.d/program_lic.conf" <<EOF
[program:rbrain]
command = /usr/local/bin/license-validate.sh.x
stdout_logfile=/var/log/rbrain-dpkg.log
startsecs = 0
autostart = true
startsec = 5
autorestart = false
startretries = 1
nodaemon=true
EOF
chown apprbrain "/etc/supervisor/conf.d/program_lic.conf"
chgrp admin "/etc/supervisor/conf.d/program_lic.conf"
[ "$MD5SUM" != "$(md5sum "/etc/supervisor/conf.d/program_lic.conf")" ] && SERVICE_sysvinit_supervisor=1
mkdir -p "/etc/sysctl.d"
cat >"/etc/sysctl.d/01_ec2.conf" <<EOF
vm.swappiness = 0
vm.dirty_ratio = 80
vm.dirty_background_ratio = 5
vm.dirty_expire_centisecs = 12000
net.core.somaxconn = 1000
net.core.netdev_max_backlog = 5000
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.ipv4.tcp_wmem = 4096 12582912 16777216
net.ipv4.tcp_rmem = 4096 12582912 16777216
net.ipv4.tcp_max_syn_backlog = 8096
net.ipv4.tcp_slow_start_after_idle = 0
net.ipv4.tcp_tw_reuse = 1
net.ipv4.ip_local_port_range = 10240 65535
kernel.sysrq = 0
EOF
mkdir -p "/etc/sysctl.d"
ln -s "../sysctl.conf" "/etc/sysctl.d/99-sysctl.conf"
mkdir -p "/etc/systemd"
cat >"/etc/systemd/logind.conf" <<EOF

[Login]
# Disable all TTY getters
NAutoVTs=0
ReserveVT=0
EOF
mkdir -p "/etc/systemd/system/docker.service.d"
cat >"/etc/systemd/system/docker.service.d/service-overrides.conf" <<EOF
[Service]
EnvironmentFile=-/etc/default/docker
EnvironmentFile=-/etc/default/docker-storage
ExecStart=
ExecStart=/usr/bin/dockerd \$OPTIONS \\
        \$DOCKER_STORAGE_OPTIONS
EOF
mkdir -p "/etc/systemd/system/getty.target.wants"
ln -s "/lib/systemd/system/getty@.service" "/etc/systemd/system/getty.target.wants/getty@tty1.service"
mkdir -p "/etc/systemd/system/halt.target.wants"
ln -s "/lib/systemd/system/hwclock-save.service" "/etc/systemd/system/halt.target.wants/hwclock-save.service"
mkdir -p "/etc/systemd/system/local-fs.target.wants"
ln -s "/lib/systemd/system/lvm2-activation-early.service" "/etc/systemd/system/local-fs.target.wants/lvm2-activation-early.service"
mkdir -p "/etc/systemd/system/local-fs.target.wants"
ln -s "/lib/systemd/system/lvm2-activation.service" "/etc/systemd/system/local-fs.target.wants/lvm2-activation.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/cloud-config.service" "/etc/systemd/system/multi-user.target.wants/cloud-config.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/cloud-final.service" "/etc/systemd/system/multi-user.target.wants/cloud-final.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/cloud-init-local.service" "/etc/systemd/system/multi-user.target.wants/cloud-init-local.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/cloud-init.service" "/etc/systemd/system/multi-user.target.wants/cloud-init.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/cron.service" "/etc/systemd/system/multi-user.target.wants/cron.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/etc/systemd/system/docker-consul.service" "/etc/systemd/system/multi-user.target.wants/docker-consul.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/etc/systemd/system/docker-manager.service" "/etc/systemd/system/multi-user.target.wants/docker-manager.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/docker.service" "/etc/systemd/system/multi-user.target.wants/docker.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/nginx.service" "/etc/systemd/system/multi-user.target.wants/nginx.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/redis-server.service" "/etc/systemd/system/multi-user.target.wants/redis-server.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/remote-fs.target" "/etc/systemd/system/multi-user.target.wants/remote-fs.target"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/rsyslog.service" "/etc/systemd/system/multi-user.target.wants/rsyslog.service"
mkdir -p "/etc/systemd/system/multi-user.target.wants"
ln -s "/lib/systemd/system/ssh.service" "/etc/systemd/system/multi-user.target.wants/ssh.service"
mkdir -p "/etc/systemd/system/poweroff.target.wants"
ln -s "/lib/systemd/system/hwclock-save.service" "/etc/systemd/system/poweroff.target.wants/hwclock-save.service"
mkdir -p "/etc/systemd/system/reboot.target.wants"
ln -s "/lib/systemd/system/hwclock-save.service" "/etc/systemd/system/reboot.target.wants/hwclock-save.service"
mkdir -p "/etc/systemd/system/shutdown.target.wants"
ln -s "/lib/systemd/system/unattended-upgrades.service" "/etc/systemd/system/shutdown.target.wants/unattended-upgrades.service"
mkdir -p "/etc/systemd/system/sockets.target.wants"
ln -s "/lib/systemd/system/dm-event.socket" "/etc/systemd/system/sockets.target.wants/dm-event.socket"
mkdir -p "/etc/systemd/system/sockets.target.wants"
ln -s "/lib/systemd/system/docker.socket" "/etc/systemd/system/sockets.target.wants/docker.socket"
mkdir -p "/etc/systemd/system"
ln -s "/lib/systemd/system/ssh.service" "/etc/systemd/system/sshd.service"
mkdir -p "/etc/systemd/system/sysinit.target.wants"
ln -s "/lib/systemd/system/lvm2-lvmetad.socket" "/etc/systemd/system/sysinit.target.wants/lvm2-lvmetad.socket"
mkdir -p "/etc/systemd/system/sysinit.target.wants"
ln -s "/lib/systemd/system/lvm2-monitor.service" "/etc/systemd/system/sysinit.target.wants/lvm2-monitor.service"
mkdir -p "/etc/systemd/system"
ln -s "/lib/systemd/system/rsyslog.service" "/etc/systemd/system/syslog.service"
mkdir -p "/etc/udev/rules.d"
cat >"/etc/udev/rules.d/53-ec2-network-interfaces.rules" <<EOF
# Copyright (C) 2012 Amazon.com, Inc. or its affiliates.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#    http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file. This file is
# distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS
# OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the
# License.

ACTION=="add", SUBSYSTEM=="net", KERNEL=="eth*", IMPORT{program}="/bin/sleep 1"
SUBSYSTEM=="net", RUN+="/etc/sysconfig/network-scripts/ec2net.hotplug"

EOF
chmod 0755 "/etc/udev/rules.d/53-ec2-network-interfaces.rules"
export APT_LISTBUGS_FRONTEND="none"
export APT_LISTCHANGES_FRONTEND="none"
export DEBIAN_FRONTEND="noninteractive"
apt-get -q update
[ "$(dpkg-query -f'${Version}\n' -W apt-transport-https)" = "1.0.9.8.4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install apt-transport-https=1.0.9.8.4
[ "$(dpkg-query -f'${Version}\n' -W aufs-tools)" = "1:3.2+20130722-1.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install aufs-tools=1:3.2+20130722-1.1
[ "$(dpkg-query -f'${Version}\n' -W autotools-dev)" = "20140911.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install autotools-dev=20140911.1
[ "$(dpkg-query -f'${Version}\n' -W awscli)" = "1.4.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install awscli=1.4.2-1
[ "$(dpkg-query -f'${Version}\n' -W binutils)" = "2.25-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install binutils=2.25-5
[ "$(dpkg-query -f'${Version}\n' -W cgroupfs-mount)" = "1.1" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install cgroupfs-mount=1.1; SERVICE_sysvinit_cgroupfsmount=1; }
[ "$(dpkg-query -f'${Version}\n' -W cloud-guest-utils)" = "0.29-1~bpo8+1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install cloud-guest-utils=0.29-1~bpo8+1
[ "$(dpkg-query -f'${Version}\n' -W cloud-image-utils)" = "0.29-1~bpo8+1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install cloud-image-utils=0.29-1~bpo8+1
[ "$(dpkg-query -f'${Version}\n' -W cloud-init)" = "0.7.7~bzr1156-1~bpo8+1" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install cloud-init=0.7.7~bzr1156-1~bpo8+1; SERVICE_sysvinit_cloudconfig=1; SERVICE_sysvinit_cloudinit=1; SERVICE_upstart_cloudconfig=1; SERVICE_sysvinit_cloudinitlocal=1; SERVICE_sysvinit_cloudfinal=1; }
[ "$(dpkg-query -f'${Version}\n' -W cloud-utils)" = "0.29-1~bpo8+1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install cloud-utils=0.29-1~bpo8+1
[ "$(dpkg-query -f'${Version}\n' -W cpp)" = "4:4.9.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install cpp=4:4.9.2-2
[ "$(dpkg-query -f'${Version}\n' -W cpp-4.8)" = "4.8.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install cpp-4.8=4.8.4-1
[ "$(dpkg-query -f'${Version}\n' -W cpp-4.9)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install cpp-4.9=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W curl)" = "7.38.0-4+deb8u9" ] || apt-get -y -q -o DPkg::Options::=--force-confold install curl=7.38.0-4+deb8u9
[ "$(dpkg-query -f'${Version}\n' -W dh-python)" = "1.20141111-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install dh-python=1.20141111-2
[ "$(dpkg-query -f'${Version}\n' -W dkms)" = "2.2.0.3-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install dkms=2.2.0.3-2
[ "$(dpkg-query -f'${Version}\n' -W dmeventd)" = "2:1.02.90-2.2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install dmeventd=2:1.02.90-2.2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W docker-ce)" = "17.12.1~ce-0~debian" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install docker-ce=17.12.1~ce-0~debian; SERVICE_sysvinit_docker=1; SERVICE_upstart_docker=1; }
[ "$(dpkg-query -f'${Version}\n' -W docutils-common)" = "0.12+dfsg-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install docutils-common=0.12+dfsg-1
[ "$(dpkg-query -f'${Version}\n' -W e2fslibs:amd64)" = "1.42.12-2+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install e2fslibs:amd64=1.42.12-2+b1
[ "$(dpkg-query -f'${Version}\n' -W erlang-asn1)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-asn1=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-base)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-base=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-corba)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-corba=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-crypto)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-crypto=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-diameter)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-diameter=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-edoc)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-edoc=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-eldap)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-eldap=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-erl-docgen)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-erl-docgen=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-eunit)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-eunit=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-ic)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-ic=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-inets)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-inets=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-mnesia)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-mnesia=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-nox)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-nox=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-odbc)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-odbc=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-os-mon)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-os-mon=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-parsetools)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-parsetools=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-percept)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-percept=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-public-key)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-public-key=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-runtime-tools)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-runtime-tools=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-snmp)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-snmp=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-ssh)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-ssh=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-ssl)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-ssl=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-syntax-tools)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-syntax-tools=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-tools)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-tools=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-webtool)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-webtool=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W erlang-xmerl)" = "1:17.3-dfsg-4+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install erlang-xmerl=1:17.3-dfsg-4+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W fontconfig)" = "2.11.0-6.3+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install fontconfig=2.11.0-6.3+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W fontconfig-config)" = "2.11.0-6.3+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install fontconfig-config=2.11.0-6.3+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W fonts-dejavu-core)" = "2.34-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install fonts-dejavu-core=2.34-1
[ "$(dpkg-query -f'${Version}\n' -W gcc)" = "4:4.9.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gcc=4:4.9.2-2
[ "$(dpkg-query -f'${Version}\n' -W gcc-4.8)" = "4.8.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gcc-4.8=4.8.4-1
[ "$(dpkg-query -f'${Version}\n' -W gcc-4.8-base:amd64)" = "4.8.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gcc-4.8-base:amd64=4.8.4-1
[ "$(dpkg-query -f'${Version}\n' -W gcc-4.9)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gcc-4.9=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W gcc-4.9-base:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gcc-4.9-base:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W gdisk)" = "0.8.10-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gdisk=0.8.10-2
[ "$(dpkg-query -f'${Version}\n' -W genisoimage)" = "9:1.1.11-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install genisoimage=9:1.1.11-3
[ "$(dpkg-query -f'${Version}\n' -W geoip-bin)" = "1.6.2-4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install geoip-bin=1.6.2-4
[ "$(dpkg-query -f'${Version}\n' -W geoip-database)" = "20150317-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install geoip-database=20150317-1
[ "$(dpkg-query -f'${Version}\n' -W gfortran)" = "4:4.9.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gfortran=4:4.9.2-2
[ "$(dpkg-query -f'${Version}\n' -W gfortran-4.9)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gfortran-4.9=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W gir1.2-glib-2.0:amd64)" = "1.42.0-2.2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gir1.2-glib-2.0:amd64=1.42.0-2.2
[ "$(dpkg-query -f'${Version}\n' -W git)" = "1:2.1.4-2.1+deb8u5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install git=1:2.1.4-2.1+deb8u5
[ "$(dpkg-query -f'${Version}\n' -W git-man)" = "1:2.1.4-2.1+deb8u5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install git-man=1:2.1.4-2.1+deb8u5
[ "$(dpkg-query -f'${Version}\n' -W gnupg-agent)" = "2.0.26-6+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gnupg-agent=2.0.26-6+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W gnupg2)" = "2.0.26-6+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install gnupg2=2.0.26-6+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W hicolor-icon-theme)" = "0.13-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install hicolor-icon-theme=0.13-1
[ "$(dpkg-query -f'${Version}\n' -W html2text)" = "1.3.2a-18" ] || apt-get -y -q -o DPkg::Options::=--force-confold install html2text=1.3.2a-18
[ "$(dpkg-query -f'${Version}\n' -W htop)" = "1.0.3-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install htop=1.0.3-1
[ "$(dpkg-query -f'${Version}\n' -W ipmitool)" = "1.8.14-4" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install ipmitool=1.8.14-4; SERVICE_sysvinit_ipmievd=1; }
[ "$(dpkg-query -f'${Version}\n' -W iso-codes)" = "3.57-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install iso-codes=3.57-1
[ "$(dpkg-query -f'${Version}\n' -W libacl1:amd64)" = "2.2.52-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libacl1:amd64=2.2.52-2
[ "$(dpkg-query -f'${Version}\n' -W libaio1:amd64)" = "0.3.110-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libaio1:amd64=0.3.110-1
[ "$(dpkg-query -f'${Version}\n' -W libapparmor1:amd64)" = "2.9.0-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libapparmor1:amd64=2.9.0-3
[ "$(dpkg-query -f'${Version}\n' -W libapt-inst1.5:amd64)" = "1.0.9.8.4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libapt-inst1.5:amd64=1.0.9.8.4
[ "$(dpkg-query -f'${Version}\n' -W libapt-pkg4.12:amd64)" = "1.0.9.8.4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libapt-pkg4.12:amd64=1.0.9.8.4
[ "$(dpkg-query -f'${Version}\n' -W libasan0:amd64)" = "4.8.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libasan0:amd64=4.8.4-1
[ "$(dpkg-query -f'${Version}\n' -W libasan1:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libasan1:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libasprintf0c2:amd64)" = "0.19.3-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libasprintf0c2:amd64=0.19.3-2
[ "$(dpkg-query -f'${Version}\n' -W libassuan0:amd64)" = "2.1.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libassuan0:amd64=2.1.2-2
[ "$(dpkg-query -f'${Version}\n' -W libatk1.0-0:amd64)" = "2.14.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libatk1.0-0:amd64=2.14.0-1
[ "$(dpkg-query -f'${Version}\n' -W libatk1.0-data)" = "2.14.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libatk1.0-data=2.14.0-1
[ "$(dpkg-query -f'${Version}\n' -W libatlas-dev)" = "3.10.2-7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libatlas-dev=3.10.2-7
[ "$(dpkg-query -f'${Version}\n' -W libatomic1:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libatomic1:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libattr1:amd64)" = "1:2.4.47-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libattr1:amd64=1:2.4.47-2
[ "$(dpkg-query -f'${Version}\n' -W libaudit1:amd64)" = "1:2.4-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libaudit1:amd64=1:2.4-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libavahi-client3:amd64)" = "0.6.31-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libavahi-client3:amd64=0.6.31-5
[ "$(dpkg-query -f'${Version}\n' -W libavahi-common-data:amd64)" = "0.6.31-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libavahi-common-data:amd64=0.6.31-5
[ "$(dpkg-query -f'${Version}\n' -W libavahi-common3:amd64)" = "0.6.31-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libavahi-common3:amd64=0.6.31-5
[ "$(dpkg-query -f'${Version}\n' -W libblas-common)" = "1.2.20110419-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libblas-common=1.2.20110419-10
[ "$(dpkg-query -f'${Version}\n' -W libblas-dev)" = "1.2.20110419-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libblas-dev=1.2.20110419-10
[ "$(dpkg-query -f'${Version}\n' -W libblas3)" = "1.2.20110419-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libblas3=1.2.20110419-10
[ "$(dpkg-query -f'${Version}\n' -W libblkid1:amd64)" = "2.25.2-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libblkid1:amd64=2.25.2-6
[ "$(dpkg-query -f'${Version}\n' -W libboost-iostreams1.55.0:amd64)" = "1.55.0+dfsg-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libboost-iostreams1.55.0:amd64=1.55.0+dfsg-3
[ "$(dpkg-query -f'${Version}\n' -W libboost-system1.55.0:amd64)" = "1.55.0+dfsg-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libboost-system1.55.0:amd64=1.55.0+dfsg-3
[ "$(dpkg-query -f'${Version}\n' -W libboost-thread1.55.0:amd64)" = "1.55.0+dfsg-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libboost-thread1.55.0:amd64=1.55.0+dfsg-3
[ "$(dpkg-query -f'${Version}\n' -W libbsd0:amd64)" = "0.7.0-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libbsd0:amd64=0.7.0-2
[ "$(dpkg-query -f'${Version}\n' -W libbz2-1.0:amd64)" = "1.0.6-7+b3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libbz2-1.0:amd64=1.0.6-7+b3
[ "$(dpkg-query -f'${Version}\n' -W libc-dev-bin)" = "2.19-18+deb8u10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libc-dev-bin=2.19-18+deb8u10
[ "$(dpkg-query -f'${Version}\n' -W libc6-dev:amd64)" = "2.19-18+deb8u10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libc6-dev:amd64=2.19-18+deb8u10
[ "$(dpkg-query -f'${Version}\n' -W libc6:amd64)" = "2.19-18+deb8u10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libc6:amd64=2.19-18+deb8u10
[ "$(dpkg-query -f'${Version}\n' -W libcairo2:amd64)" = "1.14.0-2.1+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcairo2:amd64=1.14.0-2.1+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libcap-ng0:amd64)" = "0.7.4-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcap-ng0:amd64=0.7.4-2
[ "$(dpkg-query -f'${Version}\n' -W libcap2:amd64)" = "1:2.24-8" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcap2:amd64=1:2.24-8
[ "$(dpkg-query -f'${Version}\n' -W libcilkrts5:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcilkrts5:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libcloog-isl4:amd64)" = "0.18.2-1+b2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcloog-isl4:amd64=0.18.2-1+b2
[ "$(dpkg-query -f'${Version}\n' -W libcomerr2:amd64)" = "1.42.12-2+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcomerr2:amd64=1.42.12-2+b1
[ "$(dpkg-query -f'${Version}\n' -W libcryptsetup4:amd64)" = "2:1.6.6-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcryptsetup4:amd64=2:1.6.6-5
[ "$(dpkg-query -f'${Version}\n' -W libcups2:amd64)" = "1.7.5-11+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcups2:amd64=1.7.5-11+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libcurl3-gnutls:amd64)" = "7.38.0-4+deb8u5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcurl3-gnutls:amd64=7.38.0-4+deb8u5
[ "$(dpkg-query -f'${Version}\n' -W libcurl3:amd64)" = "7.38.0-4+deb8u9" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcurl3:amd64=7.38.0-4+deb8u9
[ "$(dpkg-query -f'${Version}\n' -W libcurl4-openssl-dev:amd64)" = "7.38.0-4+deb8u9" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libcurl4-openssl-dev:amd64=7.38.0-4+deb8u9
[ "$(dpkg-query -f'${Version}\n' -W libdatrie1:amd64)" = "0.2.8-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdatrie1:amd64=0.2.8-1
[ "$(dpkg-query -f'${Version}\n' -W libdb5.3:amd64)" = "5.3.28-9" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdb5.3:amd64=5.3.28-9
[ "$(dpkg-query -f'${Version}\n' -W libdbus-1-3:amd64)" = "1.8.22-0+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdbus-1-3:amd64=1.8.22-0+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libdbus-glib-1-2:amd64)" = "0.102-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdbus-glib-1-2:amd64=0.102-1
[ "$(dpkg-query -f'${Version}\n' -W libdebconfclient0:amd64)" = "0.192" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdebconfclient0:amd64=0.192
[ "$(dpkg-query -f'${Version}\n' -W libdevmapper-event1.02.1:amd64)" = "2:1.02.90-2.2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdevmapper-event1.02.1:amd64=2:1.02.90-2.2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libdevmapper1.02.1:amd64)" = "2:1.02.90-2.2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdevmapper1.02.1:amd64=2:1.02.90-2.2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libdrm2:amd64)" = "2.4.58-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libdrm2:amd64=2.4.58-2
[ "$(dpkg-query -f'${Version}\n' -W libedit2:amd64)" = "3.1-20140620-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libedit2:amd64=3.1-20140620-2
[ "$(dpkg-query -f'${Version}\n' -W liberror-perl)" = "0.17-1.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liberror-perl=0.17-1.1
[ "$(dpkg-query -f'${Version}\n' -W libevent-2.0-5:amd64)" = "2.0.21-stable-2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libevent-2.0-5:amd64=2.0.21-stable-2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libexpat1-dev:amd64)" = "2.1.0-6+deb8u4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libexpat1-dev:amd64=2.1.0-6+deb8u4
[ "$(dpkg-query -f'${Version}\n' -W libexpat1:amd64)" = "2.1.0-6+deb8u4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libexpat1:amd64=2.1.0-6+deb8u4
[ "$(dpkg-query -f'${Version}\n' -W libfam0)" = "2.7.0-17.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libfam0=2.7.0-17.1
[ "$(dpkg-query -f'${Version}\n' -W libffi6:amd64)" = "3.1-2+b2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libffi6:amd64=3.1-2+b2
[ "$(dpkg-query -f'${Version}\n' -W libfontconfig1:amd64)" = "2.11.0-6.3+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libfontconfig1:amd64=2.11.0-6.3+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libfreetype6:amd64)" = "2.5.2-3+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libfreetype6:amd64=2.5.2-3+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libfuse2:amd64)" = "2.9.3-15+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libfuse2:amd64=2.9.3-15+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libgcc-4.8-dev:amd64)" = "4.8.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgcc-4.8-dev:amd64=4.8.4-1
[ "$(dpkg-query -f'${Version}\n' -W libgcc-4.9-dev:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgcc-4.9-dev:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libgcc1:amd64)" = "1:4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgcc1:amd64=1:4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libgcrypt20:amd64)" = "1.6.3-2+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgcrypt20:amd64=1.6.3-2+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libgd3:amd64)" = "2.1.0-5+deb8u11" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgd3:amd64=2.1.0-5+deb8u11
[ "$(dpkg-query -f'${Version}\n' -W libgdbm3:amd64)" = "1.8.3-13.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgdbm3:amd64=1.8.3-13.1
[ "$(dpkg-query -f'${Version}\n' -W libgdk-pixbuf2.0-0:amd64)" = "2.31.1-2+deb8u7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgdk-pixbuf2.0-0:amd64=2.31.1-2+deb8u7
[ "$(dpkg-query -f'${Version}\n' -W libgdk-pixbuf2.0-common)" = "2.31.1-2+deb8u7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgdk-pixbuf2.0-common=2.31.1-2+deb8u7
[ "$(dpkg-query -f'${Version}\n' -W libgeoip-dev)" = "1.6.2-4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgeoip-dev=1.6.2-4
[ "$(dpkg-query -f'${Version}\n' -W libgeoip1:amd64)" = "1.6.2-4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgeoip1:amd64=1.6.2-4
[ "$(dpkg-query -f'${Version}\n' -W libgfortran-4.9-dev:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgfortran-4.9-dev:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libgfortran3:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgfortran3:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libgirepository-1.0-1:amd64)" = "1.42.0-2.2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgirepository-1.0-1:amd64=1.42.0-2.2
[ "$(dpkg-query -f'${Version}\n' -W libglib2.0-0:amd64)" = "2.42.1-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libglib2.0-0:amd64=2.42.1-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libgmp-dev:amd64)" = "2:6.0.0+dfsg-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgmp-dev:amd64=2:6.0.0+dfsg-6
[ "$(dpkg-query -f'${Version}\n' -W libgmp10:amd64)" = "2:6.0.0+dfsg-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgmp10:amd64=2:6.0.0+dfsg-6
[ "$(dpkg-query -f'${Version}\n' -W libgmpxx4ldbl:amd64)" = "2:6.0.0+dfsg-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgmpxx4ldbl:amd64=2:6.0.0+dfsg-6
[ "$(dpkg-query -f'${Version}\n' -W libgnutls-deb0-28:amd64)" = "3.3.8-6+deb8u4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgnutls-deb0-28:amd64=3.3.8-6+deb8u4
[ "$(dpkg-query -f'${Version}\n' -W libgnutls-openssl27:amd64)" = "3.3.8-6+deb8u4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgnutls-openssl27:amd64=3.3.8-6+deb8u4
[ "$(dpkg-query -f'${Version}\n' -W libgomp1:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgomp1:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libgpg-error0:amd64)" = "1.17-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgpg-error0:amd64=1.17-3
[ "$(dpkg-query -f'${Version}\n' -W libgpm2:amd64)" = "1.20.4-6.1+b2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgpm2:amd64=1.20.4-6.1+b2
[ "$(dpkg-query -f'${Version}\n' -W libgraphite2-3:amd64)" = "1.3.10-1~deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgraphite2-3:amd64=1.3.10-1~deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libgssapi-krb5-2:amd64)" = "1.12.1+dfsg-19+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgssapi-krb5-2:amd64=1.12.1+dfsg-19+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libgtk2.0-0:amd64)" = "2.24.25-3+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgtk2.0-0:amd64=2.24.25-3+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libgtk2.0-bin)" = "2.24.25-3+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgtk2.0-bin=2.24.25-3+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libgtk2.0-common)" = "2.24.25-3+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libgtk2.0-common=2.24.25-3+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libharfbuzz0b:amd64)" = "0.9.35-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libharfbuzz0b:amd64=0.9.35-2
[ "$(dpkg-query -f'${Version}\n' -W libhogweed2:amd64)" = "2.7.1-5+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libhogweed2:amd64=2.7.1-5+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libicu52:amd64)" = "52.1-8+deb8u4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libicu52:amd64=52.1-8+deb8u4
[ "$(dpkg-query -f'${Version}\n' -W libidn11:amd64)" = "1.29-1+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libidn11:amd64=1.29-1+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libio-pty-perl)" = "1:1.08-1+b4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libio-pty-perl=1:1.08-1+b4
[ "$(dpkg-query -f'${Version}\n' -W libipc-run-perl)" = "0.92-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libipc-run-perl=0.92-1
[ "$(dpkg-query -f'${Version}\n' -W libiscsi2:amd64)" = "1.12.0-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libiscsi2:amd64=1.12.0-2
[ "$(dpkg-query -f'${Version}\n' -W libisl10:amd64)" = "0.12.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libisl10:amd64=0.12.2-2
[ "$(dpkg-query -f'${Version}\n' -W libitm1:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libitm1:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libjasper1:amd64)" = "1.900.1-debian1-2.4+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libjasper1:amd64=1.900.1-debian1-2.4+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W libjbig0:amd64)" = "2.1-3.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libjbig0:amd64=2.1-3.1
[ "$(dpkg-query -f'${Version}\n' -W libjemalloc1)" = "3.6.0-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libjemalloc1=3.6.0-3
[ "$(dpkg-query -f'${Version}\n' -W libjpeg62-turbo-dev:amd64)" = "1:1.3.1-12" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libjpeg62-turbo-dev:amd64=1:1.3.1-12
[ "$(dpkg-query -f'${Version}\n' -W libjpeg62-turbo:amd64)" = "1:1.3.1-12" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libjpeg62-turbo:amd64=1:1.3.1-12
[ "$(dpkg-query -f'${Version}\n' -W libjson-c2:amd64)" = "0.11-4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libjson-c2:amd64=0.11-4
[ "$(dpkg-query -f'${Version}\n' -W libk5crypto3:amd64)" = "1.12.1+dfsg-19+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libk5crypto3:amd64=1.12.1+dfsg-19+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libkeyutils1:amd64)" = "1.5.9-5+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libkeyutils1:amd64=1.5.9-5+b1
[ "$(dpkg-query -f'${Version}\n' -W libkmod2:amd64)" = "18-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libkmod2:amd64=18-3
[ "$(dpkg-query -f'${Version}\n' -W libkrb5-3:amd64)" = "1.12.1+dfsg-19+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libkrb5-3:amd64=1.12.1+dfsg-19+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libkrb5support0:amd64)" = "1.12.1+dfsg-19+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libkrb5support0:amd64=1.12.1+dfsg-19+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libksba8:amd64)" = "1.3.2-1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libksba8:amd64=1.3.2-1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W liblapack-dev)" = "3.5.0-4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liblapack-dev=3.5.0-4
[ "$(dpkg-query -f'${Version}\n' -W liblapack3)" = "3.5.0-4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liblapack3=3.5.0-4
[ "$(dpkg-query -f'${Version}\n' -W libldap-2.4-2:amd64)" = "2.4.40+dfsg-1+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libldap-2.4-2:amd64=2.4.40+dfsg-1+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W liblogging-stdlog0:amd64)" = "1.0.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liblogging-stdlog0:amd64=1.0.4-1
[ "$(dpkg-query -f'${Version}\n' -W liblognorm1:amd64)" = "1.0.1-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liblognorm1:amd64=1.0.1-3
[ "$(dpkg-query -f'${Version}\n' -W liblsan0:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liblsan0:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libltdl7:amd64)" = "2.4.2-1.11+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libltdl7:amd64=2.4.2-1.11+b1
[ "$(dpkg-query -f'${Version}\n' -W liblvm2cmd2.02:amd64)" = "2.02.111-2.2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liblvm2cmd2.02:amd64=2.02.111-2.2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W liblzma5:amd64)" = "5.1.1alpha+20120614-2+b3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install liblzma5:amd64=5.1.1alpha+20120614-2+b3
[ "$(dpkg-query -f'${Version}\n' -W libmagic1:amd64)" = "1:5.22+15-2+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libmagic1:amd64=1:5.22+15-2+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W libmnl0:amd64)" = "1.0.3-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libmnl0:amd64=1.0.3-5
[ "$(dpkg-query -f'${Version}\n' -W libmount1:amd64)" = "2.25.2-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libmount1:amd64=2.25.2-6
[ "$(dpkg-query -f'${Version}\n' -W libmpc3:amd64)" = "1.0.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libmpc3:amd64=1.0.2-1
[ "$(dpkg-query -f'${Version}\n' -W libmpdec2:amd64)" = "2.4.1-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libmpdec2:amd64=2.4.1-1
[ "$(dpkg-query -f'${Version}\n' -W libmpfr4:amd64)" = "3.1.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libmpfr4:amd64=3.1.2-2
[ "$(dpkg-query -f'${Version}\n' -W libmysqlclient18:amd64)" = "5.5.58-0+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libmysqlclient18:amd64=5.5.58-0+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libncurses5:amd64)" = "5.9+20140913-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libncurses5:amd64=5.9+20140913-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libncursesw5:amd64)" = "5.9+20140913-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libncursesw5:amd64=5.9+20140913-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libnetfilter-acct1:amd64)" = "1.0.2-1.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libnetfilter-acct1:amd64=1.0.2-1.1
[ "$(dpkg-query -f'${Version}\n' -W libnettle4:amd64)" = "2.7.1-5+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libnettle4:amd64=2.7.1-5+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libnewt0.52:amd64)" = "0.52.17-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libnewt0.52:amd64=0.52.17-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libnfnetlink0:amd64)" = "1.0.1-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libnfnetlink0:amd64=1.0.1-3
[ "$(dpkg-query -f'${Version}\n' -W libnfsidmap2:amd64)" = "0.25-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libnfsidmap2:amd64=0.25-5
[ "$(dpkg-query -f'${Version}\n' -W libnspr4:amd64)" = "2:4.12-1+debu8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libnspr4:amd64=2:4.12-1+debu8u1
[ "$(dpkg-query -f'${Version}\n' -W libnss3:amd64)" = "2:3.26-1+debu8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libnss3:amd64=2:3.26-1+debu8u1
[ "$(dpkg-query -f'${Version}\n' -W libodbc1:amd64)" = "2.3.1-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libodbc1:amd64=2.3.1-3
[ "$(dpkg-query -f'${Version}\n' -W libopenipmi0)" = "2.0.16-1.4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libopenipmi0=2.0.16-1.4
[ "$(dpkg-query -f'${Version}\n' -W libp11-kit0:amd64)" = "0.20.7-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libp11-kit0:amd64=0.20.7-1
[ "$(dpkg-query -f'${Version}\n' -W libpam-modules:amd64)" = "1.1.8-3.1+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpam-modules:amd64=1.1.8-3.1+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libpam0g:amd64)" = "1.1.8-3.1+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpam0g:amd64=1.1.8-3.1+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libpango-1.0-0:amd64)" = "1.36.8-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpango-1.0-0:amd64=1.36.8-3
[ "$(dpkg-query -f'${Version}\n' -W libpango1.0-0:amd64)" = "1.36.8-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpango1.0-0:amd64=1.36.8-3
[ "$(dpkg-query -f'${Version}\n' -W libpangocairo-1.0-0:amd64)" = "1.36.8-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpangocairo-1.0-0:amd64=1.36.8-3
[ "$(dpkg-query -f'${Version}\n' -W libpangoft2-1.0-0:amd64)" = "1.36.8-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpangoft2-1.0-0:amd64=1.36.8-3
[ "$(dpkg-query -f'${Version}\n' -W libpangox-1.0-0:amd64)" = "0.0.2-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpangox-1.0-0:amd64=0.0.2-5
[ "$(dpkg-query -f'${Version}\n' -W libpangoxft-1.0-0:amd64)" = "1.36.8-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpangoxft-1.0-0:amd64=1.36.8-3
[ "$(dpkg-query -f'${Version}\n' -W libparted2:amd64)" = "3.2-7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libparted2:amd64=3.2-7
[ "$(dpkg-query -f'${Version}\n' -W libpci3:amd64)" = "1:3.2.1-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpci3:amd64=1:3.2.1-3
[ "$(dpkg-query -f'${Version}\n' -W libpcre3:amd64)" = "2:8.35-3.3+deb8u4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpcre3:amd64=2:8.35-3.3+deb8u4
[ "$(dpkg-query -f'${Version}\n' -W libperl5.20)" = "5.20.2-3+deb8u9" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libperl5.20=5.20.2-3+deb8u9
[ "$(dpkg-query -f'${Version}\n' -W libpipeline1:amd64)" = "1.4.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpipeline1:amd64=1.4.0-1
[ "$(dpkg-query -f'${Version}\n' -W libpixman-1-0:amd64)" = "0.32.6-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpixman-1-0:amd64=0.32.6-3
[ "$(dpkg-query -f'${Version}\n' -W libpng12-0:amd64)" = "1.2.50-2+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpng12-0:amd64=1.2.50-2+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W libpopt0:amd64)" = "1.16-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpopt0:amd64=1.16-10
[ "$(dpkg-query -f'${Version}\n' -W libpq-dev)" = "10.1-1.pgdg80+1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpq-dev=10.1-1.pgdg80+1
[ "$(dpkg-query -f'${Version}\n' -W libpq5:amd64)" = "10.1-1.pgdg80+1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpq5:amd64=10.1-1.pgdg80+1
[ "$(dpkg-query -f'${Version}\n' -W libprocps3:amd64)" = "2:3.3.9-9" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libprocps3:amd64=2:3.3.9-9
[ "$(dpkg-query -f'${Version}\n' -W libpsl0:amd64)" = "0.5.1-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpsl0:amd64=0.5.1-1
[ "$(dpkg-query -f'${Version}\n' -W libpth20:amd64)" = "2.0.7-20" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpth20:amd64=2.0.7-20
[ "$(dpkg-query -f'${Version}\n' -W libpython-dev:amd64)" = "2.7.9-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython-dev:amd64=2.7.9-1
[ "$(dpkg-query -f'${Version}\n' -W libpython-stdlib:amd64)" = "2.7.9-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython-stdlib:amd64=2.7.9-1
[ "$(dpkg-query -f'${Version}\n' -W libpython2.7-dev:amd64)" = "2.7.9-2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython2.7-dev:amd64=2.7.9-2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libpython2.7-minimal:amd64)" = "2.7.9-2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython2.7-minimal:amd64=2.7.9-2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libpython2.7-stdlib:amd64)" = "2.7.9-2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython2.7-stdlib:amd64=2.7.9-2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libpython2.7:amd64)" = "2.7.9-2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython2.7:amd64=2.7.9-2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libpython3-stdlib:amd64)" = "3.4.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython3-stdlib:amd64=3.4.2-2
[ "$(dpkg-query -f'${Version}\n' -W libpython3.4-minimal:amd64)" = "3.4.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython3.4-minimal:amd64=3.4.2-1
[ "$(dpkg-query -f'${Version}\n' -W libpython3.4-stdlib:amd64)" = "3.4.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libpython3.4-stdlib:amd64=3.4.2-1
[ "$(dpkg-query -f'${Version}\n' -W libquadmath0:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libquadmath0:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W librados2)" = "0.80.7-2+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install librados2=0.80.7-2+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W librbd1)" = "0.80.7-2+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install librbd1=0.80.7-2+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libreadline5:amd64)" = "5.2+dfsg-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libreadline5:amd64=5.2+dfsg-2
[ "$(dpkg-query -f'${Version}\n' -W libreadline6:amd64)" = "6.3-8+b3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libreadline6:amd64=6.3-8+b3
[ "$(dpkg-query -f'${Version}\n' -W librtmp1:amd64)" = "2.4+20150115.gita107cef-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install librtmp1:amd64=2.4+20150115.gita107cef-1
[ "$(dpkg-query -f'${Version}\n' -W libruby2.1:amd64)" = "2.1.5-2+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libruby2.1:amd64=2.1.5-2+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W libsasl2-2:amd64)" = "2.1.26.dfsg1-13+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsasl2-2:amd64=2.1.26.dfsg1-13+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libsasl2-modules-db:amd64)" = "2.1.26.dfsg1-13+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsasl2-modules-db:amd64=2.1.26.dfsg1-13+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libsctp1:amd64)" = "1.0.16+dfsg-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsctp1:amd64=1.0.16+dfsg-2
[ "$(dpkg-query -f'${Version}\n' -W libselinux1:amd64)" = "2.3-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libselinux1:amd64=2.3-2
[ "$(dpkg-query -f'${Version}\n' -W libsemanage1:amd64)" = "2.3-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsemanage1:amd64=2.3-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libsensors4:amd64)" = "1:3.3.5-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsensors4:amd64=1:3.3.5-2
[ "$(dpkg-query -f'${Version}\n' -W libsepol1:amd64)" = "2.3-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsepol1:amd64=2.3-2
[ "$(dpkg-query -f'${Version}\n' -W libsigc++-2.0-0c2a:amd64)" = "2.4.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsigc++-2.0-0c2a:amd64=2.4.0-1
[ "$(dpkg-query -f'${Version}\n' -W libslang2:amd64)" = "2.3.0-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libslang2:amd64=2.3.0-2
[ "$(dpkg-query -f'${Version}\n' -W libsmartcols1:amd64)" = "2.25.2-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsmartcols1:amd64=2.25.2-6
[ "$(dpkg-query -f'${Version}\n' -W libsnmp-base)" = "5.7.2.1+dfsg-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsnmp-base=5.7.2.1+dfsg-1
[ "$(dpkg-query -f'${Version}\n' -W libsnmp30:amd64)" = "5.7.2.1+dfsg-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsnmp30:amd64=5.7.2.1+dfsg-1
[ "$(dpkg-query -f'${Version}\n' -W libsqlite3-0:amd64)" = "3.8.7.1-1+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsqlite3-0:amd64=3.8.7.1-1+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libss2:amd64)" = "1.42.12-2+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libss2:amd64=1.42.12-2+b1
[ "$(dpkg-query -f'${Version}\n' -W libssh2-1:amd64)" = "1.4.3-4.1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libssh2-1:amd64=1.4.3-4.1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libssl-dev:amd64)" = "1.0.1t-1+deb8u7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libssl-dev:amd64=1.0.1t-1+deb8u7
[ "$(dpkg-query -f'${Version}\n' -W libssl-doc)" = "1.0.1t-1+deb8u7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libssl-doc=1.0.1t-1+deb8u7
[ "$(dpkg-query -f'${Version}\n' -W libssl1.0.0:amd64)" = "1.0.1t-1+deb8u7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libssl1.0.0:amd64=1.0.1t-1+deb8u7
[ "$(dpkg-query -f'${Version}\n' -W libstdc++-4.8-dev:amd64)" = "4.8.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libstdc++-4.8-dev:amd64=4.8.4-1
[ "$(dpkg-query -f'${Version}\n' -W libstdc++6:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libstdc++6:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libsystemd0:amd64)" = "215-17+deb8u6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libsystemd0:amd64=215-17+deb8u6
[ "$(dpkg-query -f'${Version}\n' -W libtasn1-6:amd64)" = "4.2-3+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libtasn1-6:amd64=4.2-3+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W libterm-readkey-perl)" = "2.32-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libterm-readkey-perl=2.32-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libterm-readline-perl-perl)" = "1.0303-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libterm-readline-perl-perl=1.0303-1
[ "$(dpkg-query -f'${Version}\n' -W libthai-data)" = "0.1.21-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libthai-data=0.1.21-1
[ "$(dpkg-query -f'${Version}\n' -W libthai0:amd64)" = "0.1.21-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libthai0:amd64=0.1.21-1
[ "$(dpkg-query -f'${Version}\n' -W libtiff5:amd64)" = "4.0.3-12.3+deb8u4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libtiff5:amd64=4.0.3-12.3+deb8u4
[ "$(dpkg-query -f'${Version}\n' -W libtinfo5:amd64)" = "5.9+20140913-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libtinfo5:amd64=5.9+20140913-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libtirpc1:amd64)" = "0.2.5-1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libtirpc1:amd64=0.2.5-1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libtool)" = "2.4.2-1.11" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libtool=2.4.2-1.11
[ "$(dpkg-query -f'${Version}\n' -W libtsan0:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libtsan0:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libubsan0:amd64)" = "4.9.2-10" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libubsan0:amd64=4.9.2-10
[ "$(dpkg-query -f'${Version}\n' -W libudev1:amd64)" = "215-17+deb8u6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libudev1:amd64=215-17+deb8u6
[ "$(dpkg-query -f'${Version}\n' -W libusb-0.1-4:amd64)" = "2:0.1.12-25" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libusb-0.1-4:amd64=2:0.1.12-25
[ "$(dpkg-query -f'${Version}\n' -W libustr-1.0-1:amd64)" = "1.0.4-3+b2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libustr-1.0-1:amd64=1.0.4-3+b2
[ "$(dpkg-query -f'${Version}\n' -W libuuid-perl)" = "0.05-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libuuid-perl=0.05-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libuuid1:amd64)" = "2.25.2-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libuuid1:amd64=2.25.2-6
[ "$(dpkg-query -f'${Version}\n' -W libvpx1:amd64)" = "1.3.0-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libvpx1:amd64=1.3.0-3
[ "$(dpkg-query -f'${Version}\n' -W libwrap0:amd64)" = "7.6.q-25" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libwrap0:amd64=7.6.q-25
[ "$(dpkg-query -f'${Version}\n' -W libx11-6:amd64)" = "2:1.6.2-3+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libx11-6:amd64=2:1.6.2-3+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libx11-data)" = "2:1.6.2-3+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libx11-data=2:1.6.2-3+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libxau6:amd64)" = "1:1.0.8-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxau6:amd64=1:1.0.8-1
[ "$(dpkg-query -f'${Version}\n' -W libxcb-render0:amd64)" = "1.10-3+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxcb-render0:amd64=1.10-3+b1
[ "$(dpkg-query -f'${Version}\n' -W libxcb-shm0:amd64)" = "1.10-3+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxcb-shm0:amd64=1.10-3+b1
[ "$(dpkg-query -f'${Version}\n' -W libxcb1:amd64)" = "1.10-3+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxcb1:amd64=1.10-3+b1
[ "$(dpkg-query -f'${Version}\n' -W libxcomposite1:amd64)" = "1:0.4.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxcomposite1:amd64=1:0.4.4-1
[ "$(dpkg-query -f'${Version}\n' -W libxcursor1:amd64)" = "1:1.1.14-1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxcursor1:amd64=1:1.1.14-1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libxdamage1:amd64)" = "1:1.1.4-2+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxdamage1:amd64=1:1.1.4-2+b1
[ "$(dpkg-query -f'${Version}\n' -W libxdmcp6:amd64)" = "1:1.1.1-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxdmcp6:amd64=1:1.1.1-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libxext6:amd64)" = "2:1.3.3-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxext6:amd64=2:1.3.3-1
[ "$(dpkg-query -f'${Version}\n' -W libxfixes3:amd64)" = "1:5.0.1-2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxfixes3:amd64=1:5.0.1-2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libxft2:amd64)" = "2.3.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxft2:amd64=2.3.2-1
[ "$(dpkg-query -f'${Version}\n' -W libxi6:amd64)" = "2:1.7.4-1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxi6:amd64=2:1.7.4-1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libxinerama1:amd64)" = "2:1.1.3-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxinerama1:amd64=2:1.1.3-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libxml2-dev:amd64)" = "2.9.1+dfsg1-5+deb8u5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxml2-dev:amd64=2.9.1+dfsg1-5+deb8u5
[ "$(dpkg-query -f'${Version}\n' -W libxml2:amd64)" = "2.9.1+dfsg1-5+deb8u5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxml2:amd64=2.9.1+dfsg1-5+deb8u5
[ "$(dpkg-query -f'${Version}\n' -W libxpm4:amd64)" = "1:3.5.12-0+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxpm4:amd64=1:3.5.12-0+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libxrandr2:amd64)" = "2:1.4.2-1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxrandr2:amd64=2:1.4.2-1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W libxrender1:amd64)" = "1:0.9.8-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxrender1:amd64=1:0.9.8-1+b1
[ "$(dpkg-query -f'${Version}\n' -W libxslt1-dev:amd64)" = "1.1.28-2+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxslt1-dev:amd64=1.1.28-2+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W libxslt1.1:amd64)" = "1.1.28-2+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libxslt1.1:amd64=1.1.28-2+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W libyaml-0-2:amd64)" = "0.1.6-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libyaml-0-2:amd64=0.1.6-3
[ "$(dpkg-query -f'${Version}\n' -W libyaml-syck-perl)" = "1.27-2+b2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install libyaml-syck-perl=1.27-2+b2
[ "$(dpkg-query -f'${Version}\n' -W lighttpd)" = "1.4.35-4+deb8u1" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install lighttpd=1.4.35-4+deb8u1; SERVICE_sysvinit_lighttpd=1; }
[ "$(dpkg-query -f'${Version}\n' -W linux-base)" = "3.5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-base=3.5
[ "$(dpkg-query -f'${Version}\n' -W linux-compiler-gcc-4.8-x86)" = "3.16.39-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-compiler-gcc-4.8-x86=3.16.39-1
[ "$(dpkg-query -f'${Version}\n' -W linux-headers-3.16.0-4-amd64)" = "3.16.39-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-headers-3.16.0-4-amd64=3.16.39-1
[ "$(dpkg-query -f'${Version}\n' -W linux-headers-3.16.0-4-common)" = "3.16.39-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-headers-3.16.0-4-common=3.16.39-1
[ "$(dpkg-query -f'${Version}\n' -W linux-headers-amd64)" = "3.16+63" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-headers-amd64=3.16+63
[ "$(dpkg-query -f'${Version}\n' -W linux-image-3.16.0-4-amd64)" = "3.16.39-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-image-3.16.0-4-amd64=3.16.39-1
[ "$(dpkg-query -f'${Version}\n' -W linux-image-amd64)" = "3.16+63" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-image-amd64=3.16+63
[ "$(dpkg-query -f'${Version}\n' -W linux-kbuild-3.16)" = "3.16.7-ckt20-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-kbuild-3.16=3.16.7-ckt20-1
[ "$(dpkg-query -f'${Version}\n' -W linux-libc-dev:amd64)" = "3.16.51-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install linux-libc-dev:amd64=3.16.51-3
[ "$(dpkg-query -f'${Version}\n' -W lksctp-tools)" = "1.0.16+dfsg-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install lksctp-tools=1.0.16+dfsg-2
[ "$(dpkg-query -f'${Version}\n' -W lsb-release)" = "4.1+Debian13+nmu1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install lsb-release=4.1+Debian13+nmu1
[ "$(dpkg-query -f'${Version}\n' -W lvm2)" = "2.02.111-2.2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install lvm2=2.02.111-2.2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W moreutils)" = "0.52" ] || apt-get -y -q -o DPkg::Options::=--force-confold install moreutils=0.52
[ "$(dpkg-query -f'${Version}\n' -W mysql-common)" = "5.5.58-0+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install mysql-common=5.5.58-0+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W nfacct)" = "1.0.1-1.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install nfacct=1.0.1-1.1
[ "$(dpkg-query -f'${Version}\n' -W nfs4-acl-tools)" = "0.3.3-2.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install nfs4-acl-tools=0.3.3-2.1
[ "$(dpkg-query -f'${Version}\n' -W nginx-common)" = "1.6.2-5+deb8u5" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install nginx-common=1.6.2-5+deb8u5; SERVICE_sysvinit_nginx=1; }
[ "$(dpkg-query -f'${Version}\n' -W nginx-full)" = "1.6.2-5+deb8u5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install nginx-full=1.6.2-5+deb8u5
[ "$(dpkg-query -f'${Version}\n' -W openipmi)" = "2.0.16-1.4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install openipmi=2.0.16-1.4
[ "$(dpkg-query -f'${Version}\n' -W openssh-server)" = "1:6.7p1-5+deb8u3" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install openssh-server=1:6.7p1-5+deb8u3; SERVICE_sysvinit_ssh=1; SERVICE_upstart_ssh=1; }
[ "$(dpkg-query -f'${Version}\n' -W openssh-sftp-server)" = "1:6.7p1-5+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install openssh-sftp-server=1:6.7p1-5+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W parted)" = "3.2-7" ] || apt-get -y -q -o DPkg::Options::=--force-confold install parted=3.2-7
[ "$(dpkg-query -f'${Version}\n' -W pgdg-keyring)" = "2017.3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install pgdg-keyring=2017.3
[ "$(dpkg-query -f'${Version}\n' -W pinentry-gtk2)" = "0.8.3-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install pinentry-gtk2=0.8.3-2
[ "$(dpkg-query -f'${Version}\n' -W pv)" = "1.5.7-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install pv=1.5.7-2
[ "$(dpkg-query -f'${Version}\n' -W python-apt-common)" = "0.9.3.12" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-apt-common=0.9.3.12
[ "$(dpkg-query -f'${Version}\n' -W python-boto)" = "2.34.0-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-boto=2.34.0-2
[ "$(dpkg-query -f'${Version}\n' -W python-bson)" = "2.7.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-bson=2.7.2-1
[ "$(dpkg-query -f'${Version}\n' -W python-bson-ext)" = "2.7.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-bson-ext=2.7.2-1
[ "$(dpkg-query -f'${Version}\n' -W python-chardet)" = "2.3.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-chardet=2.3.0-1
[ "$(dpkg-query -f'${Version}\n' -W python-chardet-whl)" = "2.3.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-chardet-whl=2.3.0-1
[ "$(dpkg-query -f'${Version}\n' -W python-colorama)" = "0.3.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-colorama=0.3.2-1
[ "$(dpkg-query -f'${Version}\n' -W python-colorama-whl)" = "0.3.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-colorama-whl=0.3.2-1
[ "$(dpkg-query -f'${Version}\n' -W python-dev)" = "2.7.9-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-dev=2.7.9-1
[ "$(dpkg-query -f'${Version}\n' -W python-distlib)" = "0.1.9-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-distlib=0.1.9-1
[ "$(dpkg-query -f'${Version}\n' -W python-distlib-whl)" = "0.1.9-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-distlib-whl=0.1.9-1
[ "$(dpkg-query -f'${Version}\n' -W python-gridfs)" = "2.7.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-gridfs=2.7.2-1
[ "$(dpkg-query -f'${Version}\n' -W python-html5lib)" = "0.999-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-html5lib=0.999-3
[ "$(dpkg-query -f'${Version}\n' -W python-html5lib-whl)" = "0.999-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-html5lib-whl=0.999-3
[ "$(dpkg-query -f'${Version}\n' -W python-meld3)" = "1.0.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-meld3=1.0.0-1
[ "$(dpkg-query -f'${Version}\n' -W python-pip)" = "1.5.6-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-pip=1.5.6-5
[ "$(dpkg-query -f'${Version}\n' -W python-pip-whl)" = "1.5.6-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-pip-whl=1.5.6-5
[ "$(dpkg-query -f'${Version}\n' -W python-pkg-resources)" = "5.5.1-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-pkg-resources=5.5.1-1
[ "$(dpkg-query -f'${Version}\n' -W python-pymongo)" = "2.7.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-pymongo=2.7.2-1
[ "$(dpkg-query -f'${Version}\n' -W python-pymongo-ext)" = "2.7.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-pymongo-ext=2.7.2-1
[ "$(dpkg-query -f'${Version}\n' -W python-requests)" = "2.4.3-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-requests=2.4.3-6
[ "$(dpkg-query -f'${Version}\n' -W python-requests-whl)" = "2.4.3-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-requests-whl=2.4.3-6
[ "$(dpkg-query -f'${Version}\n' -W python-setuptools)" = "5.5.1-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-setuptools=5.5.1-1
[ "$(dpkg-query -f'${Version}\n' -W python-setuptools-whl)" = "5.5.1-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-setuptools-whl=5.5.1-1
[ "$(dpkg-query -f'${Version}\n' -W python-six)" = "1.8.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-six=1.8.0-1
[ "$(dpkg-query -f'${Version}\n' -W python-six-whl)" = "1.8.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-six-whl=1.8.0-1
[ "$(dpkg-query -f'${Version}\n' -W python-urllib3)" = "1.9.1-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-urllib3=1.9.1-3
[ "$(dpkg-query -f'${Version}\n' -W python-urllib3-whl)" = "1.9.1-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-urllib3-whl=1.9.1-3
[ "$(dpkg-query -f'${Version}\n' -W python-virtualenv)" = "1.11.6+ds-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python-virtualenv=1.11.6+ds-1
[ "$(dpkg-query -f'${Version}\n' -W python2.7-dev)" = "2.7.9-2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python2.7-dev=2.7.9-2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W python3)" = "3.4.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3=3.4.2-2
[ "$(dpkg-query -f'${Version}\n' -W python3-apt)" = "0.9.3.12" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-apt=0.9.3.12
[ "$(dpkg-query -f'${Version}\n' -W python3-bcdoc)" = "0.12.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-bcdoc=0.12.2-1
[ "$(dpkg-query -f'${Version}\n' -W python3-boto)" = "2.34.0-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-boto=2.34.0-2
[ "$(dpkg-query -f'${Version}\n' -W python3-botocore)" = "0.62.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-botocore=0.62.0-1
[ "$(dpkg-query -f'${Version}\n' -W python3-chardet)" = "2.3.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-chardet=2.3.0-1
[ "$(dpkg-query -f'${Version}\n' -W python3-colorama)" = "0.3.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-colorama=0.3.2-1
[ "$(dpkg-query -f'${Version}\n' -W python3-configobj)" = "5.0.6-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-configobj=5.0.6-1
[ "$(dpkg-query -f'${Version}\n' -W python3-crypto)" = "2.6.1-5+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-crypto=2.6.1-5+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W python3-dateutil)" = "2.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-dateutil=2.2-2
[ "$(dpkg-query -f'${Version}\n' -W python3-dbus)" = "1.2.0-2+b3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-dbus=1.2.0-2+b3
[ "$(dpkg-query -f'${Version}\n' -W python3-docutils)" = "0.12+dfsg-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-docutils=0.12+dfsg-1
[ "$(dpkg-query -f'${Version}\n' -W python3-gi)" = "3.14.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-gi=3.14.0-1
[ "$(dpkg-query -f'${Version}\n' -W python3-jinja2)" = "2.7.3-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-jinja2=2.7.3-1
[ "$(dpkg-query -f'${Version}\n' -W python3-jmespath)" = "0.4.1-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-jmespath=0.4.1-1
[ "$(dpkg-query -f'${Version}\n' -W python3-json-pointer)" = "1.0-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-json-pointer=1.0-2
[ "$(dpkg-query -f'${Version}\n' -W python3-jsonpatch)" = "1.3-5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-jsonpatch=1.3-5
[ "$(dpkg-query -f'${Version}\n' -W python3-jwt)" = "0.2.1-1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-jwt=0.2.1-1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W python3-markupsafe)" = "0.23-1+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-markupsafe=0.23-1+b1
[ "$(dpkg-query -f'${Version}\n' -W python3-minimal)" = "3.4.2-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-minimal=3.4.2-2
[ "$(dpkg-query -f'${Version}\n' -W python3-oauthlib)" = "0.6.3-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-oauthlib=0.6.3-1
[ "$(dpkg-query -f'${Version}\n' -W python3-pkg-resources)" = "5.5.1-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-pkg-resources=5.5.1-1
[ "$(dpkg-query -f'${Version}\n' -W python3-prettytable)" = "0.7.2-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-prettytable=0.7.2-3
[ "$(dpkg-query -f'${Version}\n' -W python3-requests)" = "2.4.3-6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-requests=2.4.3-6
[ "$(dpkg-query -f'${Version}\n' -W python3-roman)" = "2.0.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-roman=2.0.0-1
[ "$(dpkg-query -f'${Version}\n' -W python3-rsa)" = "3.1.4-1+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-rsa=3.1.4-1+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W python3-serial)" = "2.6-1.1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-serial=2.6-1.1
[ "$(dpkg-query -f'${Version}\n' -W python3-six)" = "1.8.0-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-six=1.8.0-1
[ "$(dpkg-query -f'${Version}\n' -W python3-software-properties)" = "0.92.25debian1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-software-properties=0.92.25debian1
[ "$(dpkg-query -f'${Version}\n' -W python3-urllib3)" = "1.9.1-3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-urllib3=1.9.1-3
[ "$(dpkg-query -f'${Version}\n' -W python3-virtualenv)" = "1.11.6+ds-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-virtualenv=1.11.6+ds-1
[ "$(dpkg-query -f'${Version}\n' -W python3-yaml)" = "3.11-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3-yaml=3.11-2
[ "$(dpkg-query -f'${Version}\n' -W python3.4)" = "3.4.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3.4=3.4.2-1
[ "$(dpkg-query -f'${Version}\n' -W python3.4-minimal)" = "3.4.2-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install python3.4-minimal=3.4.2-1
[ "$(dpkg-query -f'${Version}\n' -W qemu-utils)" = "1:2.1+dfsg-12+deb8u6" ] || apt-get -y -q -o DPkg::Options::=--force-confold install qemu-utils=1:2.1+dfsg-12+deb8u6
[ "$(dpkg-query -f'${Version}\n' -W rabbitmq-server)" = "3.3.5-1.1+deb8u1" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install rabbitmq-server=3.3.5-1.1+deb8u1; SERVICE_sysvinit_rabbitmqserver=1; }
[ "$(dpkg-query -f'${Version}\n' -W realpath)" = "8.23-4" ] || apt-get -y -q -o DPkg::Options::=--force-confold install realpath=8.23-4
[ "$(dpkg-query -f'${Version}\n' -W redis-server)" = "2:2.8.17-1+deb8u5" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install redis-server=2:2.8.17-1+deb8u5; SERVICE_sysvinit_redisserver=1; }
[ "$(dpkg-query -f'${Version}\n' -W redis-tools)" = "2:2.8.17-1+deb8u5" ] || apt-get -y -q -o DPkg::Options::=--force-confold install redis-tools=2:2.8.17-1+deb8u5
[ "$(dpkg-query -f'${Version}\n' -W rsync)" = "3.1.1-3+deb8u1" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install rsync=3.1.1-3+deb8u1; SERVICE_sysvinit_rsync=1; }
[ "$(dpkg-query -f'${Version}\n' -W ruby-dev)" = "1:2.1.5+deb8u2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install ruby-dev=1:2.1.5+deb8u2
[ "$(dpkg-query -f'${Version}\n' -W ruby2.1-dev:amd64)" = "2.1.5-2+deb8u3" ] || apt-get -y -q -o DPkg::Options::=--force-confold install ruby2.1-dev:amd64=2.1.5-2+deb8u3
[ "$(dpkg-query -f'${Version}\n' -W shared-mime-info)" = "1.3-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install shared-mime-info=1.3-1
[ "$(dpkg-query -f'${Version}\n' -W shc)" = "3.8.7-2" ] || apt-get -y -q -o DPkg::Options::=--force-confold install shc=3.8.7-2
[ "$(dpkg-query -f'${Version}\n' -W software-properties-common)" = "0.92.25debian1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install software-properties-common=0.92.25debian1
[ "$(dpkg-query -f'${Version}\n' -W spawn-fcgi)" = "1.6.4-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install spawn-fcgi=1.6.4-1
[ "$(dpkg-query -f'${Version}\n' -W sudo)" = "1.8.10p3-1+deb8u3" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install sudo=1.8.10p3-1+deb8u3; SERVICE_sysvinit_sudo=1; }
[ "$(dpkg-query -f'${Version}\n' -W supervisor)" = "3.0r1-1+deb8u1" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install supervisor=3.0r1-1+deb8u1; SERVICE_sysvinit_supervisor=1; }
[ "$(dpkg-query -f'${Version}\n' -W sysstat)" = "11.0.1-1" ] || { apt-get -y -q -o DPkg::Options::=--force-confold install sysstat=11.0.1-1; SERVICE_sysvinit_sysstat=1; }
[ "$(dpkg-query -f'${Version}\n' -W unattended-upgrades)" = "0.83.3.2+deb8u1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install unattended-upgrades=0.83.3.2+deb8u1
[ "$(dpkg-query -f'${Version}\n' -W virtualenv)" = "1.11.6+ds-1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install virtualenv=1.11.6+ds-1
[ "$(dpkg-query -f'${Version}\n' -W zlib1g-dev:amd64)" = "1:1.2.8.dfsg-2+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install zlib1g-dev:amd64=1:1.2.8.dfsg-2+b1
[ "$(dpkg-query -f'${Version}\n' -W zlib1g:amd64)" = "1:1.2.8.dfsg-2+b1" ] || apt-get -y -q -o DPkg::Options::=--force-confold install zlib1g:amd64=1:1.2.8.dfsg-2+b1
[ -n "$SERVICE_sysvinit_cgroupfsmount" ] && /etc/init.d/cgroupfs-mount restart
[ -n "$SERVICE_sysvinit_cloudconfig" ] && /etc/init.d/cloud-config restart
[ -n "$SERVICE_sysvinit_cloudfinal" ] && /etc/init.d/cloud-final restart
[ -n "$SERVICE_sysvinit_cloudinit" ] && /etc/init.d/cloud-init restart
[ -n "$SERVICE_sysvinit_cloudinitlocal" ] && /etc/init.d/cloud-init-local restart
[ -n "$SERVICE_sysvinit_docker" ] && /etc/init.d/docker restart
[ -n "$SERVICE_sysvinit_ipmievd" ] && /etc/init.d/ipmievd restart
[ -n "$SERVICE_sysvinit_lighttpd" ] && /etc/init.d/lighttpd restart
[ -n "$SERVICE_sysvinit_nginx" ] && /etc/init.d/nginx restart
[ -n "$SERVICE_sysvinit_rabbitmqserver" ] && /etc/init.d/rabbitmq-server restart
[ -n "$SERVICE_sysvinit_redisserver" ] && /etc/init.d/redis-server restart
[ -n "$SERVICE_sysvinit_rsync" ] && /etc/init.d/rsync restart
[ -n "$SERVICE_sysvinit_ssh" ] && /etc/init.d/ssh restart
[ -n "$SERVICE_sysvinit_sudo" ] && /etc/init.d/sudo restart
[ -n "$SERVICE_sysvinit_supervisor" ] && /etc/init.d/supervisor restart
[ -n "$SERVICE_sysvinit_sysstat" ] && /etc/init.d/sysstat restart
[ -n "$SERVICE_upstart_cloudconfig" ] && { restart cloud-config || start cloud-config; }
[ -n "$SERVICE_upstart_docker" ] && { restart docker || start docker; }
[ -n "$SERVICE_upstart_ssh" ] && { restart ssh || start ssh; }
